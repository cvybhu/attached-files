<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="870.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="853" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="853" > </text>
<g id="frames">
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.16%; 0.00%)</title><rect x="59.8" y="437" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (3 samples, 0.09%; 0.00%)</title><rect x="79.6" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.56" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="145.8" y="677" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.78" y="687.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="66.5" y="469" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.54" y="479.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.16%; -0.13%)</title><rect x="451.2" y="533" width="1.9" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="454.20" y="543.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.03%; +0.03%)</title><rect x="1153.9" y="789" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1156.92" y="799.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="392.0" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="395.05" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; +0.03%)</title><rect x="89.6" y="325" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="92.61" y="335.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (8 samples, 0.25%; 0.00%)</title><rect x="1141.3" y="645" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.27" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.19%; 0.00%)</title><rect x="31.2" y="437" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.20" y="447.5" ></text>
</g>
<g >
<title>abstract_type::from_string (5 samples, 0.16%; 0.00%)</title><rect x="15.2" y="533" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.21" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="18.2" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.18" y="575.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="1114.1" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1117.11" y="399.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; -0.22%)</title><rect x="393.9" y="597" width="2.6" height="15.0" fill="rgb(87,87,255)" rx="2" ry="2" />
<text  x="396.91" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (41 samples, 1.29%; 0.00%)</title><rect x="108.6" y="533" width="15.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.58" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="185.2" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="188.21" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="117.1" y="469" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.03%; +0.03%)</title><rect x="114.9" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="117.91" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (9 samples, 0.28%; 0.00%)</title><rect x="110.4" y="501" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.44" y="511.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="533" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="543.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; -0.25%)</title><rect x="642.4" y="613" width="0.4" height="15.0" fill="rgb(70,70,255)" rx="2" ry="2" />
<text  x="645.41" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (2 samples, 0.06%; 0.00%)</title><rect x="145.8" y="645" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.78" y="655.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; 0.00%)</title><rect x="1118.6" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.58" y="671.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%; 0.00%)</title><rect x="642.8" y="629" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="645.78" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="64.7" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.68" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.03%; -0.03%)</title><rect x="42.4" y="437" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="45.36" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.06%; -0.06%)</title><rect x="857.1" y="469" width="0.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="860.06" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="961.2" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="964.22" y="479.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="85.1" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="88.15" y="463.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="32.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.69" y="319.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (1 samples, 0.03%; -0.03%)</title><rect x="469.4" y="565" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="472.43" y="575.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="517.4" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="520.41" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="33.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.81" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; 0.00%)</title><rect x="1056.1" y="485" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1059.08" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (2 samples, 0.06%; +0.06%)</title><rect x="94.1" y="373" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="97.07" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%; -0.03%)</title><rect x="104.5" y="421" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="107.49" y="431.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (5 samples, 0.16%; +0.03%)</title><rect x="578.8" y="533" width="1.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="581.80" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (1 samples, 0.03%; 0.00%)</title><rect x="107.8" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.84" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%; +0.03%)</title><rect x="332.9" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="335.90" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%; +0.03%)</title><rect x="1105.9" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1108.93" y="511.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.03%; +0.03%)</title><rect x="48.3" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="51.32" y="479.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; 0.00%)</title><rect x="167.0" y="629" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="169.99" y="639.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="66.2" y="469" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="69.17" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="64.7" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.68" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.06%)</title><rect x="528.2" y="549" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="531.20" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; -0.03%)</title><rect x="174.4" y="629" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="177.43" y="639.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (8 samples, 0.25%; 0.00%)</title><rect x="1141.3" y="629" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.27" y="639.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (6 samples, 0.19%; 0.00%)</title><rect x="111.2" y="469" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.19" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="130.5" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="133.53" y="575.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (2 samples, 0.06%; -0.03%)</title><rect x="321.4" y="453" width="0.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="324.37" y="463.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.03%)</title><rect x="181.1" y="645" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="184.12" y="655.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.03%; -0.03%)</title><rect x="374.9" y="485" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="377.94" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.03%)</title><rect x="606.3" y="533" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="609.32" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (3 samples, 0.09%; 0.00%)</title><rect x="855.6" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.57" y="495.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (2 samples, 0.06%; +0.06%)</title><rect x="499.6" y="597" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="502.56" y="607.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="76.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (633 samples, 19.96%; -0.06%)</title><rect x="866.7" y="613" width="235.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="869.73" y="623.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::grant_role_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="128.3" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.30" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; +0.03%)</title><rect x="972.0" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="975.01" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.32%; +0.06%)</title><rect x="1134.9" y="629" width="3.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1137.94" y="639.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; +0.06%)</title><rect x="617.5" y="565" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="620.48" y="575.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.41%; +0.16%)</title><rect x="509.6" y="533" width="4.8" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="512.60" y="543.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.13%; +0.13%)</title><rect x="535.6" y="597" width="1.5" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="538.64" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.37" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.3" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.25" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="961.2" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="964.22" y="447.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (75 samples, 2.36%; +0.13%)</title><rect x="793.8" y="549" width="27.9" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="796.81" y="559.5" >s..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.06" y="543.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.98" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; +0.03%)</title><rect x="70.3" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="73.26" y="495.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (4 samples, 0.13%; 0.00%)</title><rect x="121.6" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.60" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (4 samples, 0.13%; -0.06%)</title><rect x="54.3" y="533" width="1.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="57.27" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="239.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%; +0.03%)</title><rect x="683.3" y="645" width="3.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="686.33" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="90.7" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.73" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.19" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="184.1" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="187.10" y="399.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.37" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%; 0.00%)</title><rect x="146.2" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.15" y="639.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="61.7" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="64.71" y="511.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.47%; +0.06%)</title><rect x="427.0" y="565" width="5.6" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="430.02" y="575.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (12 samples, 0.38%; 0.00%)</title><rect x="139.5" y="773" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.46" y="783.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (4 samples, 0.13%; 0.00%)</title><rect x="21.9" y="485" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.90" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (3 samples, 0.09%; 0.00%)</title><rect x="1151.3" y="677" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1154.31" y="687.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (6 samples, 0.19%; +0.09%)</title><rect x="50.9" y="357" width="2.3" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="53.92" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%; 0.00%)</title><rect x="23.8" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.76" y="575.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (6 samples, 0.19%; +0.06%)</title><rect x="46.5" y="485" width="2.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="49.46" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (2 samples, 0.06%; +0.06%)</title><rect x="885.7" y="565" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="888.70" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.06%)</title><rect x="712.0" y="645" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="714.97" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="91.8" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.84" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="537.5" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="540.50" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload_base (2 samples, 0.06%; 0.00%)</title><rect x="122.3" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="399.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; -0.09%)</title><rect x="242.5" y="613" width="3.7" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="245.50" y="623.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="558.0" y="533" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="560.96" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.03%; +0.03%)</title><rect x="45.0" y="453" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="47.97" y="463.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (249 samples, 7.85%; -0.06%)</title><rect x="405.1" y="581" width="92.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="408.07" y="591.5" >seastar::do..</text>
</g>
<g >
<title>create_partitions (337 samples, 10.62%; +0.03%)</title><rect x="11.5" y="677" width="125.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="14.49" y="687.5" >create_partitions</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; 0.00%)</title><rect x="69.1" y="453" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.15" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (12 samples, 0.38%; +0.03%)</title><rect x="89.2" y="341" width="4.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="92.24" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; -0.03%)</title><rect x="735.0" y="629" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="738.04" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (1 samples, 0.03%; +0.03%)</title><rect x="12.6" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="15.60" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.37" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (268 samples, 8.45%; 0.00%)</title><rect x="30.8" y="565" width="99.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.83" y="575.5" >cql3_parser:..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1036.4" y="437" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1039.36" y="447.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%; +0.06%)</title><rect x="468.7" y="549" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="471.68" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="322.1" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="325.11" y="463.5" ></text>
</g>
<g >
<title>seastar::io_queue::queue_request (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.03%; +0.03%)</title><rect x="508.9" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="511.86" y="559.5" ></text>
</g>
<g >
<title>cdc::do_update_streams_description (1 samples, 0.03%; 0.00%)</title><rect x="177.0" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="180.03" y="671.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="72.1" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.12" y="463.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="49.1" y="405" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="52.06" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (2 samples, 0.06%; +0.03%)</title><rect x="72.5" y="421" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="75.50" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_construct&lt;cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (8 samples, 0.25%; 0.00%)</title><rect x="20.8" y="549" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.79" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="104.9" y="229" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="107.86" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::operator= (1 samples, 0.03%; 0.00%)</title><rect x="101.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.51" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="23.4" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="26.39" y="527.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (3 samples, 0.09%; 0.00%)</title><rect x="26.7" y="565" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.74" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (20 samples, 0.63%; +0.06%)</title><rect x="375.3" y="501" width="7.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="378.31" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (2 samples, 0.06%; 0.00%)</title><rect x="852.6" y="549" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.59" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="122.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="107.1" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="110.09" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="110.4" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="113.44" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.03%; +0.03%)</title><rect x="136.9" y="677" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="139.85" y="687.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (5 samples, 0.16%; -0.03%)</title><rect x="627.9" y="533" width="1.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="630.90" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="77.3" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="80.33" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.06%; +0.06%)</title><rect x="382.0" y="485" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="385.01" y="495.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="580.7" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="583.66" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.06%; +0.06%)</title><rect x="609.3" y="549" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="612.30" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="721.3" y="629" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="724.27" y="639.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.03%; -0.03%)</title><rect x="1101.8" y="597" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1104.83" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (86 samples, 2.71%; +0.03%)</title><rect x="75.5" y="485" width="32.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="78.47" y="495.5" >cq..</text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="629.8" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="632.76" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="85.9" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="88.89" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (2 samples, 0.06%; -0.06%)</title><rect x="290.9" y="517" width="0.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="293.86" y="527.5" ></text>
</g>
<g >
<title>database::has_keyspace (8 samples, 0.25%; +0.03%)</title><rect x="841.4" y="597" width="3.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="844.43" y="607.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (28 samples, 0.88%; +0.03%)</title><rect x="691.5" y="661" width="10.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="694.51" y="671.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.07" y="383.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%; +0.03%)</title><rect x="1105.6" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1108.55" y="495.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; +0.03%)</title><rect x="1033.4" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1036.39" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (22 samples, 0.69%; +0.13%)</title><rect x="314.3" y="469" width="8.2" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="317.30" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="118.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.63" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (5 samples, 0.16%; 0.00%)</title><rect x="59.8" y="469" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="115.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.65" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; +0.03%)</title><rect x="76.6" y="309" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="79.59" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="33.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.81" y="431.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; -0.03%)</title><rect x="742.1" y="613" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="745.11" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="145.8" y="661" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.78" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="32.3" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.32" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (6 samples, 0.19%; -0.03%)</title><rect x="95.9" y="325" width="2.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="98.93" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="63.9" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.94" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="103.4" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.37" y="271.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="122.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="77.0" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.96" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (2 samples, 0.06%; +0.03%)</title><rect x="971.6" y="453" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="974.63" y="463.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="1146.5" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1149.48" y="655.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.47%; 0.00%)</title><rect x="1111.1" y="597" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.13" y="607.5" ></text>
</g>
<g >
<title>cql3::relation::to_column_definition (2 samples, 0.06%; 0.00%)</title><rect x="20.0" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.04" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.06%; 0.00%)</title><rect x="1149.5" y="629" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.45" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="395.8" y="581" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="398.77" y="591.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (37 samples, 1.17%; 0.00%)</title><rect x="161.8" y="661" width="13.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="164.78" y="671.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; -0.03%)</title><rect x="498.4" y="597" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="501.44" y="607.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.03%; +0.03%)</title><rect x="149.5" y="677" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="152.50" y="687.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (12 samples, 0.38%; 0.00%)</title><rect x="77.7" y="437" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.70" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::apply_weak (1 samples, 0.03%; 0.00%)</title><rect x="186.0" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.96" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="22.6" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="25.65" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="565" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="575.5" ></text>
</g>
<g >
<title>memtable_list::new_memtable (1 samples, 0.03%; 0.00%)</title><rect x="714.2" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.21" y="623.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="92.6" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.59" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (68 samples, 2.14%; -0.13%)</title><rect x="665.5" y="661" width="25.3" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="668.47" y="671.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="95.2" y="293" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="98.19" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::free (1 samples, 0.03%; +0.03%)</title><rect x="137.2" y="741" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="140.23" y="751.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (5 samples, 0.16%; 0.00%)</title><rect x="1104.4" y="517" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.44" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.19" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; 0.00%)</title><rect x="212.7" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.74" y="607.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="147.3" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.27" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.4" y="101" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.42" y="111.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="604.5" y="533" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="607.46" y="543.5" ></text>
</g>
<g >
<title>get_scheduling_groups (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="671.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; +0.03%)</title><rect x="138.0" y="677" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="140.97" y="687.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (3 samples, 0.09%; 0.00%)</title><rect x="26.7" y="581" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.74" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (2 samples, 0.06%; +0.06%)</title><rect x="1114.9" y="421" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1117.85" y="431.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.16%; 0.00%)</title><rect x="638.3" y="581" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="641.32" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="447.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; +0.03%)</title><rect x="91.5" y="277" width="1.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="94.47" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="697.5" y="613" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="700.47" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.9" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="335.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (2 samples, 0.06%; -0.03%)</title><rect x="20.0" y="549" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="23.04" y="559.5" ></text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.03%; +0.03%)</title><rect x="404.7" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="407.70" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="303.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (3 samples, 0.09%; +0.06%)</title><rect x="737.3" y="629" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="740.27" y="639.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.06%)</title><rect x="686.3" y="645" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="689.31" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.37" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="66.9" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.92" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (6 samples, 0.19%; 0.00%)</title><rect x="95.9" y="421" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.93" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="27.5" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="30.48" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (338 samples, 10.66%; 0.00%)</title><rect x="11.5" y="709" width="125.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.49" y="719.5" >std::_Function_..</text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (147 samples, 4.63%; +0.09%)</title><rect x="776.3" y="597" width="54.7" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="779.33" y="607.5" >cql3:..</text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.09%; +0.06%)</title><rect x="835.9" y="597" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="838.85" y="607.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (2 samples, 0.06%; 0.00%)</title><rect x="854.5" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.45" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="55.0" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.01" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="602.6" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="605.60" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::file_stat (1 samples, 0.03%; 0.00%)</title><rect x="713.5" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="716.46" y="623.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.16%; +0.16%)</title><rect x="595.9" y="517" width="1.9" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="598.91" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.37" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,227 samples, 38.68%; +0.06%)</title><rect x="188.9" y="661" width="456.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="191.93" y="671.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.03%; +0.03%)</title><rect x="195.3" y="645" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="198.26" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.13%; -0.03%)</title><rect x="74.0" y="453" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="76.98" y="463.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (331 samples, 10.44%; 0.00%)</title><rect x="13.3" y="661" width="123.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.35" y="671.5" >single_node_cql..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="27.5" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.48" y="511.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="50.2" y="325" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="53.18" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (4 samples, 0.13%; +0.09%)</title><rect x="518.2" y="533" width="1.4" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="521.16" y="543.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (13 samples, 0.41%; +0.06%)</title><rect x="286.0" y="517" width="4.9" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="289.03" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::drop_role_statement*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="127.9" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="130.93" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="65.1" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.06" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (25 samples, 0.79%; +0.06%)</title><rect x="1024.5" y="405" width="9.3" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1027.46" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (6 samples, 0.19%; 0.00%)</title><rect x="95.9" y="309" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.93" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (12 samples, 0.38%; -0.03%)</title><rect x="77.7" y="453" width="4.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="80.70" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="1140.9" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1143.90" y="655.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (717 samples, 22.60%; +0.03%)</title><rect x="851.8" y="661" width="266.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="854.85" y="671.5" >seastar::lambda_task&lt;seastar::execu..</text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (7 samples, 0.22%; +0.13%)</title><rect x="1051.2" y="501" width="2.6" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="1054.24" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="17.4" y="549" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="20.44" y="559.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.09%; 0.00%)</title><rect x="598.1" y="517" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="601.14" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="685.6" y="629" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="688.56" y="639.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="624.9" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="627.92" y="527.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="335.5" ></text>
</g>
<g >
<title>validation::validate_column_family (17 samples, 0.54%; -0.06%)</title><rect x="822.8" y="565" width="6.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="825.83" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.19%; +0.09%)</title><rect x="372.0" y="485" width="2.2" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="374.96" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%; 0.00%)</title><rect x="69.1" y="469" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.15" y="479.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (278 samples, 8.76%; 0.00%)</title><rect x="531.9" y="613" width="103.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="534.92" y="623.5" >query::queri..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="531.2" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="534.18" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="719.8" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="722.79" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="1149.1" y="661" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1152.08" y="671.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%; +0.03%)</title><rect x="177.0" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="180.03" y="607.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (5 samples, 0.16%; +0.03%)</title><rect x="368.2" y="421" width="1.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="371.24" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; 0.00%)</title><rect x="754.0" y="613" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="757.01" y="623.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%; -0.03%)</title><rect x="555.4" y="533" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="558.36" y="543.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (46 samples, 1.45%; +0.09%)</title><rect x="588.1" y="549" width="17.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="591.10" y="559.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="537.1" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="540.13" y="607.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="81.8" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="84.80" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.06%; 0.00%)</title><rect x="369.4" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="372.36" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.06%)</title><rect x="745.8" y="629" width="1.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="748.83" y="639.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.06%; +0.03%)</title><rect x="855.6" y="469" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="858.57" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (8 samples, 0.25%; +0.03%)</title><rect x="90.4" y="325" width="2.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="93.35" y="335.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (19 samples, 0.60%; +0.03%)</title><rect x="359.7" y="405" width="7.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="362.68" y="415.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (1 samples, 0.03%; 0.00%)</title><rect x="1110.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.02" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%; +0.03%)</title><rect x="114.2" y="469" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="117.16" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="128.3" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.30" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::syscall_pollfn::poll (1 samples, 0.03%; +0.03%)</title><rect x="1151.7" y="661" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1154.68" y="671.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; +0.03%)</title><rect x="591.4" y="533" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="594.44" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.07" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.06" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; -0.06%)</title><rect x="209.4" y="597" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="212.39" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.09%; +0.06%)</title><rect x="37.9" y="373" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="40.90" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::drop_role_statement*, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.9" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.93" y="511.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.03%; 0.00%)</title><rect x="1153.2" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.17" y="719.5" ></text>
</g>
<g >
<title>seastar::file::dma_write_impl (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="559.5" ></text>
</g>
<g >
<title>auth::resource::resource (2 samples, 0.06%; -0.09%)</title><rect x="785.6" y="565" width="0.8" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="788.63" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="351.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (2 samples, 0.06%; 0.00%)</title><rect x="184.5" y="661" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.47" y="671.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; 0.00%)</title><rect x="212.7" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.74" y="623.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.03%; 0.00%)</title><rect x="18.2" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.18" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.7" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.74" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="628.3" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="631.27" y="511.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (2 samples, 0.06%; 0.00%)</title><rect x="858.5" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.54" y="495.5" ></text>
</g>
<g >
<title>db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="76.2" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="99.3" y="293" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="102.28" y="303.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="751.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="607.8" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="610.81" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.8" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.79" y="239.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.03%; +0.03%)</title><rect x="149.1" y="677" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="152.13" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="182.6" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="185.61" y="655.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; +0.03%)</title><rect x="403.2" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="406.21" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (8 samples, 0.25%; +0.03%)</title><rect x="110.8" y="485" width="3.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="113.81" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="74.7" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="77.73" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%; 0.00%)</title><rect x="843.7" y="581" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.66" y="591.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (5 samples, 0.16%; 0.00%)</title><rect x="1106.3" y="517" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.30" y="527.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="374.6" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="377.56" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.06%; +0.06%)</title><rect x="392.4" y="565" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="395.42" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="941.5" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="944.50" y="575.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit_item (1 samples, 0.03%; +0.03%)</title><rect x="713.5" y="581" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="716.46" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.03%; +0.03%)</title><rect x="743.2" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="746.22" y="655.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="855.2" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="858.20" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; +0.03%)</title><rect x="845.2" y="645" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="848.15" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="119.7" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="122.74" y="399.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="13.0" y="661" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="15.98" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="631.6" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="634.62" y="575.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="303.9" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="306.88" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.9" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.41" y="559.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (3 samples, 0.09%; 0.00%)</title><rect x="1109.6" y="565" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.65" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="639.8" y="549" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="642.80" y="559.5" ></text>
</g>
<g >
<title>auth::get_permissions (2 samples, 0.06%; 0.00%)</title><rect x="134.6" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.62" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%; +0.09%)</title><rect x="659.9" y="645" width="1.5" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="662.89" y="655.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; +0.03%)</title><rect x="814.6" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="817.65" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.47%; 0.00%)</title><rect x="1111.1" y="613" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.13" y="623.5" ></text>
</g>
<g >
<title>checked_file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="447.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; 0.00%)</title><rect x="1091.4" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.42" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="146.2" y="597" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="149.15" y="607.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.19%; -0.06%)</title><rect x="576.6" y="533" width="2.2" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="579.56" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.05" y="191.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (5 samples, 0.16%; -0.03%)</title><rect x="124.9" y="533" width="1.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="127.95" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; +0.03%)</title><rect x="24.9" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="27.88" y="591.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%; +0.03%)</title><rect x="679.6" y="613" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="682.61" y="623.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="608.6" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="611.56" y="559.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.06%; 0.00%)</title><rect x="146.5" y="693" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.53" y="703.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="687.8" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="690.79" y="655.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; +0.03%)</title><rect x="1103.7" y="517" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1106.69" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (4 samples, 0.13%; -0.03%)</title><rect x="74.0" y="485" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="76.98" y="495.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (4 samples, 0.13%; 0.00%)</title><rect x="203.1" y="629" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="206.07" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="964.9" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="967.94" y="527.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (47 samples, 1.48%; +0.03%)</title><rect x="797.5" y="517" width="17.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="800.53" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.3" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.25" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; +0.03%)</title><rect x="117.1" y="261" width="1.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="120.14" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.37" y="399.5" ></text>
</g>
<g >
<title>freeze (6 samples, 0.19%; 0.00%)</title><rect x="1112.3" y="421" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.25" y="431.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.03%; +0.03%)</title><rect x="545.3" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="548.32" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (3 samples, 0.09%; 0.00%)</title><rect x="25.3" y="613" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.25" y="623.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="17.4" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.44" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.09%; +0.03%)</title><rect x="653.2" y="645" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="656.20" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="84.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.03" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.03%; +0.03%)</title><rect x="149.9" y="677" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="152.87" y="687.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (1 samples, 0.03%; 0.00%)</title><rect x="853.0" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.96" y="543.5" ></text>
</g>
<g >
<title>schema::partition_key_columns (1 samples, 0.03%; +0.03%)</title><rect x="24.1" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="27.14" y="607.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%; -0.03%)</title><rect x="1053.1" y="485" width="0.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1056.10" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.05" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::apply (1 samples, 0.03%; 0.00%)</title><rect x="186.0" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.96" y="543.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; +0.03%)</title><rect x="1055.7" y="501" width="3.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1058.71" y="511.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; -0.03%)</title><rect x="533.0" y="597" width="2.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="536.04" y="607.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="82.5" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="85.54" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="211.6" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="214.63" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.03%)</title><rect x="718.7" y="645" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="721.67" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="130.2" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.16" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.09%; 0.00%)</title><rect x="32.3" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.32" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (370 samples, 11.66%; +0.09%)</title><rect x="945.2" y="549" width="137.7" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="948.22" y="559.5" >service::storage_..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="341" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="351.5" ></text>
</g>
<g >
<title>reconcilable_result_builder::consume_end_of_partition (1 samples, 0.03%; 0.00%)</title><rect x="184.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.10" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (24 samples, 0.76%; 0.00%)</title><rect x="852.6" y="597" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.59" y="607.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.06%; 0.00%)</title><rect x="185.2" y="581" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.21" y="591.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.03%; 0.00%)</title><rect x="146.9" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.90" y="671.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (3 samples, 0.09%; +0.06%)</title><rect x="539.7" y="581" width="1.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="542.74" y="591.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; +0.03%)</title><rect x="856.7" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="859.68" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.03%; +0.03%)</title><rect x="851.5" y="661" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="854.48" y="671.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="661" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="671.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.13%; 0.00%)</title><rect x="772.6" y="565" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="775.61" y="575.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (647 samples, 20.40%; 0.00%)</title><rect x="861.5" y="645" width="240.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.52" y="655.5" >seastar::concrete_execution_sta..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="58.7" y="277" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="61.73" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="983.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="986.91" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="94.8" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.82" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%; +0.03%)</title><rect x="36.8" y="341" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="39.78" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="126.1" y="517" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="129.07" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="21.9" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.90" y="479.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.03%)</title><rect x="530.8" y="581" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="533.81" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.13%; +0.03%)</title><rect x="725.4" y="629" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="728.37" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (14 samples, 0.44%; +0.19%)</title><rect x="361.2" y="373" width="5.2" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="364.17" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="642.0" y="613" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="645.04" y="623.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.03%; +0.03%)</title><rect x="1109.6" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1112.65" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.47%; 0.00%)</title><rect x="1111.1" y="565" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.13" y="575.5" ></text>
</g>
<g >
<title>perf_simple_que (3,172 samples, 100.00%; 0.00%)</title><rect x="10.0" y="805" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (2 samples, 0.06%; +0.03%)</title><rect x="690.8" y="661" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="693.77" y="671.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (2 samples, 0.06%; 0.00%)</title><rect x="1116.0" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.97" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.06" y="431.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (7 samples, 0.22%; -0.06%)</title><rect x="889.8" y="501" width="2.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="892.79" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.06%)</title><rect x="424.8" y="501" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="427.79" y="511.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (4 samples, 0.13%; 0.00%)</title><rect x="1104.4" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.44" y="511.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.03%; +0.03%)</title><rect x="14.1" y="613" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="17.09" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.03%; 0.00%)</title><rect x="853.0" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.96" y="511.5" ></text>
</g>
<g >
<title>service::client_state::has_access (4 samples, 0.13%; 0.00%)</title><rect x="133.9" y="597" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.88" y="607.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; +0.03%)</title><rect x="1107.0" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1110.04" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.24" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%; +0.03%)</title><rect x="308.3" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="311.35" y="495.5" ></text>
</g>
<g >
<title>table::query (1 samples, 0.03%; +0.03%)</title><rect x="645.0" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="648.01" y="655.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="683.0" y="629" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="685.96" y="639.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (26 samples, 0.82%; 0.00%)</title><rect x="34.9" y="453" width="9.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.92" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="38.6" y="357" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="41.64" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (1 samples, 0.03%; 0.00%)</title><rect x="148.8" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.76" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="100.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.03" y="431.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.03%; 0.00%)</title><rect x="714.6" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.58" y="655.5" ></text>
</g>
<g >
<title>__start_context (10 samples, 0.32%; 0.00%)</title><rect x="144.3" y="773" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.29" y="783.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="71.8" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.75" y="287.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%; 0.00%)</title><rect x="521.5" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="524.51" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.35%; 0.00%)</title><rect x="1111.5" y="453" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.51" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="128.3" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.30" y="543.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%; +0.03%)</title><rect x="467.9" y="549" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="470.94" y="559.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; +0.03%)</title><rect x="184.5" y="597" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="187.47" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="103.4" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.37" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (2 samples, 0.06%; +0.03%)</title><rect x="151.0" y="677" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="153.99" y="687.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="186.0" y="453" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="188.96" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="130.2" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.16" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="652.5" y="645" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="655.45" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="127.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (71 samples, 2.24%; -0.19%)</title><rect x="343.7" y="437" width="26.4" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="346.69" y="447.5" >c..</text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%; 0.00%)</title><rect x="1153.2" y="789" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.17" y="799.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="49.8" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.80" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; -0.03%)</title><rect x="36.4" y="357" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="39.41" y="367.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="833.2" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="836.25" y="607.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.09%; -0.19%)</title><rect x="388.0" y="549" width="1.1" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="390.96" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (6 samples, 0.19%; +0.09%)</title><rect x="164.0" y="645" width="2.2" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="167.01" y="655.5" ></text>
</g>
<g >
<title>posix_memalign (4 samples, 0.13%; +0.06%)</title><rect x="368.6" y="405" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="371.61" y="415.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="145.8" y="709" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.78" y="719.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="120.9" y="421" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="123.86" y="431.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (13 samples, 0.41%; -0.06%)</title><rect x="469.8" y="565" width="4.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="472.80" y="575.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%; 0.00%)</title><rect x="59.8" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.19" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (113 samples, 3.56%; 0.00%)</title><rect x="1040.8" y="517" width="42.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1043.83" y="527.5" >ser..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="853.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.96" y="495.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (16 samples, 0.50%; 0.00%)</title><rect x="574.7" y="549" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="577.70" y="559.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; 0.00%)</title><rect x="818.4" y="533" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="821.37" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="701.6" y="613" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="704.56" y="623.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (18 samples, 0.57%; 0.00%)</title><rect x="232.8" y="613" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="235.83" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.03%; +0.03%)</title><rect x="75.1" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="78.10" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; -0.06%)</title><rect x="838.1" y="597" width="1.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="841.08" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="104.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.12" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="34.2" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="37.18" y="463.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; +0.03%)</title><rect x="855.9" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="858.94" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (10 samples, 0.32%; 0.00%)</title><rect x="49.4" y="517" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.43" y="527.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; 0.00%)</title><rect x="844.4" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="847.41" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="401.3" y="565" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="404.35" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="118.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.63" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.09%)</title><rect x="306.9" y="437" width="0.3" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="309.86" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="1088.8" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1091.81" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="17.1" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="20.07" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; -0.03%)</title><rect x="59.8" y="325" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="62.85" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; +0.03%)</title><rect x="610.4" y="549" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="613.42" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; +0.09%)</title><rect x="295.7" y="501" width="1.5" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="298.70" y="511.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; +0.03%)</title><rect x="24.5" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="27.51" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="861.1" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="864.15" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (3 samples, 0.09%; 0.00%)</title><rect x="52.0" y="341" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.04" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (9 samples, 0.28%; 0.00%)</title><rect x="1112.3" y="437" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.25" y="447.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; -0.03%)</title><rect x="921.4" y="565" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="924.41" y="575.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.06%)</title><rect x="307.2" y="469" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="310.23" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; -0.03%)</title><rect x="209.4" y="581" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="212.39" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="833.2" y="581" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="836.25" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (2 samples, 0.06%; +0.06%)</title><rect x="927.0" y="565" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="929.99" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="389" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="29.7" y="325" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="32.72" y="335.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.06%; 0.00%)</title><rect x="857.1" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.06" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.19%; -0.03%)</title><rect x="31.2" y="421" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="34.20" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="111.6" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="415.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (5 samples, 0.16%; +0.03%)</title><rect x="831.0" y="581" width="1.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="834.02" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.07" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.4" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.36" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%; +0.03%)</title><rect x="46.1" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="49.08" y="479.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="385.4" y="549" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="388.35" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="103.0" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.00" y="383.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (3 samples, 0.09%; +0.03%)</title><rect x="892.4" y="501" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="895.40" y="511.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; 0.00%)</title><rect x="874.5" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="877.54" y="591.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; 0.00%)</title><rect x="926.2" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="929.25" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (5 samples, 0.16%; -0.03%)</title><rect x="40.5" y="437" width="1.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="43.50" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="123.1" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="126.09" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="716.8" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="719.81" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (4 samples, 0.13%; +0.06%)</title><rect x="849.2" y="661" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="852.24" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.41" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="92.6" y="165" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="95.59" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.9" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::revoke_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="130.2" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.16" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (2 samples, 0.06%; 0.00%)</title><rect x="55.0" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.01" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="59.8" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="367.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="527.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (3 samples, 0.09%; +0.06%)</title><rect x="52.0" y="325" width="1.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="55.04" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.03%)</title><rect x="640.2" y="613" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="643.18" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="175.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (1 samples, 0.03%; 0.00%)</title><rect x="107.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.84" y="463.5" ></text>
</g>
<g >
<title>distributed_loader::init_non_system_keyspaces (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="207.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="645" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="55.0" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.01" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (4 samples, 0.13%; +0.03%)</title><rect x="35.7" y="373" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="38.67" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="79.6" y="261" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.56" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="294.2" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="297.21" y="527.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%; 0.00%)</title><rect x="146.5" y="709" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.53" y="719.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.03%)</title><rect x="187.1" y="661" width="1.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="190.07" y="671.5" ></text>
</g>
<g >
<title>handle_intel.constprop.0 (1 samples, 0.03%; 0.00%)</title><rect x="1172.9" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.89" y="799.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (3 samples, 0.09%; -0.03%)</title><rect x="700.8" y="645" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="703.81" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="107.5" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.47" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="558.3" y="549" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="561.34" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (6 samples, 0.19%; 0.00%)</title><rect x="50.9" y="389" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="49.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.80" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="99.7" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.65" y="399.5" ></text>
</g>
<g >
<title>table::query (1,155 samples, 36.41%; +0.32%)</title><rect x="213.1" y="629" width="429.7" height="15.0" fill="rgb(255,35,35)" rx="2" ry="2" />
<text  x="216.11" y="639.5" >table::query</text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="786.4" y="565" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="789.37" y="575.5" ></text>
</g>
<g >
<title>__atomic_compare_exchange (1 samples, 0.03%; +0.03%)</title><rect x="139.1" y="773" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="142.09" y="783.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="145.4" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.41" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.06%)</title><rect x="659.1" y="645" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="662.15" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; -0.06%)</title><rect x="1093.3" y="565" width="3.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1096.28" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (11 samples, 0.35%; 0.00%)</title><rect x="854.1" y="533" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.08" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="63.9" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.94" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.67" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="925.9" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="928.88" y="559.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (10 samples, 0.32%; +0.03%)</title><rect x="924.0" y="581" width="3.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="927.02" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="127.2" y="533" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.18" y="543.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.50%; 0.00%)</title><rect x="1014.0" y="421" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1017.04" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="65.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.06" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (5 samples, 0.16%; 0.00%)</title><rect x="114.2" y="501" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.16" y="511.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.06%; +0.03%)</title><rect x="335.1" y="437" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="338.13" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.03" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.09%; 0.00%)</title><rect x="69.1" y="485" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.15" y="495.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="309" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="129.4" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="132.41" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.16%; -0.22%)</title><rect x="352.6" y="421" width="1.9" height="15.0" fill="rgb(87,87,255)" rx="2" ry="2" />
<text  x="355.62" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="415.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="28.6" y="597" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="31.60" y="607.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.03%; 0.00%)</title><rect x="501.0" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.05" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="183.7" y="373" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="186.73" y="383.5" ></text>
</g>
<g >
<title>main (2,700 samples, 85.12%; 0.00%)</title><rect x="148.8" y="773" width="1004.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.76" y="783.5" >main</text>
</g>
<g >
<title>make_combined_reader (25 samples, 0.79%; -0.25%)</title><rect x="549.0" y="549" width="9.3" height="15.0" fill="rgb(70,70,255)" rx="2" ry="2" />
<text  x="552.04" y="559.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (2 samples, 0.06%; +0.06%)</title><rect x="1116.7" y="645" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1119.72" y="655.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; -0.03%)</title><rect x="948.9" y="533" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="951.94" y="543.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (17 samples, 0.54%; -0.03%)</title><rect x="912.1" y="533" width="6.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="915.11" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.59" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="1033.8" y="405" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1036.76" y="415.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="103.4" y="245" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="106.37" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="115.3" y="309" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="118.28" y="319.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.09%; 0.00%)</title><rect x="37.9" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.90" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="66.2" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.17" y="495.5" ></text>
</g>
<g >
<title>sstables::sstable::open_or_create_data (1 samples, 0.03%; 0.00%)</title><rect x="645.4" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.38" y="623.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; 0.00%)</title><rect x="334.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="337.02" y="463.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (4 samples, 0.13%; -0.03%)</title><rect x="901.3" y="469" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="904.32" y="479.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="1112.3" y="389" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.25" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="66.5" y="485" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.54" y="495.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (3 samples, 0.09%; -0.13%)</title><rect x="41.2" y="421" width="1.2" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="44.25" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="877.5" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="880.52" y="591.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (1 samples, 0.03%; 0.00%)</title><rect x="860.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.03" y="543.5" ></text>
</g>
<g >
<title>visit&lt;abstract_type::get_string (1 samples, 0.03%; 0.00%)</title><rect x="185.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.59" y="511.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.03%; +0.03%)</title><rect x="1152.1" y="597" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1155.06" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.41" y="527.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (3 samples, 0.09%; 0.00%)</title><rect x="26.7" y="533" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.74" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="166.2" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="169.24" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="49.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.80" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="805.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="808.72" y="511.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.03%; +0.03%)</title><rect x="1107.8" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1110.79" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.91" y="495.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.06%; 0.00%)</title><rect x="574.0" y="549" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="576.96" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (9 samples, 0.28%; 0.00%)</title><rect x="78.4" y="389" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.45" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="92.2" y="245" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="95.21" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="431.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (17 samples, 0.54%; +0.35%)</title><rect x="808.7" y="501" width="6.3" height="15.0" fill="rgb(255,17,17)" rx="2" ry="2" />
<text  x="811.69" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="743.2" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.22" y="671.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (321 samples, 10.12%; +0.03%)</title><rect x="13.7" y="629" width="119.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="16.72" y="639.5" >cql3::query_pr..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%; 0.00%)</title><rect x="36.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.78" y="367.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; 0.00%)</title><rect x="854.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.82" y="463.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.03%; +0.03%)</title><rect x="144.7" y="725" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="147.67" y="735.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.16%; 0.00%)</title><rect x="59.8" y="389" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (40 samples, 1.26%; +0.03%)</title><rect x="888.3" y="517" width="14.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="891.30" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="116.4" y="309" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="119.39" y="319.5" ></text>
</g>
<g >
<title>cql3::column_identifier::column_identifier (1 samples, 0.03%; 0.00%)</title><rect x="185.6" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.59" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="112.3" y="325" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="115.30" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="66.2" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.17" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; +0.03%)</title><rect x="109.3" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="112.33" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="559.1" y="549" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="562.08" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="116.0" y="309" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="119.02" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (95 samples, 2.99%; +0.03%)</title><rect x="1002.5" y="453" width="35.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1005.51" y="463.5" >se..</text>
</g>
<g >
<title>service::storage_proxy::query_singular (355 samples, 11.19%; -0.13%)</title><rect x="950.8" y="533" width="132.1" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="953.80" y="543.5" >service::storage..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (250 samples, 7.88%; +0.13%)</title><rect x="292.0" y="533" width="93.0" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="294.98" y="543.5" >partition_s..</text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="816.5" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="819.51" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.09%; 0.00%)</title><rect x="62.1" y="501" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.08" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.4" y="85" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.42" y="95.5" ></text>
</g>
<g >
<title>boost::program_options::option_description::~option_description (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.23" y="767.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.03%; -0.22%)</title><rect x="1049.8" y="501" width="0.3" height="15.0" fill="rgb(87,87,255)" rx="2" ry="2" />
<text  x="1052.75" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (38 samples, 1.20%; 0.00%)</title><rect x="109.7" y="517" width="14.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="527.5" ></text>
</g>
<g >
<title>seastar::file::dma_write_impl (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="479.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.38%; 0.00%)</title><rect x="139.5" y="757" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.46" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; -0.03%)</title><rect x="111.9" y="341" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="114.93" y="351.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; +0.03%)</title><rect x="94.8" y="389" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="97.82" y="399.5" ></text>
</g>
<g >
<title>multishard_combining_reader::on_partition_range_change (1 samples, 0.03%; 0.00%)</title><rect x="183.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_move_assign (1 samples, 0.03%; +0.03%)</title><rect x="126.8" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="129.81" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="113.4" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="116.42" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (5 samples, 0.16%; 0.00%)</title><rect x="15.2" y="565" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.21" y="575.5" ></text>
</g>
<g >
<title>db::get_cdc_streams_descriptions_v2_mutation (1 samples, 0.03%; 0.00%)</title><rect x="177.0" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="180.03" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="128.3" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="131.30" y="495.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.09%; -0.03%)</title><rect x="630.5" y="533" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="633.50" y="543.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="80.7" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.68" y="303.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="1153.2" y="677" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1156.17" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.06%)</title><rect x="591.8" y="517" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="594.82" y="527.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.06%; +0.03%)</title><rect x="339.2" y="421" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="342.22" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (48 samples, 1.51%; 0.00%)</title><rect x="31.2" y="517" width="17.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.20" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; +0.03%)</title><rect x="114.5" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="117.53" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.03%; +0.03%)</title><rect x="403.6" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="406.58" y="591.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (2 samples, 0.06%; -0.03%)</title><rect x="55.0" y="517" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="58.01" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="533.0" y="581" width="2.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="536.04" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.03%; +0.03%)</title><rect x="84.8" y="453" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="87.77" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator=&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.04" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.66%; 0.00%)</title><rect x="1103.0" y="629" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.95" y="639.5" ></text>
</g>
<g >
<title>abstract_type::get_string (1 samples, 0.03%; 0.00%)</title><rect x="185.6" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.59" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.19%; 0.00%)</title><rect x="50.9" y="437" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="1037.8" y="453" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1040.85" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="80.3" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.31" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.89" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (7 samples, 0.22%; 0.00%)</title><rect x="79.2" y="357" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.19" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%; -0.22%)</title><rect x="643.5" y="645" width="1.5" height="15.0" fill="rgb(87,87,255)" rx="2" ry="2" />
<text  x="646.52" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (2 samples, 0.06%; 0.00%)</title><rect x="26.7" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.74" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="118.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.63" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.13%; +0.06%)</title><rect x="545.7" y="565" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="548.69" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.13%; -0.03%)</title><rect x="91.8" y="261" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="94.84" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="81.4" y="309" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="84.42" y="319.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="735.8" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="738.78" y="639.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="956.8" y="517" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="959.75" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="26.0" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="29.00" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="88.9" y="357" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="91.87" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; +0.03%)</title><rect x="120.5" y="405" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="123.49" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; -0.16%)</title><rect x="889.8" y="469" width="2.6" height="15.0" fill="rgb(122,122,255)" rx="2" ry="2" />
<text  x="892.79" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="70.6" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="73.64" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="90.7" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.73" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; +0.03%)</title><rect x="49.4" y="501" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="52.43" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="76.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="351.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="127.2" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="130.18" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::~_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="121.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.60" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="33.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.81" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.19%; 0.00%)</title><rect x="95.9" y="341" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.93" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.06%)</title><rect x="700.1" y="645" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="703.07" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="71.0" y="357" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="74.01" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.09%; 0.00%)</title><rect x="821.7" y="565" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="824.72" y="575.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::expression::impl*&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="67.7" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="70.66" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (150 samples, 4.73%; 0.00%)</title><rect x="984.3" y="485" width="55.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="987.28" y="495.5" >servi..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (13 samples, 0.41%; -0.19%)</title><rect x="722.0" y="645" width="4.9" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="725.02" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (38 samples, 1.20%; 0.00%)</title><rect x="482.1" y="549" width="14.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="485.07" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="1153.2" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.17" y="767.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (7 samples, 0.22%; -0.03%)</title><rect x="637.6" y="597" width="2.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="640.57" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="495.5" ></text>
</g>
<g >
<title>reader_permit::signal (2 samples, 0.06%; 0.00%)</title><rect x="389.8" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="392.82" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.07" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%; 0.00%)</title><rect x="62.1" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.08" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="111.9" y="293" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="114.93" y="303.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (2 samples, 0.06%; +0.03%)</title><rect x="506.6" y="549" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="509.63" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%; +0.03%)</title><rect x="31.9" y="373" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="34.95" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.47%; 0.00%)</title><rect x="1111.1" y="549" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.13" y="559.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.03%)</title><rect x="605.2" y="549" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="608.21" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="383.5" ></text>
</g>
<g >
<title>sstables::sstable::new_sstable_component_file (1 samples, 0.03%; 0.00%)</title><rect x="645.4" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.38" y="607.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; 0.00%)</title><rect x="696.7" y="629" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="699.72" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="834.0" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="836.99" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="71.4" y="309" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="74.38" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (23 samples, 0.73%; +0.06%)</title><rect x="1102.2" y="645" width="8.6" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1105.21" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="767.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="787.9" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="790.86" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.03%; 0.00%)</title><rect x="664.7" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="667.73" y="639.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="59.8" y="309" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="62.85" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="335.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (2 samples, 0.06%; +0.06%)</title><rect x="742.5" y="645" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="745.48" y="655.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="393.2" y="565" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="396.17" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="351.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,700 samples, 85.12%; 0.00%)</title><rect x="148.8" y="757" width="1004.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.76" y="767.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (7 samples, 0.22%; +0.03%)</title><rect x="20.8" y="501" width="2.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="23.79" y="511.5" ></text>
</g>
<g >
<title>database::find_schema (9 samples, 0.28%; +0.03%)</title><rect x="777.8" y="581" width="3.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="780.82" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (64 samples, 2.02%; -0.19%)</title><rect x="1059.1" y="501" width="23.8" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="1062.05" y="511.5" >s..</text>
</g>
<g >
<title>cql3::constants::setter::execute (10 samples, 0.32%; +0.03%)</title><rect x="854.1" y="501" width="3.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="857.08" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.67" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; 0.00%)</title><rect x="1149.8" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.82" y="575.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.13%; +0.13%)</title><rect x="553.9" y="533" width="1.5" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="556.87" y="543.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; 0.00%)</title><rect x="1050.9" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1053.87" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="806.1" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="809.09" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%; +0.03%)</title><rect x="45.7" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="48.71" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.32%; -0.03%)</title><rect x="144.3" y="741" width="3.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="147.29" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="74.0" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="76.98" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.03%; +0.03%)</title><rect x="299.4" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="302.42" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="122.0" y="437" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="124.97" y="447.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="598.9" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="601.88" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (10 samples, 0.32%; -0.03%)</title><rect x="304.3" y="485" width="3.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="307.26" y="495.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; +0.03%)</title><rect x="379.0" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="382.03" y="495.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (53 samples, 1.67%; -0.19%)</title><rect x="1062.8" y="469" width="19.7" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="1065.77" y="479.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (4 samples, 0.13%; -0.03%)</title><rect x="121.6" y="469" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="124.60" y="479.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="751.8" y="597" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.78" y="607.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%; 0.00%)</title><rect x="854.5" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.45" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (278 samples, 8.76%; -0.03%)</title><rect x="29.3" y="597" width="103.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="32.34" y="607.5" >seastar::non..</text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (48 samples, 1.51%; +0.09%)</title><rect x="886.4" y="565" width="17.9" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="889.44" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="652.1" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="655.08" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="62.1" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.08" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="1111.1" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.13" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%; +0.03%)</title><rect x="43.9" y="405" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="46.85" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.09%; -0.06%)</title><rect x="71.0" y="453" width="1.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="74.01" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="495.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="972.4" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="975.38" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (2 samples, 0.06%; 0.00%)</title><rect x="45.7" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.71" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; +0.03%)</title><rect x="675.9" y="613" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="678.89" y="623.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (1 samples, 0.03%; 0.00%)</title><rect x="853.0" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.96" y="527.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.54%; 0.00%)</title><rect x="996.2" y="453" width="6.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="999.19" y="463.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.98" y="383.5" ></text>
</g>
<g >
<title>clustering_key_prefix::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="853.7" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="856.71" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.05" y="239.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="599.3" y="501" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="602.26" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (4 samples, 0.13%; 0.00%)</title><rect x="121.6" y="485" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.60" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::revoke_statement*, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="130.2" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.16" y="511.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (56 samples, 1.77%; +0.03%)</title><rect x="1062.0" y="485" width="20.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1065.03" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (6 samples, 0.19%; 0.00%)</title><rect x="95.9" y="373" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.93" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.87" y="527.5" ></text>
</g>
<g >
<title>seastar::posix_file_real_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="530.1" y="565" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="533.06" y="575.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="115.6" y="277" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="118.65" y="287.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (1 samples, 0.03%; +0.03%)</title><rect x="762.6" y="613" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="765.57" y="623.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (3 samples, 0.09%; 0.00%)</title><rect x="581.0" y="549" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="584.03" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (2 samples, 0.06%; 0.00%)</title><rect x="664.7" y="645" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="667.73" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.19%; 0.00%)</title><rect x="79.6" y="341" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.56" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; 0.00%)</title><rect x="1136.4" y="613" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1139.43" y="623.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.03%; 0.00%)</title><rect x="146.2" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.15" y="623.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (1 samples, 0.03%; +0.03%)</title><rect x="832.9" y="597" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="835.88" y="607.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.03%; 0.00%)</title><rect x="212.7" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.74" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.3" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.25" y="415.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="154.0" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.97" y="687.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (2 samples, 0.06%; +0.06%)</title><rect x="927.7" y="581" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="930.74" y="591.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (6 samples, 0.19%; 0.00%)</title><rect x="633.1" y="565" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="636.11" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="65.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.80" y="319.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%; 0.00%)</title><rect x="994.0" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.95" y="463.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (2 samples, 0.06%; 0.00%)</title><rect x="94.1" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.07" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; +0.06%)</title><rect x="1108.9" y="517" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1111.90" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="383.5" ></text>
</g>
<g >
<title>[[vdso]] (28 samples, 0.88%; +0.06%)</title><rect x="1157.6" y="773" width="10.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1160.64" y="783.5" ></text>
</g>
<g >
<title>query_result_builder::consume (94 samples, 2.96%; 0.00%)</title><rect x="434.5" y="565" width="34.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="437.46" y="575.5" >qu..</text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (175 samples, 5.52%; +0.25%)</title><rect x="975.0" y="501" width="65.1" height="15.0" fill="rgb(255,70,70)" rx="2" ry="2" />
<text  x="977.98" y="511.5" >service..</text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.06%)</title><rect x="949.7" y="501" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="952.68" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; -0.03%)</title><rect x="202.7" y="629" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="205.70" y="639.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (3 samples, 0.09%; -0.03%)</title><rect x="98.5" y="421" width="1.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="101.54" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; +0.03%)</title><rect x="29.3" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="32.34" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (29 samples, 0.91%; 0.00%)</title><rect x="34.6" y="469" width="10.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.55" y="479.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.03%; +0.03%)</title><rect x="1153.5" y="789" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1156.54" y="799.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; +0.03%)</title><rect x="856.3" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="859.31" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="18.2" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.18" y="559.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="1153.2" y="773" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.17" y="783.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.03%; 0.00%)</title><rect x="860.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.03" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="76.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; 0.00%)</title><rect x="678.9" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="681.87" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="49.1" y="501" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="52.06" y="511.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%; 0.00%)</title><rect x="856.3" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="859.31" y="479.5" ></text>
</g>
<g >
<title>row::compact_and_expire (41 samples, 1.29%; 0.00%)</title><rect x="481.0" y="565" width="15.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="483.96" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (15 samples, 0.47%; 0.00%)</title><rect x="1111.1" y="533" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.13" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="69.1" y="437" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.15" y="447.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.03%; +0.03%)</title><rect x="948.6" y="533" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="951.57" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.09%; 0.00%)</title><rect x="58.7" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="463.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; +0.06%)</title><rect x="819.5" y="533" width="2.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="822.48" y="543.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%; 0.00%)</title><rect x="73.2" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.24" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.13%; +0.03%)</title><rect x="102.6" y="405" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="105.63" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.67" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (31 samples, 0.98%; +0.09%)</title><rect x="484.7" y="533" width="11.5" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="487.68" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; +0.09%)</title><rect x="1094.4" y="549" width="2.2" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="1097.39" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="101.1" y="357" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="104.14" y="367.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; 0.00%)</title><rect x="988.4" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="991.37" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="74.0" y="469" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.98" y="479.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (40 samples, 1.26%; +0.25%)</title><rect x="453.1" y="533" width="14.8" height="15.0" fill="rgb(255,70,70)" rx="2" ry="2" />
<text  x="456.06" y="543.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%; 0.00%)</title><rect x="1034.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1037.13" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (38 samples, 1.20%; +0.13%)</title><rect x="1020.0" y="421" width="14.1" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="1022.99" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="99.7" y="373" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="102.65" y="383.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (6 samples, 0.19%; -0.13%)</title><rect x="774.1" y="565" width="2.2" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="777.10" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.05" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (12 samples, 0.38%; -0.03%)</title><rect x="77.7" y="469" width="4.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="80.70" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (8 samples, 0.25%; +0.03%)</title><rect x="78.8" y="373" width="3.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="81.82" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="293" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="303.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="663.2" y="645" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="666.24" y="655.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.03%; +0.03%)</title><rect x="1116.0" y="453" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1118.97" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="90.7" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.73" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (39 samples, 1.23%; -0.19%)</title><rect x="904.3" y="565" width="14.5" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="907.30" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="126.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.44" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.19%)</title><rect x="690.4" y="645" width="0.4" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="693.40" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; +0.03%)</title><rect x="57.6" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="60.62" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base (2 samples, 0.06%; 0.00%)</title><rect x="122.3" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="122.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::file_size (1 samples, 0.03%; 0.00%)</title><rect x="713.5" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="716.46" y="639.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.03%; 0.00%)</title><rect x="522.3" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="525.25" y="575.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%; 0.00%)</title><rect x="918.4" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.44" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::register_stats (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="559.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (43 samples, 1.36%; -0.03%)</title><rect x="888.3" y="533" width="16.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="891.30" y="543.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; 0.00%)</title><rect x="1133.8" y="645" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1136.83" y="655.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.19%; 0.00%)</title><rect x="63.9" y="501" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.94" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (7 samples, 0.22%; 0.00%)</title><rect x="20.8" y="533" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.79" y="543.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (2 samples, 0.06%; 0.00%)</title><rect x="20.0" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.04" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.19" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="28.2" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="31.23" y="591.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (2 samples, 0.06%; -0.03%)</title><rect x="480.2" y="565" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="483.21" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="91.5" y="293" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.47" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (26 samples, 0.82%; +0.06%)</title><rect x="14.5" y="597" width="9.6" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="17.46" y="607.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="383.5" ></text>
</g>
<g >
<title>seastar::io_queue::find_or_create_class (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="787.9" y="549" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="790.86" y="559.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.27" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="62.1" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.08" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="91.1" y="229" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="94.10" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::~_Optional_payload (1 samples, 0.03%; 0.00%)</title><rect x="121.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.60" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.13%; +0.06%)</title><rect x="1112.6" y="357" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1115.62" y="367.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_errorRecovery (1 samples, 0.03%; +0.03%)</title><rect x="30.1" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="33.09" y="543.5" ></text>
</g>
<g >
<title>clustering_key_prefix::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="184.5" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.47" y="623.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="619.3" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="622.34" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="122.3" y="229" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="125.35" y="239.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="96.7" y="229" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.68" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="74.4" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.36" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; +0.06%)</title><rect x="79.6" y="229" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="82.56" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="50.2" y="485" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="53.18" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (1 samples, 0.03%; +0.03%)</title><rect x="137.6" y="741" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="140.60" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="651.3" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="654.34" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="95.9" y="293" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="98.93" y="303.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (23 samples, 0.73%; 0.00%)</title><rect x="87.0" y="421" width="8.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.01" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.03%; 0.00%)</title><rect x="853.0" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.96" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; +0.03%)</title><rect x="859.7" y="517" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="862.66" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.06%)</title><rect x="96.7" y="133" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="99.68" y="143.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.03%; +0.03%)</title><rect x="936.7" y="565" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="939.66" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (3 samples, 0.09%; -0.03%)</title><rect x="79.6" y="309" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="82.56" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="63.6" y="469" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="66.57" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; -0.09%)</title><rect x="1113.7" y="341" width="0.4" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="1116.74" y="351.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="25.3" y="581" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="28.25" y="591.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="196.0" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="199.00" y="655.5" ></text>
</g>
<g >
<title>auth::resource::parent (3 samples, 0.09%; -0.06%)</title><rect x="792.7" y="549" width="1.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="795.70" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.59" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="799.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="664.7" y="613" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="667.73" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="55.4" y="405" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="58.38" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="431.9" y="549" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="434.85" y="559.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; +0.13%)</title><rect x="918.8" y="565" width="2.6" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="921.81" y="575.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (3 samples, 0.09%; +0.09%)</title><rect x="600.4" y="501" width="1.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="603.37" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.07" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.38%; +0.03%)</title><rect x="967.9" y="485" width="4.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="970.91" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="64.7" y="373" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="67.68" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.06%)</title><rect x="813.9" y="485" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="816.90" y="495.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.39%; 0.00%)</title><rect x="1173.3" y="789" width="16.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1176.26" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="99.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.65" y="415.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="511.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%; 0.00%)</title><rect x="185.6" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.59" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (3 samples, 0.09%; 0.00%)</title><rect x="26.7" y="597" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.74" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload (1 samples, 0.03%; 0.00%)</title><rect x="124.6" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.58" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="63.6" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.57" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="62.5" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.45" y="383.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="212.4" y="629" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="215.37" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; 0.00%)</title><rect x="243.2" y="597" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="246.25" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="120.1" y="181" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="123.11" y="191.5" ></text>
</g>
<g >
<title>mutation_querier::consume (90 samples, 2.84%; +0.09%)</title><rect x="434.5" y="549" width="33.4" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="437.46" y="559.5" >mu..</text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="1146.5" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1149.48" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.7" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.74" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="1035.6" y="405" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1038.62" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (7 samples, 0.22%; -0.09%)</title><rect x="599.3" y="517" width="2.6" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="602.26" y="527.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (26 samples, 0.82%; +0.06%)</title><rect x="908.8" y="549" width="9.6" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="911.76" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="325" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="74.4" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.36" y="367.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.09%; 0.00%)</title><rect x="1038.6" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1041.59" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="1111.9" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1114.88" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="308.0" y="485" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="310.98" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (5 samples, 0.16%; -0.03%)</title><rect x="15.2" y="549" width="1.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="18.21" y="559.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="860.0" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="863.03" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%; 0.00%)</title><rect x="174.1" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="177.05" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.03%)</title><rect x="1057.2" y="469" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1060.19" y="479.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="91.8" y="197" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="94.84" y="207.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (2 samples, 0.06%; 0.00%)</title><rect x="203.8" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="206.81" y="623.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.09%; +0.03%)</title><rect x="103.0" y="293" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="106.00" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; 0.00%)</title><rect x="599.3" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="602.26" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.06%; +0.03%)</title><rect x="433.7" y="565" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="436.71" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="390.6" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="393.56" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="186.3" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="189.33" y="527.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.06%; -0.09%)</title><rect x="139.5" y="741" width="0.7" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="142.46" y="751.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="93.0" y="117" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="95.96" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="618.2" y="549" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="621.23" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="64.7" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.68" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="335.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.03%; +0.03%)</title><rect x="147.6" y="725" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="150.64" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="93.0" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.96" y="175.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,700 samples, 85.12%; 0.00%)</title><rect x="148.8" y="741" width="1004.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.76" y="751.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="351.5" ></text>
</g>
<g >
<title>make_multishard_combining_reader (1 samples, 0.03%; 0.00%)</title><rect x="183.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="1034.5" y="421" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1037.50" y="431.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="384.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="387.61" y="511.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="11.1" y="661" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="14.12" y="671.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (14 samples, 0.44%; 0.00%)</title><rect x="674.8" y="629" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="677.77" y="639.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1149.8" y="549" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1152.82" y="559.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (14 samples, 0.44%; +0.03%)</title><rect x="204.6" y="629" width="5.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="207.56" y="639.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="650.2" y="645" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="653.22" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.06%)</title><rect x="680.4" y="613" width="2.6" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="683.35" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (10 samples, 0.32%; -0.03%)</title><rect x="95.9" y="453" width="3.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="98.93" y="463.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (10 samples, 0.32%; -0.09%)</title><rect x="840.7" y="613" width="3.7" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="843.69" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.03%; +0.03%)</title><rect x="97.8" y="197" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="100.79" y="207.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="84.4" y="261" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="87.40" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (59 samples, 1.86%; +0.03%)</title><rect x="500.7" y="581" width="21.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="503.67" y="591.5" >m..</text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.27" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="98.2" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.17" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="33.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.81" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; 0.00%)</title><rect x="885.0" y="565" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.96" y="575.5" ></text>
</g>
<g >
<title>table::seal_active_memtable (1 samples, 0.03%; 0.00%)</title><rect x="714.2" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.21" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="603.3" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="606.35" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (28 samples, 0.88%; +0.03%)</title><rect x="85.5" y="453" width="10.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="88.52" y="463.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.12" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%; +0.03%)</title><rect x="47.9" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="50.94" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="111.6" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="892.8" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="895.77" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="147.3" y="661" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="150.27" y="671.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (2 samples, 0.06%; +0.06%)</title><rect x="59.1" y="437" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="62.10" y="447.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; 0.00%)</title><rect x="805.0" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="807.97" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="760.7" y="613" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="763.71" y="623.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="80.7" y="261" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="83.68" y="271.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="79.6" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.56" y="287.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.06%; +0.03%)</title><rect x="140.2" y="741" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="143.20" y="751.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (2 samples, 0.06%; 0.00%)</title><rect x="860.8" y="565" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.78" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (1 samples, 0.03%; 0.00%)</title><rect x="1152.1" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.06" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.12" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;seastar::file_data_sink_impl::put (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="463.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.37" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="212.7" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="215.74" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.13%; +0.03%)</title><rect x="175.5" y="661" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="178.54" y="671.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="212.7" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.74" y="591.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (19 samples, 0.60%; 0.00%)</title><rect x="1103.7" y="581" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.69" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (1 samples, 0.03%; +0.03%)</title><rect x="107.5" y="469" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="110.47" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="865.2" y="629" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="868.24" y="639.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (1 samples, 0.03%; +0.03%)</title><rect x="691.1" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="694.14" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="10.0" y="757" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="511.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (2 samples, 0.06%; 0.00%)</title><rect x="183.7" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (125 samples, 3.94%; +0.09%)</title><rect x="323.6" y="469" width="46.5" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="326.60" y="479.5" >part..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&amp;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="117.9" y="229" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="120.88" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="109.7" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="479.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (2 samples, 0.06%; +0.06%)</title><rect x="450.5" y="533" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="453.45" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.24" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="191.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.06%; +0.03%)</title><rect x="146.5" y="677" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="149.53" y="687.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::~abstract_write_response_handler (1 samples, 0.03%; +0.03%)</title><rect x="714.6" y="629" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="717.58" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::~unique_ptr (2 samples, 0.06%; +0.03%)</title><rect x="131.3" y="565" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="134.27" y="575.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (4 samples, 0.13%; 0.00%)</title><rect x="185.2" y="613" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.21" y="623.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.16%; +0.06%)</title><rect x="827.3" y="549" width="1.9" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="830.30" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.0" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="447.5" ></text>
</g>
<g >
<title>all (3,172 samples, 100%)</title><rect x="10.0" y="821" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="664.0" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="666.98" y="655.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (4 samples, 0.13%; -0.03%)</title><rect x="761.1" y="613" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="764.08" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (13 samples, 0.41%; +0.06%)</title><rect x="18.9" y="565" width="4.9" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="21.93" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::stats (12 samples, 0.38%; +0.28%)</title><rect x="583.6" y="533" width="4.5" height="15.0" fill="rgb(255,52,52)" rx="2" ry="2" />
<text  x="586.63" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.03%)</title><rect x="746.6" y="613" width="0.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="749.57" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="62.1" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.08" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (6 samples, 0.19%; 0.00%)</title><rect x="50.9" y="405" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; -0.03%)</title><rect x="111.2" y="453" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="114.19" y="463.5" ></text>
</g>
<g >
<title>from_hex (4 samples, 0.13%; 0.00%)</title><rect x="15.6" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.58" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="119.0" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.67" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.06%)</title><rect x="924.4" y="565" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="927.39" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::submit_io_write (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.22%; +0.09%)</title><rect x="938.9" y="533" width="2.6" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="941.90" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (13 samples, 0.41%; +0.03%)</title><rect x="853.3" y="549" width="4.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="856.34" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="640.9" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="643.92" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (13 samples, 0.41%; 0.00%)</title><rect x="88.9" y="373" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.87" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="168.5" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.47" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="49.8" y="357" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="52.80" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; -0.03%)</title><rect x="982.4" y="453" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="985.42" y="463.5" ></text>
</g>
<g >
<title>partition_entry::apply (1 samples, 0.03%; 0.00%)</title><rect x="1108.5" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.53" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="322.5" y="469" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="325.48" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.05" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.06%)</title><rect x="948.9" y="517" width="1.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="951.94" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (24 samples, 0.76%; -0.19%)</title><rect x="1082.9" y="581" width="8.9" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="1085.86" y="591.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.06%; 0.00%)</title><rect x="389.1" y="549" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="392.07" y="559.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="936.3" y="549" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="939.29" y="559.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.7" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.74" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (5 samples, 0.16%; 0.00%)</title><rect x="59.8" y="453" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="90.7" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.73" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (1 samples, 0.03%; 0.00%)</title><rect x="713.8" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="716.83" y="671.5" ></text>
</g>
<g >
<title>seastar::file_size (1 samples, 0.03%; 0.00%)</title><rect x="713.5" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="716.46" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.06%; +0.06%)</title><rect x="42.7" y="421" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="45.74" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="521.9" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="524.88" y="559.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%; +0.03%)</title><rect x="858.9" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="861.92" y="463.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="96.3" y="293" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.31" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.4" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.38" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="426.6" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="429.65" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="118.3" y="325" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="121.25" y="335.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (16 samples, 0.50%; -0.13%)</title><rect x="770.4" y="581" width="5.9" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="773.38" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="65.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.06" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (14 samples, 0.44%; +0.03%)</title><rect x="18.6" y="581" width="5.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="21.56" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; 0.00%)</title><rect x="1021.9" y="389" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1024.85" y="399.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; -0.06%)</title><rect x="923.6" y="565" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="926.64" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="90.7" y="229" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="93.73" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.49" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (7 samples, 0.22%; +0.03%)</title><rect x="50.5" y="485" width="2.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="53.55" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (73 samples, 2.30%; -0.32%)</title><rect x="1119.3" y="661" width="27.2" height="15.0" fill="rgb(35,35,255)" rx="2" ry="2" />
<text  x="1122.32" y="671.5" >s..</text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::_Optional_base (1 samples, 0.03%; +0.03%)</title><rect x="124.9" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="127.95" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (10 samples, 0.32%; -0.03%)</title><rect x="514.4" y="533" width="3.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="517.44" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="54.3" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="57.27" y="495.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.24" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="610.0" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="613.04" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::modification_statement (1 samples, 0.03%; +0.03%)</title><rect x="125.7" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="128.69" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="69.5" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.52" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (2 samples, 0.06%; +0.06%)</title><rect x="404.0" y="581" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="406.95" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="107.8" y="405" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="110.84" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (2 samples, 0.06%; +0.03%)</title><rect x="56.1" y="517" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="59.13" y="527.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::read&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.06%; 0.00%)</title><rect x="186.0" y="581" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.96" y="591.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.06%)</title><rect x="1138.7" y="645" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1141.66" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; +0.06%)</title><rect x="66.9" y="437" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="69.92" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="72.5" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.50" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.03%; +0.03%)</title><rect x="58.4" y="501" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="61.36" y="511.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="212.7" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.74" y="575.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="184.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.10" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="36.0" y="357" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="39.04" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (24 samples, 0.76%; 0.00%)</title><rect x="852.6" y="629" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.59" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="607.8" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="610.81" y="527.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_id::full_name (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="479.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="861.1" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.15" y="527.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="184.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.10" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.35%; 0.00%)</title><rect x="1111.5" y="485" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.51" y="495.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::to_string_impl_visitor&gt; (1 samples, 0.03%; +0.03%)</title><rect x="185.6" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="188.59" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (47 samples, 1.48%; -0.03%)</title><rect x="31.2" y="501" width="17.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="34.20" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="108.2" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="111.21" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.97" y="719.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (2 samples, 0.06%; -0.16%)</title><rect x="1061.3" y="485" width="0.7" height="15.0" fill="rgb(122,122,255)" rx="2" ry="2" />
<text  x="1064.29" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="80.3" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.31" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="367.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (2 samples, 0.06%; 0.00%)</title><rect x="26.7" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.74" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="49.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.80" y="431.5" ></text>
</g>
<g >
<title>db::commitlog::segment::batch_cycle (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="543.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%; 0.00%)</title><rect x="911.7" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="914.74" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="850.7" y="661" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="853.73" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.07" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="212.7" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.74" y="559.5" ></text>
</g>
<g >
<title>query::querier_base::close (88 samples, 2.77%; +0.03%)</title><rect x="499.2" y="613" width="32.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="502.19" y="623.5" >qu..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (12 samples, 0.38%; 0.00%)</title><rect x="89.2" y="357" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.24" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (2 samples, 0.06%; +0.06%)</title><rect x="987.6" y="469" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="990.63" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.13%; -0.09%)</title><rect x="478.7" y="549" width="1.5" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="481.73" y="559.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::keyspace_element_name (1 samples, 0.03%; 0.00%)</title><rect x="124.9" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.95" y="511.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; 0.00%)</title><rect x="844.8" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="847.78" y="639.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="147.3" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.27" y="719.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="57.2" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="60.24" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (1 samples, 0.03%; 0.00%)</title><rect x="184.8" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.84" y="623.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (191 samples, 6.02%; -0.06%)</title><rect x="763.3" y="613" width="71.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="766.31" y="623.5" >cql3::qu..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="819.1" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="822.11" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (1 samples, 0.03%; 0.00%)</title><rect x="1152.1" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.06" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (125 samples, 3.94%; 0.00%)</title><rect x="62.1" y="517" width="46.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.08" y="527.5" >cql3..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="61.0" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.96" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; -0.03%)</title><rect x="73.2" y="469" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="76.24" y="479.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="701.2" y="629" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="704.19" y="639.5" ></text>
</g>
<g >
<title>database::query (16 samples, 0.50%; +0.16%)</title><rect x="177.4" y="661" width="6.0" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="180.40" y="671.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; +0.03%)</title><rect x="720.5" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="723.53" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.4" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.42" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (11 samples, 0.35%; 0.00%)</title><rect x="58.0" y="517" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="839.9" y="613" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="842.94" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.09%; 0.00%)</title><rect x="37.9" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.90" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.06" y="495.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::add_future (1 samples, 0.03%; +0.03%)</title><rect x="1115.6" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1118.60" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (65 samples, 2.05%; +0.03%)</title><rect x="82.9" y="469" width="24.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="85.91" y="479.5" >c..</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_allocate_map (1 samples, 0.03%; +0.03%)</title><rect x="26.7" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="29.74" y="463.5" ></text>
</g>
<g >
<title>seastar::file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="543.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="1087.0" y="549" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1089.95" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.8" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.75" y="303.5" ></text>
</g>
<g >
<title>sstables::sstable::write_components (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="767.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%; +0.03%)</title><rect x="1110.8" y="629" width="5.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1113.76" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (4 samples, 0.13%; 0.00%)</title><rect x="100.0" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.03" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="629" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="639.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="84.0" y="245" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="87.03" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="497.0" y="565" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="499.95" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; +0.03%)</title><rect x="366.4" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="369.38" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.7" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.74" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (6 samples, 0.19%; -0.03%)</title><rect x="31.2" y="469" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="34.20" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="84.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.03" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="727.6" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.60" y="655.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%; 0.00%)</title><rect x="770.0" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="773.01" y="591.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.98" y="447.5" ></text>
</g>
<g >
<title>free (14 samples, 0.44%; +0.06%)</title><rect x="420.7" y="517" width="5.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="423.69" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="196.4" y="645" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="199.37" y="655.5" ></text>
</g>
<g >
<title>utils::flush_queue&lt;db::replay_position, std::less&lt;db::replay_position&gt;, seastar::lowres_clock&gt;::run_with_ordered_post_op&lt;db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="145.4" y="693" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="148.41" y="703.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.03%; +0.03%)</title><rect x="713.8" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="716.83" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (11 samples, 0.35%; +0.06%)</title><rect x="77.7" y="421" width="4.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="80.70" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="33.8" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.81" y="495.5" ></text>
</g>
<g >
<title>database::query (77 samples, 2.43%; +0.35%)</title><rect x="1005.5" y="437" width="28.6" height="15.0" fill="rgb(255,17,17)" rx="2" ry="2" />
<text  x="1008.49" y="447.5" >da..</text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::grant_role_statement*, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="128.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.30" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.09%; +0.06%)</title><rect x="579.2" y="517" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="582.17" y="527.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.03%; 0.00%)</title><rect x="27.9" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.86" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1111.1" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1114.13" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="99.7" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.65" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="124.6" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.58" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (32 samples, 1.01%; 0.00%)</title><rect x="714.9" y="661" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.95" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (277 samples, 8.73%; 0.00%)</title><rect x="29.3" y="581" width="103.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.34" y="591.5" >cql3_parser:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; -0.03%)</title><rect x="32.3" y="325" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="35.32" y="335.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; +0.03%)</title><rect x="721.6" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="724.65" y="655.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (13 samples, 0.41%; +0.06%)</title><rect x="169.6" y="629" width="4.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="172.59" y="639.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; 0.00%)</title><rect x="738.0" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="741.01" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="129.8" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.79" y="559.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.19%; -0.03%)</title><rect x="31.2" y="405" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="34.20" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; +0.03%)</title><rect x="321.0" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="324.00" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="98.5" y="405" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.54" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.03%)</title><rect x="698.6" y="645" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="701.58" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="96.7" y="245" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.68" y="255.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (2 samples, 0.06%; 0.00%)</title><rect x="858.5" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.54" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="235.4" y="581" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="238.44" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="159.5" ></text>
</g>
<g >
<title>seastar::io_queue::queue_request (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="548.7" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="551.66" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.05" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="718.3" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.30" y="655.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (7 samples, 0.22%; +0.22%)</title><rect x="474.6" y="565" width="2.6" height="15.0" fill="rgb(255,87,87)" rx="2" ry="2" />
<text  x="477.63" y="575.5" ></text>
</g>
<g >
<title>unimplemented::warn (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.37" y="639.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;, table::try_flush_memtable_to_sstable (1 samples, 0.03%; 0.00%)</title><rect x="645.4" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.38" y="671.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (6 samples, 0.19%; 0.00%)</title><rect x="95.9" y="357" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.93" y="367.5" ></text>
</g>
<g >
<title>table::try_flush_memtable_to_sstable (1 samples, 0.03%; 0.00%)</title><rect x="645.4" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.38" y="655.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="655.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="76.6" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.59" y="335.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="277" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="145.0" y="693" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="148.04" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; +0.03%)</title><rect x="854.8" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="857.82" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.16%)</title><rect x="248.8" y="581" width="2.3" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="251.83" y="591.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.06%; +0.06%)</title><rect x="627.2" y="501" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="630.16" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%; -0.06%)</title><rect x="497.7" y="581" width="0.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="500.70" y="591.5" ></text>
</g>
<g >
<title>schema::get_column_definition (2 samples, 0.06%; 0.00%)</title><rect x="20.0" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.04" y="511.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.03%; +0.03%)</title><rect x="1110.0" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1113.02" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="116.0" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="495.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (1 samples, 0.03%; 0.00%)</title><rect x="183.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="479.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="1118.9" y="661" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1121.95" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="688.2" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="691.17" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (2 samples, 0.06%; 0.00%)</title><rect x="114.2" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.16" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="107.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.84" y="431.5" ></text>
</g>
<g >
<title>database::do_apply (21 samples, 0.66%; -0.03%)</title><rect x="1103.0" y="597" width="7.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1105.95" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="591.1" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="594.07" y="527.5" ></text>
</g>
<g >
<title>seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="655.5" ></text>
</g>
<g >
<title>[unknown] (373 samples, 11.76%; 0.00%)</title><rect x="10.0" y="789" width="138.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (85 samples, 2.68%; -0.03%)</title><rect x="500.3" y="597" width="31.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="503.30" y="607.5" >st..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="108.6" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="111.58" y="527.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; -0.06%)</title><rect x="334.4" y="453" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="337.39" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="103.0" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.00" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.03%; +0.03%)</title><rect x="924.8" y="565" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="927.76" y="575.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (7 samples, 0.22%; -0.06%)</title><rect x="331.4" y="453" width="2.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="334.41" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="25.6" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="28.62" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (2 samples, 0.06%; +0.06%)</title><rect x="878.3" y="581" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="881.26" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.03%; 0.00%)</title><rect x="27.9" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.86" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (340 samples, 10.72%; 0.00%)</title><rect x="10.7" y="725" width="126.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="735.5" >seastar::noncop..</text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.03%; 0.00%)</title><rect x="1058.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.68" y="511.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; +0.03%)</title><rect x="1104.4" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1107.44" y="495.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.41%; -0.13%)</title><rect x="524.5" y="565" width="4.8" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="527.48" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="1153.2" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.17" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="96.7" y="149" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.68" y="159.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::kernel_submit_work (1 samples, 0.03%; +0.03%)</title><rect x="1150.6" y="677" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1153.57" y="687.5" ></text>
</g>
<g >
<title>std::operator+ (6 samples, 0.19%; 0.00%)</title><rect x="50.9" y="373" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.09%)</title><rect x="820.2" y="517" width="1.5" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="823.23" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="64.7" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.68" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (3 samples, 0.09%; +0.06%)</title><rect x="1117.5" y="645" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1120.46" y="655.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.03%; +0.03%)</title><rect x="834.4" y="613" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="837.36" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="145.8" y="693" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.78" y="703.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="255.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="329.6" y="453" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="332.55" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (15 samples, 0.47%; 0.00%)</title><rect x="1111.1" y="517" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.13" y="527.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; -0.03%)</title><rect x="629.0" y="517" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="632.02" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="29.7" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (44 samples, 1.39%; -0.09%)</title><rect x="726.9" y="661" width="16.3" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="729.85" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="74.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.98" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.03%; -0.03%)</title><rect x="152.5" y="677" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="155.48" y="687.5" ></text>
</g>
<g >
<title>query_state::query_state (13 samples, 0.41%; 0.00%)</title><rect x="635.3" y="613" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="638.34" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.03%; +0.03%)</title><rect x="44.6" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="47.60" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (329 samples, 10.37%; +0.03%)</title><rect x="13.3" y="645" width="122.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="16.35" y="655.5" >cql3::query_pro..</text>
</g>
<g >
<title>do_cql_test (338 samples, 10.66%; 0.00%)</title><rect x="11.5" y="693" width="125.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.49" y="703.5" >do_cql_test</text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="371.2" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="374.22" y="479.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::~set_value (1 samples, 0.03%; 0.00%)</title><rect x="25.3" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.25" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="103.0" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.00" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="711.6" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="714.60" y="655.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (24 samples, 0.76%; -0.06%)</title><rect x="166.6" y="645" width="8.9" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="169.61" y="655.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (12 samples, 0.38%; 0.00%)</title><rect x="1085.5" y="565" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1088.47" y="575.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; 0.00%)</title><rect x="398.7" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="401.75" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="498.8" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="501.81" y="607.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.03%; 0.00%)</title><rect x="1146.5" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1149.48" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.03%)</title><rect x="921.4" y="549" width="2.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="924.41" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::use_statement*, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="129.8" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="132.79" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; +0.03%)</title><rect x="72.1" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="75.12" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="383.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; -0.03%)</title><rect x="97.8" y="261" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="100.79" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="79.6" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.56" y="303.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; -0.03%)</title><rect x="911.4" y="533" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="914.37" y="543.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::do_put (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="163.6" y="645" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="166.64" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="119.4" y="309" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="122.37" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.4" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.38" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; +0.06%)</title><rect x="873.8" y="581" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="876.80" y="591.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; +0.03%)</title><rect x="132.8" y="613" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="135.76" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::constants::setter&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="665.1" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="668.10" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="720.9" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="723.90" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (2 samples, 0.06%; +0.03%)</title><rect x="1040.1" y="517" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1043.08" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (13 samples, 0.41%; +0.03%)</title><rect x="101.9" y="453" width="4.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="104.89" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_attachments_statement, std::default_delete&lt;cql3::statements::list_service_level_attachments_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_service_level_attachments_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="132.0" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="135.02" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (262 samples, 8.26%; -0.09%)</title><rect x="537.9" y="597" width="97.4" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="540.88" y="607.5" >std::_Funct..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="55.0" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.01" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.03%; 0.00%)</title><rect x="124.6" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.58" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; -0.06%)</title><rect x="751.8" y="581" width="1.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="754.78" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="76.2" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; +0.03%)</title><rect x="1108.5" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1111.53" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Storage&lt;cql3::expr::expression, false&gt;::~_Storage (1 samples, 0.03%; +0.03%)</title><rect x="121.6" y="405" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="124.60" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; 0.00%)</title><rect x="678.1" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="681.12" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="49.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.80" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="42.7" y="437" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="447.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="645.4" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.38" y="591.5" ></text>
</g>
<g >
<title>seastar::io_queue::request_fq_ticket (1 samples, 0.03%; +0.03%)</title><rect x="138.3" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="141.34" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::statements::raw::parsed_statement*&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="129.0" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="132.04" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="62.5" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.45" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (2 samples, 0.06%; 0.00%)</title><rect x="935.9" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="938.92" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1097.7" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1100.74" y="591.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="517" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="527.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (6 samples, 0.19%; -0.13%)</title><rect x="478.0" y="565" width="2.2" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="480.98" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (3 samples, 0.09%; 0.00%)</title><rect x="39.0" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.02" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="122.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="255.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (4 samples, 0.13%; 0.00%)</title><rect x="185.2" y="597" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.21" y="607.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; 0.00%)</title><rect x="147.3" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.27" y="735.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="62.5" y="309" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="65.45" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (14 samples, 0.44%; -0.03%)</title><rect x="1111.5" y="501" width="5.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1114.51" y="511.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; -0.03%)</title><rect x="980.6" y="485" width="3.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="983.56" y="495.5" ></text>
</g>
<g >
<title>schema_registry::get (9 samples, 0.28%; 0.00%)</title><rect x="961.6" y="517" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="964.59" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="383.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; 0.00%)</title><rect x="854.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.82" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="122.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="381.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="384.63" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="725.0" y="629" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="727.99" y="639.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (2 samples, 0.06%; 0.00%)</title><rect x="55.0" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.01" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (2 samples, 0.06%; 0.00%)</title><rect x="122.3" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="383.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.06%; +0.06%)</title><rect x="134.6" y="533" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="137.62" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="21.9" y="453" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="24.90" y="463.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (16 samples, 0.50%; -0.38%)</title><rect x="419.9" y="533" width="6.0" height="15.0" fill="rgb(0,0,255)" rx="2" ry="2" />
<text  x="422.95" y="543.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="118.6" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="121.63" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="37.9" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.90" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%; 0.00%)</title><rect x="183.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.89" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; -0.03%)</title><rect x="235.4" y="597" width="1.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="238.44" y="607.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; 0.00%)</title><rect x="124.9" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.95" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="175.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (5 samples, 0.16%; -0.13%)</title><rect x="845.9" y="645" width="1.9" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="848.90" y="655.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.13%; -0.03%)</title><rect x="1089.9" y="565" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1092.93" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="126.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.44" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="300.2" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.16" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (6 samples, 0.19%; -0.03%)</title><rect x="31.2" y="453" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="34.20" y="463.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; 0.00%)</title><rect x="715.3" y="645" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="718.32" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.16%; 0.00%)</title><rect x="102.3" y="421" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.26" y="431.5" ></text>
</g>
<g >
<title>schema::position (1 samples, 0.03%; +0.03%)</title><rect x="1097.4" y="581" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1100.37" y="591.5" ></text>
</g>
<g >
<title>make_combined_reader (39 samples, 1.23%; +0.03%)</title><rect x="547.2" y="565" width="14.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="550.18" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (2 samples, 0.06%; 0.00%)</title><rect x="47.2" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.20" y="479.5" ></text>
</g>
<g >
<title>memtable::apply (16 samples, 0.50%; -0.06%)</title><rect x="1103.7" y="533" width="5.9" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1106.69" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="71.0" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="479.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (25 samples, 0.79%; +0.03%)</title><rect x="852.2" y="645" width="9.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="855.22" y="655.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.03%)</title><rect x="781.2" y="581" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="784.17" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="130.9" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="133.90" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.0" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (8 samples, 0.25%; +0.03%)</title><rect x="676.6" y="613" width="3.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="679.63" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (3 samples, 0.09%; +0.03%)</title><rect x="903.2" y="517" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="906.18" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (6 samples, 0.19%; +0.03%)</title><rect x="133.1" y="629" width="2.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="136.13" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.4" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.38" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (19 samples, 0.60%; +0.16%)</title><rect x="654.3" y="661" width="7.1" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="657.31" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="415.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; +0.06%)</title><rect x="837.0" y="613" width="2.9" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="839.97" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="74.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.98" y="431.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 10.94%; 0.00%)</title><rect x="10.0" y="773" width="129.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >[unknown]</text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="1021.9" y="405" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1024.85" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (3 samples, 0.09%; +0.03%)</title><rect x="300.5" y="501" width="1.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="303.54" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="816.1" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="819.13" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.06%)</title><rect x="1139.8" y="645" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1142.78" y="655.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; -0.03%)</title><rect x="529.3" y="565" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="532.32" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.09%; +0.09%)</title><rect x="973.9" y="501" width="1.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="976.87" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="817.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="820.62" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.06%)</title><rect x="432.6" y="549" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="435.60" y="559.5" ></text>
</g>
<g >
<title>seastar::file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.44" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="630.1" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="633.13" y="543.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (3 samples, 0.09%; 0.00%)</title><rect x="37.9" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.90" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.03%; 0.00%)</title><rect x="74.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.98" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; +0.03%)</title><rect x="55.0" y="421" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="58.01" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (5 samples, 0.16%; +0.06%)</title><rect x="382.7" y="501" width="1.9" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="385.75" y="511.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; -0.03%)</title><rect x="693.4" y="645" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="696.37" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="351.5" ></text>
</g>
<g >
<title>seastar::posix_file_real_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.77" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.19%; 0.00%)</title><rect x="50.9" y="469" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.3" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.25" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.6" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.58" y="543.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="74.4" y="325" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="77.36" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="950.4" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="953.43" y="543.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="816.5" y="517" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="819.51" y="527.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%; +0.13%)</title><rect x="239.5" y="613" width="3.0" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="242.53" y="623.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="374.2" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="377.19" y="495.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::put (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::operator= (1 samples, 0.03%; 0.00%)</title><rect x="105.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.61" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="112.7" y="389" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="115.67" y="399.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="136.5" y="661" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="139.48" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="514.1" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="517.07" y="527.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (10 samples, 0.32%; 0.00%)</title><rect x="144.3" y="757" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.29" y="767.5" ></text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (1 samples, 0.03%; +0.03%)</title><rect x="1151.3" y="661" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1154.31" y="671.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="147.3" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.27" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (137 samples, 4.32%; +0.06%)</title><rect x="988.7" y="469" width="51.0" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="991.75" y="479.5" >servi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="32.3" y="309" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="35.32" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::query_options&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="691.1" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.14" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.97" y="767.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.03%)</title><rect x="823.2" y="549" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="826.20" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (10 samples, 0.32%; 0.00%)</title><rect x="95.9" y="437" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.93" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (4 samples, 0.13%; +0.09%)</title><rect x="875.3" y="581" width="1.5" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="878.28" y="591.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (2 samples, 0.06%; -0.03%)</title><rect x="1104.8" y="485" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1107.81" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; 0.00%)</title><rect x="186.0" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.96" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="69.5" y="373" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="72.52" y="383.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.03%; +0.03%)</title><rect x="777.4" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="780.45" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="80.3" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.31" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.4" y="53" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.42" y="63.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="35.3" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="38.30" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (3 samples, 0.09%; +0.09%)</title><rect x="560.6" y="549" width="1.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="563.57" y="559.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token_present (1 samples, 0.03%; +0.03%)</title><rect x="34.6" y="453" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="37.55" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="351.5" ></text>
</g>
<g >
<title>auth::get_permissions (55 samples, 1.73%; -0.09%)</title><rect x="797.5" y="533" width="20.5" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="800.53" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="96.7" y="181" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.68" y="191.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.03%; 0.00%)</title><rect x="148.0" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.01" y="783.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (2 samples, 0.06%; 0.00%)</title><rect x="1149.5" y="613" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.45" y="623.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.03%; 0.00%)</title><rect x="145.0" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.04" y="719.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (5 samples, 0.16%; 0.00%)</title><rect x="15.2" y="517" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.21" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="335.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (5 samples, 0.16%; -0.03%)</title><rect x="504.8" y="549" width="1.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="507.77" y="559.5" ></text>
</g>
<g >
<title>validation::validate_column_family (2 samples, 0.06%; 0.00%)</title><rect x="24.5" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.51" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="90.7" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.73" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (33 samples, 1.04%; 0.00%)</title><rect x="509.2" y="549" width="12.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="512.23" y="559.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; -0.03%)</title><rect x="674.0" y="629" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="677.03" y="639.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="463.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="30.5" y="565" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="33.46" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="135.7" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="138.74" y="655.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (48 samples, 1.51%; 0.00%)</title><rect x="31.2" y="549" width="17.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.20" y="559.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="110.1" y="341" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="113.07" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="126.4" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.44" y="527.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.03%; -0.03%)</title><rect x="1149.8" y="597" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1152.82" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="393.5" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="396.54" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="72.1" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.12" y="479.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.03%; +0.03%)</title><rect x="1091.8" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1094.79" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="103.0" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.00" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.03%; +0.03%)</title><rect x="152.1" y="677" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="155.11" y="687.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (8 samples, 0.25%; 0.00%)</title><rect x="58.7" y="485" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (10 samples, 0.32%; 0.00%)</title><rect x="49.4" y="533" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.43" y="543.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="1112.3" y="373" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.25" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.4" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.38" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="111.9" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="146.9" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="149.90" y="655.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::put (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (3 samples, 0.09%; 0.00%)</title><rect x="72.1" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.12" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="857.1" y="453" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="860.06" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="1116.3" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1119.34" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="98.2" y="389" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="101.17" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="687.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.28" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (4 samples, 0.13%; +0.06%)</title><rect x="83.3" y="293" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="86.28" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; -0.03%)</title><rect x="1096.6" y="581" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1099.63" y="591.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::raw (1 samples, 0.03%; 0.00%)</title><rect x="124.6" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.58" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="126.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.44" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="106.3" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.35" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (2,700 samples, 85.12%; 0.00%)</title><rect x="148.8" y="789" width="1004.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.76" y="799.5" >__libc_start_main</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="873.4" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="876.42" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (6 samples, 0.19%; +0.03%)</title><rect x="31.2" y="389" width="2.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="34.20" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="80.7" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.68" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="82.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.54" y="447.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%; -0.03%)</title><rect x="987.3" y="469" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="990.26" y="479.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="74.4" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.36" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="33.4" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="36.44" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="118.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.63" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (3 samples, 0.09%; 0.00%)</title><rect x="858.5" y="517" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.54" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (7 samples, 0.22%; 0.00%)</title><rect x="50.5" y="501" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.55" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.06" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; -0.03%)</title><rect x="62.5" y="341" width="0.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="65.45" y="351.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="709.7" y="645" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="712.74" y="655.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1029.7" y="373" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1032.67" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="49.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.80" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (30 samples, 0.95%; -0.22%)</title><rect x="592.9" y="533" width="11.2" height="15.0" fill="rgb(87,87,255)" rx="2" ry="2" />
<text  x="595.93" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="133.5" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="136.51" y="607.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="104.5" y="229" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="107.49" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.19%; +0.03%)</title><rect x="295.0" y="517" width="2.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="297.96" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; +0.03%)</title><rect x="82.2" y="469" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="85.17" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="92.6" y="197" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.59" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (2 samples, 0.06%; 0.00%)</title><rect x="92.6" y="181" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.59" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="33.1" y="357" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="36.06" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="188.6" y="645" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="191.56" y="655.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.54%; -0.13%)</title><rect x="335.9" y="437" width="6.3" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="338.88" y="447.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; -0.09%)</title><rect x="580.3" y="517" width="0.4" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="583.28" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::revoke_statement*, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="130.2" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="133.16" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.03%; +0.03%)</title><rect x="291.6" y="533" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="294.61" y="543.5" ></text>
</g>
<g >
<title>database::find_schema (5 samples, 0.16%; -0.19%)</title><rect x="823.6" y="549" width="1.8" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="826.58" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; 0.00%)</title><rect x="713.1" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="716.09" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (17 samples, 0.54%; +0.06%)</title><rect x="87.4" y="405" width="6.3" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="90.38" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.99" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (48 samples, 1.51%; 0.00%)</title><rect x="31.2" y="533" width="17.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.20" y="543.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.03%; 0.00%)</title><rect x="186.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.96" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="1153.2" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.17" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.9" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="399.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.03%; 0.00%)</title><rect x="1107.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.04" y="511.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (5 samples, 0.16%; -0.03%)</title><rect x="994.3" y="453" width="1.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="997.33" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; -0.03%)</title><rect x="598.5" y="501" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="601.51" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (6 samples, 0.19%; 0.00%)</title><rect x="50.9" y="421" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="431.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (274 samples, 8.64%; 0.00%)</title><rect x="396.5" y="597" width="101.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.51" y="607.5" >query::consu..</text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (2 samples, 0.06%; 0.00%)</title><rect x="477.2" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="480.24" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.07" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="93.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.70" y="415.5" ></text>
</g>
<g >
<title>seastar::output_stream&lt;char&gt;::flush (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="639.5" ></text>
</g>
<g >
<title>seastar::reactor::smp_pollfn::poll (1 samples, 0.03%; +0.03%)</title><rect x="1150.2" y="677" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1153.20" y="687.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (21 samples, 0.66%; -0.03%)</title><rect x="522.6" y="581" width="7.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="525.62" y="591.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token (1 samples, 0.03%; +0.03%)</title><rect x="37.5" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="40.53" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; +0.03%)</title><rect x="100.4" y="405" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="103.40" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="21.5" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="24.53" y="479.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="613" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="623.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="529.7" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="532.69" y="575.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1104.1" y="501" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1107.07" y="511.5" ></text>
</g>
<g >
<title>row::external_memory_usage (20 samples, 0.63%; +0.03%)</title><rect x="334.8" y="453" width="7.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="337.76" y="463.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (286 samples, 9.02%; -0.03%)</title><rect x="26.4" y="613" width="106.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="29.37" y="623.5" >cql3::util::d..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.71" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="127.6" y="501" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="130.55" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; -0.03%)</title><rect x="73.2" y="485" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="76.24" y="495.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="92.6" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.59" y="255.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (8 samples, 0.25%; +0.03%)</title><rect x="140.9" y="741" width="3.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="143.95" y="751.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.03%; +0.03%)</title><rect x="145.8" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="148.78" y="639.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%; 0.00%)</title><rect x="1154.3" y="789" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1157.29" y="799.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="109.7" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="511.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="117.1" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="463.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; 0.00%)</title><rect x="1134.9" y="645" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1137.94" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (9 samples, 0.28%; +0.16%)</title><rect x="1130.5" y="645" width="3.3" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="1133.48" y="655.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (4 samples, 0.13%; 0.00%)</title><rect x="121.6" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.60" y="511.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (2 samples, 0.06%; +0.06%)</title><rect x="209.8" y="629" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="212.77" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="98.2" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.17" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; 0.00%)</title><rect x="168.8" y="629" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.85" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (5 samples, 0.16%; -0.13%)</title><rect x="925.1" y="565" width="1.9" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="928.13" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (37 samples, 1.17%; +0.22%)</title><rect x="669.6" y="645" width="13.7" height="15.0" fill="rgb(255,87,87)" rx="2" ry="2" />
<text  x="672.56" y="655.5" ></text>
</g>
<g >
<title>sstables::sstable::open_data (1 samples, 0.03%; 0.00%)</title><rect x="645.4" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.38" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="839.6" y="581" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="842.57" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; -0.03%)</title><rect x="960.5" y="485" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="963.47" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="287.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; -0.03%)</title><rect x="248.8" y="597" width="2.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="251.83" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; 0.00%)</title><rect x="76.2" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.37" y="335.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; -0.03%)</title><rect x="957.9" y="517" width="3.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="960.87" y="527.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%; 0.00%)</title><rect x="184.8" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.84" y="591.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.03%; 0.00%)</title><rect x="852.6" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.59" y="543.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; 0.00%)</title><rect x="519.6" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="522.65" y="543.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; +0.03%)</title><rect x="651.7" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="654.71" y="655.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (8 samples, 0.25%; +0.09%)</title><rect x="1098.9" y="565" width="2.9" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="1101.86" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="49.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.80" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::reactor::task_queue, unsigned int&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, float&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; -0.03%)</title><rect x="101.1" y="373" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="104.14" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="118.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.63" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (2 samples, 0.06%; 0.00%)</title><rect x="27.9" y="597" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.86" y="607.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (5 samples, 0.16%; -0.13%)</title><rect x="1144.6" y="645" width="1.9" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="1147.62" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (1 samples, 0.03%; +0.03%)</title><rect x="822.8" y="549" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="825.83" y="559.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; +0.03%)</title><rect x="680.0" y="629" width="3.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="682.98" y="639.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (415 samples, 13.08%; +0.25%)</title><rect x="928.5" y="581" width="154.4" height="15.0" fill="rgb(255,70,70)" rx="2" ry="2" />
<text  x="931.48" y="591.5" >cql3::statements::s..</text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (3 samples, 0.09%; -0.03%)</title><rect x="11.9" y="661" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="14.86" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (7 samples, 0.22%; 0.00%)</title><rect x="119.0" y="485" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (170 samples, 5.36%; -0.03%)</title><rect x="308.7" y="485" width="63.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="311.72" y="495.5" >partit..</text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="754.0" y="629" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="757.01" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.13%)</title><rect x="385.4" y="533" width="2.6" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="388.35" y="543.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="401.3" y="581" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="404.35" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (4 samples, 0.13%; -0.03%)</title><rect x="35.7" y="421" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="38.67" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (44 samples, 1.39%; -0.06%)</title><rect x="887.9" y="549" width="16.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="890.93" y="559.5" ></text>
</g>
<g >
<title>ser::canonical_mutation_view::key (1 samples, 0.03%; 0.00%)</title><rect x="186.3" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.33" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="76.2" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::metrics::impl::metric_family&gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::metrics::impl::metric_family&gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::metrics::impl::metric_family&gt; &gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="1110.4" y="229" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1113.39" y="239.5" ></text>
</g>
<g >
<title>partition_entry::apply_to_incomplete (1 samples, 0.03%; +0.03%)</title><rect x="10.7" y="709" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="13.74" y="719.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="848.9" y="661" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="851.87" y="671.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (5 samples, 0.16%; 0.00%)</title><rect x="133.5" y="613" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.51" y="623.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (262 samples, 8.26%; 0.00%)</title><rect x="747.7" y="645" width="97.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="655.5" >single_node..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="287.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="469.4" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="472.43" y="559.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (16 samples, 0.50%; +0.06%)</title><rect x="582.1" y="549" width="6.0" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="585.14" y="559.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (3 samples, 0.09%; 0.00%)</title><rect x="26.7" y="549" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.74" y="559.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (3 samples, 0.09%; 0.00%)</title><rect x="53.2" y="517" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.15" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="76.2" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.16%; 0.00%)</title><rect x="59.8" y="405" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="895.4" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="898.37" y="511.5" ></text>
</g>
<g >
<title>db::filter_for_query (4 samples, 0.13%; +0.03%)</title><rect x="1053.8" y="501" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1056.85" y="511.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::create_cdc_desc (1 samples, 0.03%; 0.00%)</title><rect x="177.0" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="180.03" y="655.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="751.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="335.5" ></text>
</g>
<g >
<title>dht::tri_compare (9 samples, 0.28%; -0.06%)</title><rect x="1079.1" y="437" width="3.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1082.14" y="447.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (4 samples, 0.13%; 0.00%)</title><rect x="185.2" y="661" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.21" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="107.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.84" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.7" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.74" y="463.5" ></text>
</g>
<g >
<title>db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="728.0" y="645" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="730.97" y="655.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.03%; 0.00%)</title><rect x="496.6" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="499.58" y="575.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (3 samples, 0.09%; +0.03%)</title><rect x="134.2" y="581" width="1.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="137.25" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="33.8" y="373" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="36.81" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="122.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (2 samples, 0.06%; +0.03%)</title><rect x="123.8" y="533" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="126.83" y="543.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.13%; +0.03%)</title><rect x="772.6" y="549" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="775.61" y="559.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.79" y="255.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (1 samples, 0.03%; +0.03%)</title><rect x="1082.5" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1085.49" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%; 0.00%)</title><rect x="333.3" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="336.27" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="373" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="383.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; +0.03%)</title><rect x="603.0" y="517" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="605.98" y="527.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (4 samples, 0.13%; 0.00%)</title><rect x="145.0" y="725" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.04" y="735.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="103.0" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.00" y="335.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.44%; +0.13%)</title><rect x="445.2" y="533" width="5.3" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="448.25" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="271.5" ></text>
</g>
<g >
<title>memtable::memtable (1 samples, 0.03%; +0.03%)</title><rect x="714.2" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="717.21" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="71.8" y="245" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="74.75" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="105.6" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="108.61" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; -0.03%)</title><rect x="597.8" y="517" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="600.77" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; 0.00%)</title><rect x="555.7" y="517" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="558.73" y="527.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.03%; 0.00%)</title><rect x="1146.5" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1149.48" y="671.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.06%)</title><rect x="664.4" y="645" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="667.36" y="655.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="24.5" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.51" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.37" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="69.1" y="405" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.15" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (29 samples, 0.91%; 0.00%)</title><rect x="34.6" y="485" width="10.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.55" y="495.5" ></text>
</g>
<g >
<title>row::apply (1 samples, 0.03%; +0.03%)</title><rect x="857.8" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="860.80" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; +0.03%)</title><rect x="88.1" y="373" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="91.12" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="431.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="109.0" y="517" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="111.95" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.03%; +0.03%)</title><rect x="851.1" y="661" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="854.10" y="671.5" ></text>
</g>
<g >
<title>database::apply_in_memory (16 samples, 0.50%; 0.00%)</title><rect x="1103.7" y="565" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.69" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (21 samples, 0.66%; -0.03%)</title><rect x="852.6" y="565" width="7.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="855.59" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="65.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.80" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.97" y="751.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="874.9" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="877.91" y="591.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="889.8" y="485" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="892.79" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="973.1" y="501" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="976.12" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="1134.6" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1137.57" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="23.0" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="26.02" y="479.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (18 samples, 0.57%; +0.06%)</title><rect x="610.8" y="549" width="6.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="613.79" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.9" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="367.5" ></text>
</g>
<g >
<title>schema_mutations::schema_mutations (2 samples, 0.06%; 0.00%)</title><rect x="186.0" y="565" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.96" y="575.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="287.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; +0.03%)</title><rect x="1114.5" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1117.48" y="431.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="719.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; +0.03%)</title><rect x="496.2" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="499.21" y="575.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (5 samples, 0.16%; -0.03%)</title><rect x="35.7" y="437" width="1.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="38.67" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (11 samples, 0.35%; 0.00%)</title><rect x="854.1" y="517" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.08" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (2 samples, 0.06%; +0.06%)</title><rect x="601.9" y="517" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="604.86" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="82.5" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.54" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (5 samples, 0.16%; 0.00%)</title><rect x="831.0" y="597" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="834.02" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; 0.00%)</title><rect x="980.6" y="469" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="983.56" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="32.3" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.32" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="111.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (636 samples, 20.05%; +0.06%)</title><rect x="865.6" y="629" width="236.6" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="868.61" y="639.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (7 samples, 0.22%; +0.06%)</title><rect x="625.3" y="517" width="2.6" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="628.30" y="527.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (56 samples, 1.77%; +0.03%)</title><rect x="501.4" y="565" width="20.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="504.42" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="381.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="384.63" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::submit_io_write (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="479.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="857.4" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="860.43" y="463.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; -0.03%)</title><rect x="555.7" y="533" width="2.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="558.73" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.06%)</title><rect x="1113.4" y="341" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1116.37" y="351.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (12 samples, 0.38%; 0.00%)</title><rect x="1168.1" y="773" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1171.05" y="783.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result_extra&lt;stat&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="713.5" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="716.46" y="607.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; -0.03%)</title><rect x="1060.9" y="485" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1063.91" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="186.7" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="189.70" y="447.5" ></text>
</g>
<g >
<title>canonical_mutation::to_mutation (2 samples, 0.06%; 0.00%)</title><rect x="186.0" y="549" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.96" y="559.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="53.2" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.15" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="202.0" y="629" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="204.95" y="639.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="93.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.70" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt (3 samples, 0.09%; +0.06%)</title><rect x="632.0" y="565" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="634.99" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%; +0.03%)</title><rect x="106.3" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="109.35" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="116.0" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="479.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; 0.00%)</title><rect x="792.0" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="794.95" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,199 samples, 37.80%; -0.28%)</title><rect x="197.5" y="645" width="446.0" height="15.0" fill="rgb(52,52,255)" rx="2" ry="2" />
<text  x="200.49" y="655.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="69.1" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="72.15" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.19%; 0.00%)</title><rect x="95.9" y="389" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.93" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="126.4" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.44" y="511.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.19%; +0.06%)</title><rect x="806.5" y="501" width="2.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="809.46" y="511.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.03%; 0.00%)</title><rect x="818.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="820.99" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="581" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.4" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.38" y="415.5" ></text>
</g>
<g >
<title>cql3::cf_name::~cf_name (1 samples, 0.03%; +0.03%)</title><rect x="125.3" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="128.32" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="309" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="319.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="549" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="76.2" y="293" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="79.22" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload (1 samples, 0.03%; 0.00%)</title><rect x="124.6" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.58" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (31 samples, 0.98%; +0.03%)</title><rect x="701.9" y="661" width="11.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="704.93" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="33.8" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.81" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="674.4" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="677.40" y="639.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (7 samples, 0.22%; 0.00%)</title><rect x="20.8" y="517" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.79" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (3 samples, 0.09%; -0.06%)</title><rect x="390.9" y="565" width="1.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="393.93" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="212.0" y="629" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="215.00" y="639.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="743.6" y="661" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="746.59" y="671.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; -0.09%)</title><rect x="848.1" y="661" width="0.4" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="851.13" y="671.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (355 samples, 11.19%; -0.06%)</title><rect x="261.5" y="581" width="132.0" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="264.48" y="591.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.09%)</title><rect x="697.8" y="645" width="0.4" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="700.84" y="655.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.86" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="102.3" y="405" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="105.26" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="81.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.80" y="431.5" ></text>
</g>
<g >
<title>streamed_mutation_freezer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="184.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.10" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="73.6" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="76.61" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.24" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.09%; +0.09%)</title><rect x="736.2" y="629" width="1.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="739.15" y="639.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.3" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.25" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="673.7" y="613" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="676.66" y="623.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::maybe_prepare_json_cache (1 samples, 0.03%; +0.03%)</title><rect x="860.4" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="863.40" y="575.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="507.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="510.00" y="543.5" ></text>
</g>
<g >
<title>seastar::priority_class_data::register_stats (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (9 samples, 0.28%; 0.00%)</title><rect x="78.4" y="405" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.45" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.03%)</title><rect x="1018.9" y="389" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1021.88" y="399.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="853.0" y="453" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="855.96" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="93.0" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.96" y="143.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.37" y="591.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (34 samples, 1.07%; +0.19%)</title><rect x="279.0" y="533" width="12.6" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="281.96" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; +0.03%)</title><rect x="847.8" y="661" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="850.76" y="671.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; 0.00%)</title><rect x="507.4" y="549" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="510.37" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="209.0" y="597" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="212.02" y="607.5" ></text>
</g>
<g >
<title>free (3 samples, 0.09%; -0.03%)</title><rect x="425.9" y="533" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="428.90" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="1024.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1027.09" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="56.5" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="59.50" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.06%; +0.06%)</title><rect x="20.0" y="485" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="23.04" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1153.2" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.17" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="96.7" y="261" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.68" y="271.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (1 samples, 0.03%; +0.03%)</title><rect x="813.5" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="816.53" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (358 samples, 11.29%; +0.06%)</title><rect x="260.4" y="597" width="133.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="263.36" y="607.5" >flat_mutation_re..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="21.2" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="24.16" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,699 samples, 85.09%; -0.03%)</title><rect x="148.8" y="693" width="1004.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="151.76" y="703.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.06%; -0.03%)</title><rect x="738.4" y="629" width="0.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="741.39" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="117.1" y="485" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="421" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="431.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.03%; 0.00%)</title><rect x="856.3" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="859.31" y="463.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; 0.00%)</title><rect x="1092.2" y="581" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1095.16" y="591.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_Impl_deleter::operator (1 samples, 0.03%; +0.03%)</title><rect x="148.4" y="773" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="151.39" y="783.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (9 samples, 0.28%; -0.06%)</title><rect x="750.3" y="613" width="3.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="753.29" y="623.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (28 samples, 0.88%; -0.19%)</title><rect x="621.2" y="549" width="10.4" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="624.20" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="100.8" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.77" y="399.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (30 samples, 0.95%; +0.19%)</title><rect x="1071.3" y="453" width="11.2" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="1074.33" y="463.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="655.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (24 samples, 0.76%; 0.00%)</title><rect x="852.6" y="613" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.59" y="623.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (6 samples, 0.19%; -0.03%)</title><rect x="379.4" y="485" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="382.40" y="495.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%; 0.00%)</title><rect x="143.9" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.92" y="783.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="96.7" y="165" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.68" y="175.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.97" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; +0.03%)</title><rect x="43.5" y="421" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="46.48" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.13%; +0.03%)</title><rect x="803.5" y="501" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="806.49" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="591.1" y="501" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="594.07" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (3 samples, 0.09%; -0.03%)</title><rect x="1148.0" y="661" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1150.96" y="671.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (16 samples, 0.50%; 0.00%)</title><rect x="1110.8" y="645" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.76" y="655.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%; 0.00%)</title><rect x="1149.8" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.82" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="405" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; +0.03%)</title><rect x="111.2" y="421" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="114.19" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="75.8" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="78.84" y="447.5" ></text>
</g>
<g >
<title>query::querier_base::close (2 samples, 0.06%; 0.00%)</title><rect x="1149.5" y="645" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.45" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; -0.03%)</title><rect x="1087.0" y="533" width="2.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1089.95" y="543.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (11 samples, 0.35%; +0.09%)</title><rect x="170.3" y="613" width="4.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="173.33" y="623.5" ></text>
</g>
<g >
<title>table::apply (16 samples, 0.50%; 0.00%)</title><rect x="1103.7" y="549" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.69" y="559.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="202.3" y="629" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="205.33" y="639.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reset_preemption_monitor (1 samples, 0.03%; +0.03%)</title><rect x="1150.9" y="677" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1153.94" y="687.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.98" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.4" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.38" y="351.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, seastar::smp::invoke_on_all&lt;seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="86.6" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="89.63" y="431.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.03%)</title><rect x="61.0" y="293" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="63.96" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="103.0" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.00" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.09%; 0.00%)</title><rect x="58.7" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="69.1" y="421" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.15" y="431.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.19%; 0.00%)</title><rect x="95.9" y="405" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.93" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; +0.03%)</title><rect x="44.2" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="47.22" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="65.4" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.43" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, memtable_list::flush (1 samples, 0.03%; 0.00%)</title><rect x="714.2" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.21" y="671.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (1 samples, 0.03%; -0.25%)</title><rect x="776.0" y="549" width="0.3" height="15.0" fill="rgb(70,70,255)" rx="2" ry="2" />
<text  x="778.96" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="714.2" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.21" y="655.5" ></text>
</g>
<g >
<title>database::has_keyspace (5 samples, 0.16%; +0.09%)</title><rect x="825.4" y="549" width="1.9" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="828.44" y="559.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (11 samples, 0.35%; +0.13%)</title><rect x="693.7" y="645" width="4.1" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="696.75" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.05" y="159.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="100.0" y="373" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="103.03" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="608.9" y="549" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="611.93" y="559.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="815.0" y="517" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="818.02" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; -0.03%)</title><rect x="196.7" y="645" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="199.75" y="655.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.9" y="101" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="101.91" y="111.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1089.6" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1092.56" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (2 samples, 0.06%; -0.03%)</title><rect x="26.7" y="469" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="29.74" y="479.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (3 samples, 0.09%; +0.09%)</title><rect x="1036.7" y="437" width="1.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="1039.73" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.19%; +0.13%)</title><rect x="172.2" y="597" width="2.2" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="175.19" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.03%; +0.03%)</title><rect x="27.9" y="533" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="30.86" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="370.8" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="373.84" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="479.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1039.7" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1042.71" y="479.5" ></text>
</g>
<g >
<title>freeze (1 samples, 0.03%; +0.03%)</title><rect x="1111.5" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1114.51" y="447.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="194.5" y="645" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="197.51" y="655.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (108 samples, 3.40%; +0.03%)</title><rect x="68.0" y="501" width="40.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="71.03" y="511.5" >cql..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (2 samples, 0.06%; 0.00%)</title><rect x="100.8" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.77" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.32%; 0.00%)</title><rect x="957.9" y="501" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="960.87" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="80.3" y="149" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="83.31" y="159.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::untyped_constant&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="97.4" y="37" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="100.42" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="128.7" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="131.67" y="559.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.03%; +0.03%)</title><rect x="792.3" y="549" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="795.33" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="658.4" y="645" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="661.40" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.5" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="101.54" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.8" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.79" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="100.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.40" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="118.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.63" y="431.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="296.8" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="299.82" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="127.9" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.93" y="559.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.13%; 0.00%)</title><rect x="75.8" y="469" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.84" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.16%; +0.03%)</title><rect x="688.5" y="645" width="1.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="691.54" y="655.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; -0.03%)</title><rect x="826.9" y="533" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="829.92" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%; 0.00%)</title><rect x="111.6" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; +0.03%)</title><rect x="331.0" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="334.04" y="463.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%; 0.00%)</title><rect x="1054.6" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1057.59" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (20 samples, 0.63%; +0.03%)</title><rect x="895.7" y="501" width="7.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="898.74" y="511.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="73.2" y="373" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="76.24" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (6 samples, 0.19%; 0.00%)</title><rect x="858.2" y="549" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.17" y="559.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="1144.2" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1147.24" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="255.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; +0.03%)</title><rect x="745.5" y="645" width="1.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="748.45" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="71.8" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.75" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="80.7" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.68" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="80.3" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.31" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="69.9" y="325" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="72.89" y="335.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (150 samples, 4.73%; -0.06%)</title><rect x="561.7" y="565" width="55.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="564.68" y="575.5" >memta..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.09%; +0.03%)</title><rect x="62.1" y="389" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="65.08" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.16%; 0.00%)</title><rect x="59.8" y="421" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="431.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="171.8" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="174.82" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="79.2" y="341" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="82.19" y="351.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (45 samples, 1.42%; -0.03%)</title><rect x="1155.8" y="789" width="16.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1158.78" y="799.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="208.3" y="597" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="211.28" y="607.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (11 samples, 0.35%; 0.00%)</title><rect x="623.8" y="533" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="626.81" y="543.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="65.1" y="293" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="68.06" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (4 samples, 0.13%; -0.03%)</title><rect x="35.7" y="389" width="1.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="38.67" y="399.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.03%; +0.03%)</title><rect x="195.6" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="198.63" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4 samples, 0.13%; 0.00%)</title><rect x="35.7" y="405" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.67" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.03%; +0.03%)</title><rect x="104.1" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="107.12" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="85.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.89" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%; +0.09%)</title><rect x="520.4" y="533" width="1.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="523.39" y="543.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="56.5" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.50" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.19" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="65.1" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.06" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; 0.00%)</title><rect x="841.1" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="844.06" y="607.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%; -0.06%)</title><rect x="1107.4" y="501" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1110.41" y="511.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (33 samples, 1.04%; -0.22%)</title><rect x="354.5" y="421" width="12.3" height="15.0" fill="rgb(87,87,255)" rx="2" ry="2" />
<text  x="357.48" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (24 samples, 0.76%; 0.00%)</title><rect x="852.6" y="581" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.59" y="591.5" ></text>
</g>
<g >
<title>row::~row (22 samples, 0.69%; 0.00%)</title><rect x="418.8" y="549" width="8.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="421.83" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.09%; +0.03%)</title><rect x="60.6" y="325" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="63.59" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (236 samples, 7.44%; +0.03%)</title><rect x="297.2" y="517" width="87.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="300.19" y="527.5" >partition_..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.03%)</title><rect x="717.2" y="645" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="720.18" y="655.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="1093.3" y="581" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1096.28" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; -0.16%)</title><rect x="970.9" y="469" width="1.5" height="15.0" fill="rgb(122,122,255)" rx="2" ry="2" />
<text  x="973.89" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="76.6" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.59" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.16%; +0.13%)</title><rect x="656.5" y="645" width="1.9" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="659.54" y="655.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (1 samples, 0.03%; +0.03%)</title><rect x="152.8" y="677" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="155.85" y="687.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="29.7" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%; 0.00%)</title><rect x="848.5" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="851.50" y="671.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="65.8" y="277" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="68.80" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="64.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.31" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.12" y="719.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.13%; +0.09%)</title><rect x="771.1" y="565" width="1.5" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="774.12" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="122.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="33.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.81" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.19%; 0.00%)</title><rect x="63.9" y="485" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.94" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="606.3" y="549" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.32" y="559.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (6 samples, 0.19%; -0.03%)</title><rect x="15.2" y="581" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="18.21" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="531.6" y="581" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="534.55" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (18 samples, 0.57%; +0.09%)</title><rect x="896.1" y="485" width="6.7" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="899.12" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; +0.03%)</title><rect x="294.6" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="297.58" y="527.5" ></text>
</g>
<g >
<title>serialize_mutation_fragments (1 samples, 0.03%; 0.00%)</title><rect x="184.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.10" y="431.5" ></text>
</g>
<g >
<title>row_cache::make_reader (32 samples, 1.01%; -0.03%)</title><rect x="619.7" y="565" width="11.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="622.72" y="575.5" ></text>
</g>
<g >
<title>database::add_column_family (4 samples, 0.13%; 0.00%)</title><rect x="185.2" y="645" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.21" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="447.5" ></text>
</g>
<g >
<title>table::query (2 samples, 0.06%; 0.00%)</title><rect x="1149.5" y="661" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.45" y="671.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.03%; +0.03%)</title><rect x="762.9" y="613" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="765.94" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="877.9" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="880.89" y="591.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="463.5" ></text>
</g>
<g >
<title>partition_entry::read (3 samples, 0.09%; -0.13%)</title><rect x="607.4" y="549" width="1.2" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="610.44" y="559.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.05" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="23.4" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.39" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::attributes::raw*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="126.4" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="129.44" y="447.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (6 samples, 0.19%; 0.00%)</title><rect x="1112.3" y="405" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.25" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="184.8" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.84" y="607.5" ></text>
</g>
<g >
<title>row::row (75 samples, 2.36%; 0.00%)</title><rect x="342.2" y="453" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="345.20" y="463.5" >r..</text>
</g>
<g >
<title>operator new (13 samples, 0.41%; 0.00%)</title><rect x="967.9" y="501" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.91" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.50%; -0.13%)</title><rect x="996.6" y="437" width="5.9" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="999.56" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (4 samples, 0.13%; -0.06%)</title><rect x="720.2" y="645" width="1.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="723.16" y="655.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="183.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="79.6" y="245" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.56" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::back (1 samples, 0.03%; +0.03%)</title><rect x="123.5" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="126.46" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (24 samples, 0.76%; -0.03%)</title><rect x="418.1" y="565" width="8.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="421.09" y="575.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%; +0.03%)</title><rect x="113.0" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="116.05" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;unsigned long&gt;, sstables::sstable::update_info_for_opened_data (1 samples, 0.03%; 0.00%)</title><rect x="713.5" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="716.46" y="671.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::conjunction&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="119.0" y="213" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="122.00" y="223.5" ></text>
</g>
<g >
<title>schema_registry::learn (4 samples, 0.13%; 0.00%)</title><rect x="185.2" y="629" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.21" y="639.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%; +0.03%)</title><rect x="859.3" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="862.29" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,699 samples, 85.09%; 0.00%)</title><rect x="148.8" y="709" width="1004.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.76" y="719.5" >seastar::reactor::run</text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%; +0.06%)</title><rect x="559.5" y="549" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="562.45" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="64.7" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.68" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.35%; 0.00%)</title><rect x="1111.5" y="469" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.51" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="628.3" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="631.27" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.06" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (6 samples, 0.19%; 0.00%)</title><rect x="50.9" y="453" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="74.4" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.36" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="99.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.65" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (297 samples, 9.36%; +0.03%)</title><rect x="274.5" y="549" width="110.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="277.50" y="559.5" >mutation_read..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.03%; 0.00%)</title><rect x="1152.8" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.80" y="687.5" ></text>
</g>
<g >
<title>db::schema_tables::read_table_mutations (2 samples, 0.06%; 0.00%)</title><rect x="184.5" y="645" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.47" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.38" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.16%; +0.09%)</title><rect x="898.7" y="469" width="1.9" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="901.72" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.06%)</title><rect x="679.2" y="597" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="682.24" y="607.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; 0.00%)</title><rect x="1055.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1058.33" y="511.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (201 samples, 6.34%; -0.19%)</title><rect x="965.3" y="517" width="74.8" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="968.31" y="527.5" >service:..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="106.7" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="109.72" y="463.5" ></text>
</g>
<g >
<title>posix_memalign (16 samples, 0.50%; +0.03%)</title><rect x="360.4" y="389" width="6.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="363.43" y="399.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.03%; 0.00%)</title><rect x="185.6" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.59" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="56.9" y="469" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="59.87" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,677 samples, 84.39%; +0.16%)</title><rect x="154.3" y="677" width="995.9" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="157.34" y="687.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>table::make_reader (253 samples, 7.98%; -0.06%)</title><rect x="541.2" y="581" width="94.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="544.22" y="591.5" >table::make..</text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.03%; 0.00%)</title><rect x="1152.8" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.80" y="719.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (15 samples, 0.47%; 0.00%)</title><rect x="88.1" y="389" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.12" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="91.8" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.84" y="223.5" ></text>
</g>
<g >
<title>make_flat_multi_range_reader (1 samples, 0.03%; 0.00%)</title><rect x="183.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.09%; +0.03%)</title><rect x="1146.8" y="661" width="1.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1149.85" y="671.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="122.7" y="357" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="125.72" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="48.7" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="51.69" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="92.6" y="213" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.59" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.5" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.46" y="511.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.03%; -0.06%)</title><rect x="591.1" y="533" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="594.07" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="109.7" y="389" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="112.70" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (4 samples, 0.13%; 0.00%)</title><rect x="100.0" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.03" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="127.9" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.93" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.06%)</title><rect x="183.0" y="645" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="185.98" y="655.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::priority_class_data, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::lw_shared_ptr&lt;seastar::priority_class&gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="93.0" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.96" y="159.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; +0.03%)</title><rect x="63.2" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="66.20" y="511.5" ></text>
</g>
<g >
<title>dht::tri_compare (7 samples, 0.22%; +0.09%)</title><rect x="1068.7" y="453" width="2.6" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="1071.73" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Storage&lt;cql3::expr::expression, false&gt;::_Storage (1 samples, 0.03%; +0.03%)</title><rect x="124.6" y="437" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="127.58" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.03%; 0.00%)</title><rect x="1152.8" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.80" y="703.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.19%; -0.03%)</title><rect x="494.0" y="517" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="496.98" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="921.0" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="924.04" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="78.4" y="373" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="81.45" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="116.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="383.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="1034.5" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1037.50" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="944.5" y="549" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="947.48" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="181.9" y="629" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="184.87" y="639.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (13 samples, 0.41%; +0.03%)</title><rect x="116.8" y="501" width="4.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="119.77" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.25%; 0.00%)</title><rect x="58.7" y="501" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="96.7" y="213" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.68" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (2 samples, 0.06%; +0.06%)</title><rect x="150.2" y="677" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="153.25" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="80.7" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.68" y="287.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.87" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="208.7" y="597" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="211.65" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="29.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.72" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (14 samples, 0.44%; -0.03%)</title><rect x="246.2" y="613" width="5.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="249.22" y="623.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (344 samples, 10.84%; -0.09%)</title><rect x="263.0" y="565" width="127.9" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="265.96" y="575.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; -0.06%)</title><rect x="251.4" y="613" width="0.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="254.43" y="623.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.03%; -0.09%)</title><rect x="333.6" y="437" width="0.4" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="336.64" y="447.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.59" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.47%; -0.09%)</title><rect x="1014.4" y="405" width="5.6" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="1017.41" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; +0.03%)</title><rect x="63.9" y="437" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="66.94" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (1 samples, 0.03%; +0.03%)</title><rect x="1036.0" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1038.99" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.22%; 0.00%)</title><rect x="31.2" y="485" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.20" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="109.7" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.03%; 0.00%)</title><rect x="40.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.13" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; -0.03%)</title><rect x="106.0" y="421" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="108.98" y="431.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.03%; +0.03%)</title><rect x="1149.5" y="597" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1152.45" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.00" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.06%)</title><rect x="638.3" y="565" width="1.9" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="641.32" y="575.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (9 samples, 0.28%; +0.06%)</title><rect x="514.8" y="517" width="3.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="517.81" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="64.7" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.68" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (11 samples, 0.35%; -0.06%)</title><rect x="661.4" y="661" width="4.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="664.38" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (29 samples, 0.91%; 0.00%)</title><rect x="14.5" y="613" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="95.6" y="437" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="98.56" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; 0.00%)</title><rect x="604.1" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="607.09" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="714.6" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.58" y="671.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (2 samples, 0.06%; 0.00%)</title><rect x="860.8" y="533" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.78" y="543.5" ></text>
</g>
<g >
<title>table::set_hit_rate (9 samples, 0.28%; +0.16%)</title><rect x="739.1" y="629" width="3.4" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="742.13" y="639.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5 samples, 0.16%; +0.03%)</title><rect x="1012.2" y="421" width="1.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1015.18" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_role_statement*, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.9" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.93" y="527.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%; 0.00%)</title><rect x="1172.5" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.52" y="799.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (12 samples, 0.38%; +0.09%)</title><rect x="1026.7" y="389" width="4.5" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="1029.69" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::task_queue (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="575.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1152.4" y="677" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1155.43" y="687.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (5 samples, 0.16%; -0.03%)</title><rect x="858.2" y="533" width="1.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="861.17" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="104.9" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.86" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.03%; 0.00%)</title><rect x="63.6" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.57" y="495.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.03%; -0.03%)</title><rect x="186.0" y="501" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="188.96" y="511.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%; 0.00%)</title><rect x="900.6" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="903.58" y="479.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="860.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.03" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="304.6" y="453" width="2.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="307.63" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (6 samples, 0.19%; -0.19%)</title><rect x="276.7" y="533" width="2.3" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="279.73" y="543.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="146.5" y="725" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.53" y="735.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="1115.6" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.60" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="892.8" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="895.77" y="495.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.97" y="703.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.09%)</title><rect x="710.5" y="645" width="1.1" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="713.49" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.49" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="117.5" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.51" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="106.0" y="341" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="108.98" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="67.7" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.66" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; 0.00%)</title><rect x="961.2" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="964.22" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.03%; +0.03%)</title><rect x="530.4" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="533.44" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="132.4" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="135.39" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="159.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (38 samples, 1.20%; +0.19%)</title><rect x="728.3" y="645" width="14.2" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="731.34" y="655.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.03%)</title><rect x="726.9" y="645" width="0.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="729.85" y="655.5" ></text>
</g>
<g >
<title>fmt::v7::detail::parse_replacement_field&lt;char, fmt::v7::detail::format_handler&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char, fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.60" y="767.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="1062.4" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1065.40" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.38%; 0.00%)</title><rect x="937.0" y="549" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="940.04" y="559.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::~keyspace_element_name (1 samples, 0.03%; +0.03%)</title><rect x="54.6" y="517" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="57.64" y="527.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="93.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.33" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.16%; 0.00%)</title><rect x="102.3" y="437" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.26" y="447.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (241 samples, 7.60%; +0.13%)</title><rect x="755.1" y="629" width="89.7" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="758.13" y="639.5" >single_nod..</text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%; 0.00%)</title><rect x="366.8" y="421" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="369.75" y="431.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="116.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.39" y="335.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (3 samples, 0.09%; 0.00%)</title><rect x="26.7" y="517" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.74" y="527.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (2 samples, 0.06%; 0.00%)</title><rect x="134.6" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.62" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.16%; +0.03%)</title><rect x="96.3" y="277" width="1.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="99.31" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.49" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="113.8" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="116.79" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; 0.00%)</title><rect x="1032.6" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.64" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (2 samples, 0.06%; +0.03%)</title><rect x="320.3" y="453" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="323.25" y="463.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (3 samples, 0.09%; +0.03%)</title><rect x="1132.7" y="629" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1135.71" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="540.9" y="581" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="543.85" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (2 samples, 0.06%; +0.03%)</title><rect x="858.5" y="469" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="861.54" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; +0.03%)</title><rect x="926.2" y="533" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="929.25" y="543.5" ></text>
</g>
<g >
<title>service::client_state::has_access (90 samples, 2.84%; +0.13%)</title><rect x="788.2" y="565" width="33.5" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="791.23" y="575.5" >se..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="734.7" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="737.67" y="639.5" ></text>
</g>
<g >
<title>read_context::read_context (1 samples, 0.03%; 0.00%)</title><rect x="183.4" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="1092.9" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1095.91" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="76.6" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.59" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (2 samples, 0.06%; +0.06%)</title><rect x="876.8" y="581" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="879.77" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="49.8" y="469" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="52.80" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="72.9" y="405" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="75.87" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%; 0.00%)</title><rect x="104.5" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.49" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (632 samples, 19.92%; -0.28%)</title><rect x="866.7" y="597" width="235.1" height="15.0" fill="rgb(52,52,255)" rx="2" ry="2" />
<text  x="869.73" y="607.5" >cql3::statements::select_statem..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.56" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.03%; 0.00%)</title><rect x="27.9" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.86" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (279 samples, 8.80%; -0.32%)</title><rect x="744.0" y="661" width="103.8" height="15.0" fill="rgb(35,35,255)" rx="2" ry="2" />
<text  x="746.97" y="671.5" >seastar::int..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; 0.00%)</title><rect x="1152.8" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.80" y="671.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (2 samples, 0.06%; 0.00%)</title><rect x="122.3" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%; -0.03%)</title><rect x="299.8" y="501" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="302.79" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.18" y="511.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%; +0.06%)</title><rect x="900.6" y="453" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="903.58" y="463.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.13%)</title><rect x="893.5" y="501" width="1.9" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="896.51" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.49" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="698.2" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="701.21" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="91.5" y="309" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.47" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; 0.00%)</title><rect x="1000.3" y="421" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1003.28" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="81.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.80" y="415.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="623.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="19.7" y="549" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="22.67" y="559.5" ></text>
</g>
<g >
<title>query::querier&lt; (664 samples, 20.93%; +0.19%)</title><rect x="252.2" y="613" width="247.0" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="255.18" y="623.5" >query::querier&lt;</text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%; -0.03%)</title><rect x="210.5" y="629" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="213.51" y="639.5" ></text>
</g>
<g >
<title>seastar::priority_class_data::priority_class_data (1 samples, 0.03%; 0.00%)</title><rect x="1110.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.39" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; -0.03%)</title><rect x="944.1" y="549" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="947.10" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.09%; 0.00%)</title><rect x="1030.0" y="373" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1033.04" y="383.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.03%; +0.03%)</title><rect x="183.4" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="186.35" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (379 samples, 11.95%; 0.00%)</title><rect x="941.9" y="565" width="141.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="944.87" y="575.5" >service::storage_..</text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.13%)</title><rect x="329.6" y="437" width="1.4" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="332.55" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="747.3" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.31" y="655.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="671.5" ></text>
</g>
<g >
<title>database::has_keyspace (6 samples, 0.19%; -0.09%)</title><rect x="834.7" y="613" width="2.3" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="837.74" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.13%; 0.00%)</title><rect x="75.8" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.84" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::read_schema_partition_for_table (2 samples, 0.06%; 0.00%)</title><rect x="184.5" y="629" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.47" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="645.4" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="648.38" y="575.5" ></text>
</g>
<g >
<title>checked_file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.34" y="527.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (15 samples, 0.47%; 0.00%)</title><rect x="1111.1" y="581" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.13" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::init_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (2 samples, 0.06%; -0.09%)</title><rect x="153.2" y="677" width="0.8" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="156.22" y="687.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.03%; 0.00%)</title><rect x="186.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.70" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.09%; 0.00%)</title><rect x="71.0" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="495.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; -0.06%)</title><rect x="601.5" y="501" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="604.49" y="511.5" ></text>
</g>
<g >
<title>__start_context (340 samples, 10.72%; 0.00%)</title><rect x="10.7" y="757" width="126.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="767.5" >__start_context</text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; +0.03%)</title><rect x="323.2" y="469" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="326.23" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="1108.2" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.16" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (2 samples, 0.06%; 0.00%)</title><rect x="100.8" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.77" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.19%; +0.09%)</title><rect x="340.0" y="421" width="2.2" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="342.97" y="431.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.03%; 0.00%)</title><rect x="1152.1" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.06" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="22.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.65" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; +0.03%)</title><rect x="775.2" y="549" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="778.21" y="559.5" ></text>
</g>
<g >
<title>database::find_keyspace (3 samples, 0.09%; -0.03%)</title><rect x="1050.1" y="501" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1053.13" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="663.6" y="629" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="666.61" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="62.1" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.08" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (198 samples, 6.24%; +0.03%)</title><rect x="301.7" y="501" width="73.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="304.65" y="511.5" >partitio..</text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (2 samples, 0.06%; 0.00%)</title><rect x="122.3" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.35" y="431.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (2 samples, 0.06%; +0.06%)</title><rect x="53.2" y="485" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="56.15" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="65.1" y="325" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="68.06" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="385.0" y="549" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="387.98" y="559.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="432.6" y="565" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="435.60" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="113.8" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.79" y="511.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;multishard_combining_reader, dht::sharder const&amp;, seastar::shared_ptr&lt;reader_lifecycle_policy&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, nonwrapping_interval&lt;dht::ring_position&gt; const&amp;, query::partition_slice const&amp;, seastar::io_priority_class const&amp;, tracing::trace_state_ptr, seastar::bool_class&lt;flat_mutation_reader::partition_range_forwarding_tag&gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="183.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.16%; +0.06%)</title><rect x="829.2" y="581" width="1.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="832.16" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (2 samples, 0.06%; 0.00%)</title><rect x="860.8" y="549" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.78" y="559.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.3" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.25" y="431.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (3 samples, 0.09%; 0.00%)</title><rect x="183.4" y="597" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.35" y="607.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="21.5" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.53" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (340 samples, 10.72%; 0.00%)</title><rect x="10.7" y="741" width="126.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="751.5" >seastar::thread..</text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="184.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.10" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="357" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="84.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.40" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="45.3" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="48.34" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.3" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.25" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="805.7" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="808.72" y="495.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.03%; +0.03%)</title><rect x="37.2" y="421" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="40.16" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="76.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="319.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.03%; +0.03%)</title><rect x="745.1" y="645" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="748.08" y="655.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.03%; +0.03%)</title><rect x="184.8" y="565" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="187.84" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (212 samples, 6.68%; -0.03%)</title><rect x="49.1" y="549" width="78.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="52.06" y="559.5" >cql3_pars..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.06" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.87" y="495.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (12 samples, 0.38%; +0.03%)</title><rect x="749.5" y="629" width="4.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="752.55" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="111.6" y="117" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="114.56" y="127.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (142 samples, 4.48%; +0.03%)</title><rect x="55.8" y="533" width="52.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="58.76" y="543.5" >cql3_..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (23 samples, 0.73%; -0.06%)</title><rect x="645.8" y="661" width="8.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="648.76" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="74.4" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.36" y="383.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.09%)</title><rect x="399.1" y="581" width="2.2" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="402.12" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="972.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="975.75" y="511.5" ></text>
</g>
<g >
<title>local_schema_registry (2 samples, 0.06%; +0.06%)</title><rect x="957.1" y="517" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="960.12" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; 0.00%)</title><rect x="891.3" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="894.28" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="80.3" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.31" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.05" y="207.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (6 samples, 0.19%; +0.06%)</title><rect x="237.3" y="597" width="2.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="240.30" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (121 samples, 3.81%; +0.09%)</title><rect x="879.0" y="581" width="45.0" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="882.00" y="591.5" >cql3..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (3 samples, 0.09%; +0.06%)</title><rect x="672.9" y="629" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="675.91" y="639.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,700 samples, 85.12%; 0.00%)</title><rect x="148.8" y="725" width="1004.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.76" y="735.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::padding (1 samples, 0.03%; +0.03%)</title><rect x="53.9" y="501" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="56.90" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="91.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.84" y="255.5" ></text>
</g>
<g >
<title>partition_entry::read (1 samples, 0.03%; +0.03%)</title><rect x="619.0" y="565" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="621.97" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (2 samples, 0.06%; 0.00%)</title><rect x="116.0" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.02" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="96.7" y="197" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.68" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.13%; 0.00%)</title><rect x="83.3" y="421" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.28" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="99.7" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.65" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="805.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="808.35" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (12 samples, 0.38%; -0.13%)</title><rect x="205.3" y="613" width="4.5" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="208.30" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%; +0.03%)</title><rect x="81.1" y="117" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="84.05" y="127.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (1 samples, 0.03%; +0.03%)</title><rect x="444.9" y="533" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="447.87" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.73" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (2 samples, 0.06%; +0.06%)</title><rect x="370.1" y="469" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="373.10" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.13%; +0.13%)</title><rect x="1031.2" y="389" width="1.4" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="1034.15" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; -0.03%)</title><rect x="902.8" y="485" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="905.81" y="495.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="62.5" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.45" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="82.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.54" y="463.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.38%; 0.00%)</title><rect x="937.0" y="565" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="940.04" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="117.5" y="229" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="120.51" y="239.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.06%; +0.06%)</title><rect x="1104.8" y="469" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1107.81" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::optional (1 samples, 0.03%; 0.00%)</title><rect x="124.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.95" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.4" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.38" y="431.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (3 samples, 0.09%; 0.00%)</title><rect x="1109.6" y="549" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.65" y="559.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%; -0.03%)</title><rect x="23.8" y="581" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="26.76" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.07" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.89" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%; 0.00%)</title><rect x="59.8" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.85" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="111.2" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.19" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.03%; 0.00%)</title><rect x="1152.1" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.06" y="623.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (2 samples, 0.06%; 0.00%)</title><rect x="17.4" y="581" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.44" y="591.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.03%; 0.00%)</title><rect x="301.3" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="304.28" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.4" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.42" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="405" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.06%; +0.06%)</title><rect x="641.3" y="613" width="0.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="644.29" y="623.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="679.2" y="581" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="682.24" y="591.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; 0.00%)</title><rect x="177.0" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="180.03" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_move_assign (1 samples, 0.03%; 0.00%)</title><rect x="127.6" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.55" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="151.7" y="677" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="154.73" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%; -0.03%)</title><rect x="117.1" y="357" width="1.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="120.14" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;1ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.4" y="69" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.42" y="79.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (3 samples, 0.09%; 0.00%)</title><rect x="53.2" y="533" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.15" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="74.4" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.36" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="431.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="27.1" y="453" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="30.11" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%; 0.00%)</title><rect x="117.1" y="437" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.14" y="447.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; -0.06%)</title><rect x="251.1" y="597" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="254.06" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; 0.00%)</title><rect x="62.1" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.08" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="94.1" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.07" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.66%; 0.00%)</title><rect x="1103.0" y="613" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.95" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.11" y="367.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (24 samples, 0.76%; -0.13%)</title><rect x="767.4" y="597" width="8.9" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="770.40" y="607.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="138.7" y="757" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="141.71" y="767.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (1 samples, 0.03%; +0.03%)</title><rect x="753.6" y="613" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="756.64" y="623.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="304.6" y="469" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="307.63" y="479.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (127 samples, 4.00%; +0.09%)</title><rect x="781.9" y="581" width="47.3" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="784.91" y="591.5" >serv..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (25 samples, 0.79%; +0.03%)</title><rect x="86.3" y="437" width="9.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="89.26" y="447.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.98" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="727.2" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.23" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.03" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.9" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (10 samples, 0.32%; -0.06%)</title><rect x="1098.1" y="581" width="3.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1101.11" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.9" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.91" y="239.5" ></text>
</g>
</g>
</svg>
