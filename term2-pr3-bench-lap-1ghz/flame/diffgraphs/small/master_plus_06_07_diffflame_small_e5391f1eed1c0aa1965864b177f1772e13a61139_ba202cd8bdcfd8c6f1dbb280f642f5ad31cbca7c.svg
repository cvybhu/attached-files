<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>seastar::noncopyable_function&lt;void  (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1813" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1823.5" >s..</text>
</g>
<g >
<title>[unknown] (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="853" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="863.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (28 samples, 0.89%; -0.10%)</title><rect x="725.7" y="1925" width="10.5" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="728.68" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1861" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1871.5" >[unknown]</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (2 samples, 0.06%; +0.06%)</title><rect x="92.8" y="1845" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="95.78" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="137.9" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1647.5" ></text>
</g>
<g >
<title>table::apply (14 samples, 0.45%; 0.00%)</title><rect x="1102.0" y="1813" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.95" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (85 samples, 2.71%; -0.06%)</title><rect x="1123.4" y="1925" width="32.0" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1126.40" y="1935.5" >se..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="150.7" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.73" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;1ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1295.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (74 samples, 2.36%; -0.13%)</title><rect x="1006.8" y="1717" width="27.8" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="1009.75" y="1727.5" >s..</text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="111.6" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.59" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (18 samples, 0.57%; 0.00%)</title><rect x="61.2" y="709" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.17" y="719.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="559.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="789" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="799.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="59.7" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.67" y="591.5" ></text>
</g>
<g >
<title>abstract_type::is_collection (1 samples, 0.03%; +0.03%)</title><rect x="66.8" y="597" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.82" y="607.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1887.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="118.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.74" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="127.5" ></text>
</g>
<g >
<title>create_partitions (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1877" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restriction&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="682.8" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="685.78" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1141" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1151.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="66.1" y="597" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.07" y="607.5" ></text>
</g>
<g >
<title>mutation_querier::consume (102 samples, 3.25%; 0.00%)</title><rect x="449.9" y="1813" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="452.87" y="1823.5" >mut..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="100.7" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1551.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="116.5" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; +0.03%)</title><rect x="51.0" y="517" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="54.01" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="703.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="701.6" y="1909" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="704.59" y="1919.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (32 samples, 1.02%; +0.03%)</title><rect x="1017.3" y="1685" width="12.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1020.29" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="112.7" y="1685" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="119.5" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="122.50" y="1727.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="341.9" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="344.88" y="1727.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_definition::metric_definition (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="102.2" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="116.5" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="119.49" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="57.8" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.79" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="1024.1" y="1637" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1027.06" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="974.4" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="977.39" y="1791.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="51.8" y="405" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="54.77" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="591.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="38.6" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="511.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="346.0" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="349.01" y="1727.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%; +0.03%)</title><rect x="745.2" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="748.24" y="1903.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="106.0" y="1685" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="108.95" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="613" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="623.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (251 samples, 8.00%; +0.26%)</title><rect x="420.1" y="1845" width="94.5" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="423.14" y="1855.5" >seastar::do..</text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; +0.03%)</title><rect x="835.9" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="838.92" y="1759.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (2 samples, 0.06%; 0.00%)</title><rect x="1120.0" y="1925" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1123.01" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="73.6" y="597" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="76.59" y="607.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; 0.00%)</title><rect x="34.8" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.83" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="143.2" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="146.20" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="367.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="16.0" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.02" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1599.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (2 samples, 0.06%; -0.03%)</title><rect x="904.8" y="1765" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="907.78" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="114.2" y="1605" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_S_max_size (1 samples, 0.03%; +0.03%)</title><rect x="120.2" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="123.25" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; 0.00%)</title><rect x="601.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="604.51" y="1823.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; +0.03%)</title><rect x="559.7" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="562.74" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="559.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (26 samples, 0.83%; +0.13%)</title><rect x="663.2" y="1925" width="9.8" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="666.21" y="1935.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%; +0.03%)</title><rect x="10.8" y="37" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="13.75" y="47.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.06%; 0.00%)</title><rect x="58.9" y="629" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="639.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.09" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (4 samples, 0.13%; 0.00%)</title><rect x="13.4" y="485" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="48.4" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%; +0.03%)</title><rect x="1143.0" y="1909" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1145.97" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.06%; +0.06%)</title><rect x="709.5" y="1909" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="712.50" y="1919.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; 0.00%)</title><rect x="792.7" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="795.65" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="151.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.48" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="109.0" y="1685" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="111.96" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="112.7" y="1621" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1631.5" ></text>
</g>
<g >
<title>operator delete (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="2021" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="2031.5" >o..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%; +0.03%)</title><rect x="539.0" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="542.04" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1631.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="20.9" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.91" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (20 samples, 0.64%; +0.16%)</title><rect x="1020.7" y="1669" width="7.5" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1023.68" y="1679.5" ></text>
</g>
<g >
<title>operator delete (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="917" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="927.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="103.7" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.69" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="687.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (8 samples, 0.26%; 0.00%)</title><rect x="38.2" y="533" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (7 samples, 0.22%; +0.10%)</title><rect x="26.6" y="453" width="2.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="29.56" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="38.6" y="373" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="41.60" y="383.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; 0.00%)</title><rect x="1105.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.34" y="1727.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1089.5" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1092.53" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.73%; 0.00%)</title><rect x="1109.5" y="1829" width="8.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.48" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="769.3" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="772.32" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (295 samples, 9.41%; 0.00%)</title><rect x="10.4" y="2037" width="111.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="2047.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1503.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="661" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="671.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (11 samples, 0.35%; +0.06%)</title><rect x="927.7" y="1797" width="4.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="930.74" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.22%; 0.00%)</title><rect x="15.3" y="485" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="495.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.06%; 0.00%)</title><rect x="150.7" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.73" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1 samples, 0.03%; +0.03%)</title><rect x="1037.2" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1040.23" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="907.8" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="910.79" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1919.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1263.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; -0.03%)</title><rect x="148.5" y="1621" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="151.47" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="57.4" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.41" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="14.9" y="565" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="17.89" y="575.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (3 samples, 0.10%; +0.06%)</title><rect x="939.8" y="1829" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="942.78" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.3" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.34" y="1519.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1919.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%; +0.03%)</title><rect x="1115.9" y="1685" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1118.87" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1413" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="511.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; -0.06%)</title><rect x="619.2" y="1781" width="1.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="622.19" y="1791.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.03%; +0.03%)</title><rect x="1120.4" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1123.39" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.10%; 0.00%)</title><rect x="642.1" y="1781" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="645.14" y="1791.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.20" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.03%; +0.03%)</title><rect x="867.5" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="870.53" y="1935.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_check_len (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (6 samples, 0.19%; 0.00%)</title><rect x="149.2" y="1621" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.22" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; 0.00%)</title><rect x="739.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="742.22" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="560.5" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="563.49" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.03%; 0.00%)</title><rect x="84.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.50" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="69" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="79.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.10%)</title><rect x="752.0" y="1925" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="755.02" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (3 samples, 0.10%; 0.00%)</title><rect x="33.0" y="501" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.95" y="511.5" ></text>
</g>
<g >
<title>table::make_reader (248 samples, 7.91%; -0.06%)</title><rect x="554.5" y="1845" width="93.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="557.47" y="1855.5" >table::make..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.9" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.42" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="853" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="863.5" ></text>
</g>
<g >
<title>__start_context (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1973" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1983.5" >_..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::select_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="43.5" y="581" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="46.49" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (4 samples, 0.13%; 0.00%)</title><rect x="1116.2" y="1685" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.25" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::raw::parsed_statement::~parsed_statement (1 samples, 0.03%; +0.03%)</title><rect x="127.8" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="130.77" y="1775.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1983.5" ></text>
</g>
<g >
<title>database::shard_of (2 samples, 0.06%; 0.00%)</title><rect x="1116.6" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.63" y="1679.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.03%; +0.03%)</title><rect x="1159.9" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1162.90" y="1871.5" ></text>
</g>
<g >
<title>posix_memalign (8 samples, 0.26%; -0.10%)</title><rect x="376.9" y="1653" width="3.0" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="379.87" y="1663.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="181.2" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.21" y="1919.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.06%; +0.03%)</title><rect x="927.0" y="1797" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="929.98" y="1807.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.03%; 0.00%)</title><rect x="560.1" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.11" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getCharIndex (2 samples, 0.06%; 0.00%)</title><rect x="20.5" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.54" y="447.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="120.6" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="123.62" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.03%; 0.00%)</title><rect x="17.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.53" y="447.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="58.5" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="61.54" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%; +0.06%)</title><rect x="772.3" y="1861" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="775.33" y="1871.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%; +0.06%)</title><rect x="911.6" y="1733" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="914.56" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1471.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.13%; +0.06%)</title><rect x="182.7" y="1909" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="185.71" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.31" y="1615.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="118.0" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="120.99" y="1679.5" ></text>
</g>
<g >
<title>auth::get_permissions (59 samples, 1.88%; +0.10%)</title><rect x="817.9" y="1797" width="22.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="820.86" y="1807.5" >a..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="104.4" y="1429" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="107.45" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (23 samples, 0.73%; -0.10%)</title><rect x="761.0" y="1893" width="8.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="764.05" y="1903.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="48.4" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="88.6" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="91.64" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (180 samples, 5.74%; +0.13%)</title><rect x="321.6" y="1749" width="67.7" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="324.56" y="1759.5" >partiti..</text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="335.5" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="338.48" y="1727.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="479.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.69" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1343.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1951.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; -0.10%)</title><rect x="1055.7" y="1749" width="3.0" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1058.67" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="47.3" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.25" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; 0.00%)</title><rect x="48.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.00" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (2 samples, 0.06%; +0.03%)</title><rect x="601.9" y="1813" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="604.88" y="1823.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%; +0.03%)</title><rect x="1105.3" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1108.34" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.2" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.20" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.29%; -0.03%)</title><rect x="170.7" y="1893" width="3.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="173.67" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="543.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; +0.03%)</title><rect x="89.8" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="92.77" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%; 0.00%)</title><rect x="20.2" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.16" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; 0.00%)</title><rect x="334.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="337.73" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="479.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.03%; 0.00%)</title><rect x="968.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="971.00" y="1791.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="885" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="895.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.22%; 0.00%)</title><rect x="15.3" y="501" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="511.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="869" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="917" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="927.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="35.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.59" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (2 samples, 0.06%; 0.00%)</title><rect x="72.1" y="645" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="655.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.38%; +0.19%)</title><rect x="695.6" y="1909" width="4.5" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="698.57" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1733" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1743.5" >c..</text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; 0.00%)</title><rect x="98.8" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="551.8" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="554.84" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="607.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%; 0.00%)</title><rect x="31.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.82" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.03%)</title><rect x="621.4" y="1781" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="624.45" y="1791.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.03%; +0.03%)</title><rect x="898.8" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="901.76" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="671.5" ></text>
</g>
<g >
<title>schema_registry::learn (2 samples, 0.06%; 0.00%)</title><rect x="185.0" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.97" y="1903.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1743.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1935.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1839.5" ></text>
</g>
<g >
<title>db::system_keyspace::query (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1407.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="151.5" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="154.48" y="1535.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="34.1" y="533" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="37.08" y="543.5" ></text>
</g>
<g >
<title>lister::scan_dir (1 samples, 0.03%; +0.03%)</title><rect x="751.6" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="754.64" y="1903.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="866.8" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="869.78" y="1935.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; +0.03%)</title><rect x="146.6" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="149.59" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="1092.9" y="1829" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1095.92" y="1839.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (3 samples, 0.10%; 0.00%)</title><rect x="86.0" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.01" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; +0.03%)</title><rect x="870.9" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="873.92" y="1743.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,675 samples, 85.30%; 0.00%)</title><rect x="154.1" y="2021" width="1006.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.11" y="2031.5" >seastar::app_template::run</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1551.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (5 samples, 0.16%; 0.00%)</title><rect x="869.4" y="1765" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.41" y="1775.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="773.5" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="776.46" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="709" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="719.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (4 samples, 0.13%; 0.00%)</title><rect x="682.4" y="1909" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.40" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (1 samples, 0.03%; +0.03%)</title><rect x="61.5" y="693" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="64.55" y="703.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="629" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.45%; +0.13%)</title><rect x="248.2" y="1845" width="5.3" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="251.18" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (28 samples, 0.89%; 0.00%)</title><rect x="94.7" y="1733" width="10.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (3 samples, 0.10%; 0.00%)</title><rect x="86.0" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.01" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="133.8" y="1509" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="136.79" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="102.9" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1615.5" ></text>
</g>
<g >
<title>visit&lt;abstract_type::get_string (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1599.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="38.6" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; -0.03%)</title><rect x="916.8" y="1781" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="919.82" y="1791.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (3 samples, 0.10%; +0.03%)</title><rect x="793.0" y="1813" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="796.03" y="1823.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1727.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (19 samples, 0.61%; 0.00%)</title><rect x="1101.2" y="1845" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.20" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.59" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="805" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.00" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="97.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.30" y="1647.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="54.0" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="57.02" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="57.4" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.41" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="152.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.61" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="757" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="767.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (296 samples, 9.44%; -0.16%)</title><rect x="753.5" y="1925" width="111.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="756.52" y="1935.5" >seastar::inte..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="677.5" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="680.51" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="91.3" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="94.28" y="1951.5" ></text>
</g>
<g >
<title>evictable_reader::do_fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1711.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="683.2" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="686.16" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_keyspace_statement, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="77.0" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.98" y="671.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (4 samples, 0.13%; +0.03%)</title><rect x="107.5" y="1685" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.46" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="2031.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1855.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; -0.10%)</title><rect x="737.3" y="1909" width="0.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="740.34" y="1919.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="12.3" y="581" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="15.26" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (10 samples, 0.32%; 0.00%)</title><rect x="869.0" y="1845" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.04" y="1855.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; -0.03%)</title><rect x="692.6" y="1861" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="695.56" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (28 samples, 0.89%; 0.00%)</title><rect x="94.7" y="1749" width="10.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1759.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="821" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="831.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="106.0" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="113.1" y="1477" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1487.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="634.2" y="1829" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="637.24" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1823.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; 0.00%)</title><rect x="1116.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.63" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="130.8" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.78" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="575.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="2005" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (195 samples, 6.22%; 0.00%)</title><rect x="10.4" y="1557" width="73.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1567.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (3 samples, 0.10%; 0.00%)</title><rect x="107.8" y="1669" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.83" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; -0.03%)</title><rect x="864.9" y="1925" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="867.90" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="335.5" ></text>
</g>
<g >
<title>memtable::apply (14 samples, 0.45%; +0.03%)</title><rect x="1102.0" y="1797" width="5.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1104.95" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (21 samples, 0.67%; 0.00%)</title><rect x="908.2" y="1765" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="911.17" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (6 samples, 0.19%; 0.00%)</title><rect x="91.7" y="1893" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.65" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="139.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.82" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (5 samples, 0.16%; 0.00%)</title><rect x="145.8" y="1589" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.84" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="72.1" y="613" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1653" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1663.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="1118.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.51" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="114.6" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (195 samples, 6.22%; 0.00%)</title><rect x="10.4" y="1589" width="73.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1599.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="51.0" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.03%; -0.03%)</title><rect x="127.0" y="1989" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="130.02" y="1999.5" ></text>
</g>
<g >
<title>do_parse_schema_tables (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="662.8" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="665.84" y="1919.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.10%)</title><rect x="700.1" y="1909" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="703.09" y="1919.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="766.7" y="1861" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="769.69" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="13.8" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.76" y="463.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%; 0.00%)</title><rect x="994.0" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.96" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1797" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1807.5" >[unknown]</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="869.4" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="872.41" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="624.8" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="627.83" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,664 samples, 84.95%; +0.03%)</title><rect x="156.7" y="1941" width="1002.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="159.75" y="1951.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; +0.06%)</title><rect x="211.3" y="1861" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="214.31" y="1871.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::wait_for_one (1 samples, 0.03%; 0.00%)</title><rect x="1119.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.64" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.35%; 0.00%)</title><rect x="1111.0" y="1717" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.98" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="35.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.59" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare_conditions (1 samples, 0.03%; +0.03%)</title><rect x="67.2" y="677" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="70.19" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.06%)</title><rect x="681.3" y="1909" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="684.28" y="1919.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%; 0.00%)</title><rect x="341.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="344.50" y="1727.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (25 samples, 0.80%; +0.03%)</title><rect x="1108.7" y="1909" width="9.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1111.72" y="1919.5" ></text>
</g>
<g >
<title>make_shared_schema (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="383.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="837" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="847.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="463.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="565" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="151.9" y="1637" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="154.86" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; +0.03%)</title><rect x="391.5" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="394.54" y="1759.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="639.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="72.1" y="629" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="639.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="84.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.50" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="98.8" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="463.5" ></text>
</g>
<g >
<title>table::query (1,159 samples, 36.96%; +0.26%)</title><rect x="222.2" y="1893" width="436.1" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="225.22" y="1903.5" >table::query</text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1567.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="725" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="735.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="788.1" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="791.14" y="1839.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (1 samples, 0.03%; +0.03%)</title><rect x="86.8" y="1669" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="89.76" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="501" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="98.8" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="446.5" y="1813" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="449.48" y="1823.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="138.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.69" y="1631.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="511.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (1 samples, 0.03%; -0.03%)</title><rect x="1105.3" y="1765" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1108.34" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1583.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; +0.03%)</title><rect x="967.6" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="970.62" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (2 samples, 0.06%; 0.00%)</title><rect x="155.6" y="1941" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="158.62" y="1951.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1647.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.03%; 0.00%)</title><rect x="91.3" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.28" y="1967.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (3 samples, 0.10%; 0.00%)</title><rect x="67.9" y="709" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.95" y="719.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="267.0" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="270.00" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1189" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1199.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1167.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1111.0" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1113.98" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="221.5" y="1893" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="224.47" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="677" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 3.32%; 0.00%)</title><rect x="10.4" y="869" width="39.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="879.5" >[un..</text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_M_get (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1263.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="691.4" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="694.43" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.03%; 0.00%)</title><rect x="103.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.32" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1285" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1295.5" >[unknown]</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.10%; 0.00%)</title><rect x="45.0" y="533" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="543.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_id::full_name (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="72.5" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.46" y="511.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="766.7" y="1845" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="769.69" y="1855.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (1 samples, 0.03%; +0.03%)</title><rect x="1155.8" y="1925" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1158.76" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="148.5" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.47" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; +0.06%)</title><rect x="738.1" y="1909" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="741.09" y="1919.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1871.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="316.7" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="319.66" y="1759.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::close (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="40.9" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.85" y="495.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.10%; +0.10%)</title><rect x="852.9" y="1877" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="855.86" y="1887.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24 samples, 0.77%; 0.00%)</title><rect x="1109.1" y="1861" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.10" y="1871.5" ></text>
</g>
<g >
<title>frozen_mutation::column_family_id (1 samples, 0.03%; +0.03%)</title><rect x="1117.4" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1120.38" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.06%; +0.06%)</title><rect x="1027.1" y="1653" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1030.07" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="746.7" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="749.75" y="1903.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::~single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="88.3" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.27" y="1807.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (6 samples, 0.19%; 0.00%)</title><rect x="12.6" y="533" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::smp_pollfn::poll (1 samples, 0.03%; +0.03%)</title><rect x="1159.1" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1162.15" y="1951.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; 0.00%)</title><rect x="723.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.04" y="1887.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="41.2" y="517" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="44.23" y="527.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="642.9" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="645.90" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="113.1" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1893" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1903.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="112.7" y="1573" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (6 samples, 0.19%; 0.00%)</title><rect x="140.2" y="1589" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.19" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1471.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="840.4" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.44" y="1807.5" ></text>
</g>
<g >
<title>do_cql_test (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1861" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1871.5" >d..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1663.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.16%)</title><rect x="670.7" y="1909" width="0.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="673.74" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="197" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="207.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="73.2" y="613" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="76.21" y="623.5" ></text>
</g>
<g >
<title>__start_context (87 samples, 2.77%; 0.00%)</title><rect x="11.1" y="773" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="783.5" >__..</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="527.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; 0.00%)</title><rect x="736.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="739.59" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1567.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (18 samples, 0.57%; -0.10%)</title><rect x="594.4" y="1813" width="6.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="597.36" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="949" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="959.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="55.2" y="549" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="58.15" y="559.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="606.0" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="609.02" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.03%)</title><rect x="540.2" y="1829" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="543.17" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (2 samples, 0.06%; +0.03%)</title><rect x="872.0" y="1813" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="875.05" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (144 samples, 4.59%; -0.03%)</title><rect x="794.2" y="1861" width="54.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="797.16" y="1871.5" >cql3:..</text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; +0.03%)</title><rect x="1103.5" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1106.46" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (5 samples, 0.16%; +0.03%)</title><rect x="65.3" y="661" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="68.31" y="671.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1519.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.13%)</title><rect x="841.9" y="1813" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="844.95" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; -0.06%)</title><rect x="312.5" y="1765" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="315.53" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.16%; +0.06%)</title><rect x="404.0" y="1813" width="1.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="406.96" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="872.8" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="875.80" y="1855.5" ></text>
</g>
<g >
<title>seastar::file::close (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; -0.03%)</title><rect x="147.7" y="1445" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="150.72" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1231.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="147.0" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1583.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1381" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1391.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (24 samples, 0.77%; -0.32%)</title><rect x="785.1" y="1861" width="9.1" height="15.0" fill="rgb(60,60,255)" rx="2" ry="2" />
<text  x="788.13" y="1871.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.06%)</title><rect x="805.8" y="1829" width="1.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="808.82" y="1839.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.01" y="527.5" ></text>
</g>
<g >
<title>[unknown] (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="2021" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="2031.5" >[..</text>
</g>
<g >
<title>malloc (4 samples, 0.13%; 0.00%)</title><rect x="651.2" y="1845" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="654.17" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="142.8" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="145.83" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (28 samples, 0.89%; -0.22%)</title><rect x="712.5" y="1925" width="10.5" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="715.51" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.13%)</title><rect x="1142.6" y="1877" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="1145.59" y="1887.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; 0.00%)</title><rect x="384.8" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="387.77" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="401.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="404.33" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; 0.00%)</title><rect x="309.1" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="312.14" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.06%; +0.03%)</title><rect x="31.1" y="421" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="34.07" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.01" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.19%; 0.00%)</title><rect x="641.0" y="1797" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="644.01" y="1807.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%; 0.00%)</title><rect x="1105.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.71" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; -0.06%)</title><rect x="218.8" y="1861" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="221.83" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="104.1" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="107.07" y="1631.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="838.2" y="1781" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="841.18" y="1791.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; +0.03%)</title><rect x="1104.2" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1107.21" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="442.0" y="1781" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="444.96" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="511.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="1119.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.64" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.10%; 0.00%)</title><rect x="1156.1" y="1925" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.14" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="851.7" y="1845" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="854.73" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1989" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1999.5" >[..</text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="645" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="655.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (13 samples, 0.41%; 0.00%)</title><rect x="868.3" y="1877" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.28" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.16%; 0.00%)</title><rect x="140.6" y="1509" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.57" y="1519.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="1138.5" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1141.45" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (76 samples, 2.42%; 0.00%)</title><rect x="15.3" y="613" width="28.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="623.5" >se..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1583.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (266 samples, 8.48%; -0.10%)</title><rect x="548.1" y="1877" width="100.1" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="551.07" y="1887.5" >query::queri..</text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1109" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1119.5" >[unknown]</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="41.2" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.23" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; -0.10%)</title><rect x="957.8" y="1781" width="2.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="960.84" y="1791.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.10%)</title><rect x="186.5" y="1925" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="189.47" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1551.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.03%; -0.13%)</title><rect x="344.9" y="1701" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="347.89" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.18" y="1519.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.13%; +0.03%)</title><rect x="1095.2" y="1845" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1098.18" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1957" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1967.5" >s..</text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.06%)</title><rect x="707.2" y="1893" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="710.24" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (1 samples, 0.03%; 0.00%)</title><rect x="871.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="874.29" y="1823.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (4 samples, 0.13%; +0.06%)</title><rect x="397.2" y="1749" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="400.19" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="575.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result&lt;int&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="723.8" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="726.79" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (9 samples, 0.29%; +0.03%)</title><rect x="848.3" y="1861" width="3.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="851.34" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.69" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.06%)</title><rect x="807.0" y="1813" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="809.95" y="1823.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="805" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="80.7" y="677" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="83.74" y="687.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="711.8" y="1909" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="714.75" y="1919.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::~metric_groups_impl (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1791.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (3 samples, 0.10%; +0.03%)</title><rect x="1105.0" y="1781" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1107.96" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1519.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (3 samples, 0.10%; -0.10%)</title><rect x="394.9" y="1749" width="1.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="397.93" y="1759.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (2 samples, 0.06%; +0.03%)</title><rect x="33.0" y="485" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="35.95" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (4 samples, 0.13%; +0.13%)</title><rect x="1038.7" y="1781" width="1.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="1041.74" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; -0.06%)</title><rect x="145.8" y="1573" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="148.84" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1599.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%; -0.10%)</title><rect x="1035.7" y="1717" width="0.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1038.73" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1077" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1087.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.03%)</title><rect x="727.6" y="1909" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="730.56" y="1919.5" ></text>
</g>
<g >
<title>[[vdso]] (16 samples, 0.51%; -0.19%)</title><rect x="1163.3" y="2037" width="6.0" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="1166.28" y="2047.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="767.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.10%; 0.00%)</title><rect x="19.4" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.41" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="670.4" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="673.36" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (16 samples, 0.51%; +0.06%)</title><rect x="392.7" y="1765" width="6.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="395.67" y="1775.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1375.5" ></text>
</g>
<g >
<title>streamed_mutation_freezer::consume_end_of_stream (1 samples, 0.03%; +0.03%)</title><rect x="221.8" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="224.84" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (10 samples, 0.32%; 0.00%)</title><rect x="37.5" y="549" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.47" y="559.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%; 0.00%)</title><rect x="813.0" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="815.97" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="102.9" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="723.0" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.04" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="287.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; 0.00%)</title><rect x="906.3" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="909.29" y="1775.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="193.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="196.25" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="837.8" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="840.81" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="607.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="181" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (11 samples, 0.35%; 0.00%)</title><rect x="1111.0" y="1701" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.98" y="1711.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; 0.00%)</title><rect x="870.2" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="873.17" y="1743.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (45 samples, 1.43%; +0.06%)</title><rect x="606.4" y="1813" width="16.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="609.40" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1327.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="574.4" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="577.41" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="885" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="895.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.03%; 0.00%)</title><rect x="751.3" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.26" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="59.7" y="597" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.67" y="607.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (268 samples, 8.55%; +0.06%)</title><rect x="413.7" y="1861" width="100.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="416.74" y="1871.5" >query::consu..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="901" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="911.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="39.0" y="389" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="41.97" y="399.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (7 samples, 0.22%; 0.00%)</title><rect x="1102.3" y="1781" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.33" y="1791.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; -0.10%)</title><rect x="412.6" y="1845" width="0.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="415.61" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="193.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="196.62" y="1919.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::reactor::task_queue, unsigned int&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, float&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="139.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.82" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1679.5" ></text>
</g>
<g >
<title>make_combined_reader (35 samples, 1.12%; +0.06%)</title><rect x="562.4" y="1813" width="13.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="565.37" y="1823.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.06%; +0.06%)</title><rect x="11.1" y="677" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="14.13" y="687.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.13%; +0.03%)</title><rect x="309.5" y="1781" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="312.52" y="1791.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.03%; -0.03%)</title><rect x="335.1" y="1717" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="338.10" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="52.9" y="357" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="55.90" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="639.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.06%)</title><rect x="939.0" y="1813" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="942.02" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="72.1" y="533" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="75.09" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="867.2" y="1781" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="870.16" y="1791.5" ></text>
</g>
<g >
<title>__start_context (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="805" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="815.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.20" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="148.8" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.85" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1205" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1215.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="56.7" y="325" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="59.66" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1397" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1407.5" ></text>
</g>
<g >
<title>make_combined_reader (1 samples, 0.03%; +0.03%)</title><rect x="127.4" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="130.40" y="1423.5" ></text>
</g>
<g >
<title>row::~row (19 samples, 0.61%; -0.03%)</title><rect x="435.9" y="1813" width="7.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="438.94" y="1823.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (5 samples, 0.16%; 0.00%)</title><rect x="643.3" y="1797" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="646.27" y="1807.5" ></text>
</g>
<g >
<title>do_cql_test (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="805" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="815.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1829" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1839.5" >s..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; -0.03%)</title><rect x="548.5" y="1861" width="1.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="551.45" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1887.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="40.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.10" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1125" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="549" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="40.1" y="437" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="43.10" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="138.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.31" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1359.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.57%; +0.16%)</title><rect x="978.2" y="1749" width="6.7" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="981.16" y="1759.5" ></text>
</g>
<g >
<title>auth::resource::parent (3 samples, 0.10%; -0.03%)</title><rect x="815.6" y="1813" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="818.61" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="805" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="815.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.06%; 0.00%)</title><rect x="127.4" y="1989" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1999.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="645" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="655.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1247.5" ></text>
</g>
<g >
<title>__start_context (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1957" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1967.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (2 samples, 0.06%; -0.13%)</title><rect x="313.7" y="1765" width="0.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="316.65" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1567.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1807.5" ></text>
</g>
<g >
<title>partition_entry::apply (2 samples, 0.06%; 0.00%)</title><rect x="1106.1" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.09" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (6 samples, 0.19%; 0.00%)</title><rect x="94.7" y="1589" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1471.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (13 samples, 0.41%; 0.00%)</title><rect x="121.4" y="2037" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.38" y="2047.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="55.5" y="453" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="58.53" y="463.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.03%)</title><rect x="950.3" y="1797" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="953.31" y="1807.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (24 samples, 0.77%; +0.03%)</title><rect x="1109.1" y="1845" width="9.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1112.10" y="1855.5" ></text>
</g>
<g >
<title>create_partitions (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="757" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="767.5" ></text>
</g>
<g >
<title>cache_tracker::touch (1 samples, 0.03%; +0.03%)</title><rect x="1118.9" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1121.88" y="1791.5" ></text>
</g>
<g >
<title>__start_context (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="821" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="831.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1455.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.19%; +0.10%)</title><rect x="366.7" y="1685" width="2.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="369.71" y="1695.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="805" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="815.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; +0.03%)</title><rect x="102.6" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="105.56" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (3 samples, 0.10%; +0.10%)</title><rect x="25.4" y="453" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="28.43" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.10%; +0.06%)</title><rect x="865.3" y="1925" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="868.27" y="1935.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (33 samples, 1.05%; -0.06%)</title><rect x="296.0" y="1797" width="12.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="298.97" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="78.1" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="81.11" y="671.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1989" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1999.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1989" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1999.5" >[..</text>
</g>
<g >
<title>tolower (1 samples, 0.03%; +0.03%)</title><rect x="37.1" y="501" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="40.09" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (5 samples, 0.16%; 0.00%)</title><rect x="65.3" y="677" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.31" y="687.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1471.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (3 samples, 0.10%; +0.10%)</title><rect x="416.8" y="1845" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="419.75" y="1855.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1967.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="94.3" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="97.29" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; +0.03%)</title><rect x="118.4" y="1637" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="121.37" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="136.1" y="1653" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="139.05" y="1663.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="150.7" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.73" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="933" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="943.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; 0.00%)</title><rect x="619.2" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="622.19" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="96.2" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1487.5" ></text>
</g>
<g >
<title>row::row (77 samples, 2.46%; -0.03%)</title><rect x="356.2" y="1717" width="28.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="359.17" y="1727.5" >ro..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="188.4" y="1925" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="191.35" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="38.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="133.4" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="136.42" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.1" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.11" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1407.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="131.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.54" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; +0.03%)</title><rect x="16.0" y="389" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="19.02" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="527.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.10%; +0.03%)</title><rect x="861.5" y="1845" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="864.51" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (5 samples, 0.16%; +0.16%)</title><rect x="382.9" y="1653" width="1.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="385.89" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="783.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.26%)</title><rect x="708.4" y="1909" width="1.1" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="711.37" y="1919.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (4 samples, 0.13%; -0.03%)</title><rect x="863.4" y="1909" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="866.39" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="651.2" y="1829" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="654.17" y="1839.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.03%)</title><rect x="243.3" y="1877" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="246.29" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="186.1" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="189.10" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="725" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="735.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1429" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1439.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="54.8" y="437" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="57.78" y="447.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%; +0.03%)</title><rect x="870.2" y="1717" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="873.17" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="821" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="831.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (579 samples, 18.46%; +0.06%)</title><rect x="881.8" y="1877" width="217.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="884.83" y="1887.5" >seastar::noncopyable_functio..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="109.7" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.71" y="1695.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="851.7" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="854.73" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="66.4" y="581" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.44" y="591.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="837.1" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.05" y="1791.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="1116.2" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1119.25" y="1663.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="132.7" y="1493" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="135.67" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="549" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="559.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="901" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="911.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="90.9" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="141.3" y="1445" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1455.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::alter_role_statement*, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="639.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="116.5" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.03%; +0.03%)</title><rect x="1117.8" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1120.76" y="1759.5" ></text>
</g>
<g >
<title>cql3::cf_name::set_column_family (1 samples, 0.03%; 0.00%)</title><rect x="37.1" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.09" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; +0.10%)</title><rect x="165.4" y="1909" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="168.40" y="1919.5" ></text>
</g>
<g >
<title>checked_file_impl::close (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="591.5" ></text>
</g>
<g >
<title>__start_context (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="869" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="879.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="40.1" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.10" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="131.9" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="134.91" y="1487.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%; +0.03%)</title><rect x="1103.8" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1106.83" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="74.3" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.34" y="639.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.06%; +0.06%)</title><rect x="29.6" y="437" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="32.57" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="721.9" y="1909" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="724.91" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1599.5" ></text>
</g>
<g >
<title>do_cql_test (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="773" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="783.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (324 samples, 10.33%; -0.06%)</title><rect x="960.8" y="1797" width="122.0" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="963.85" y="1807.5" >service::storag..</text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1781" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1791.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="72.5" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.46" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.15" y="447.5" ></text>
</g>
<g >
<title>database::find_keyspace (6 samples, 0.19%; -0.03%)</title><rect x="1051.2" y="1765" width="2.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1054.15" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (8 samples, 0.26%; -0.03%)</title><rect x="94.7" y="1669" width="3.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="97.66" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; -0.03%)</title><rect x="841.2" y="1829" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="844.19" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="52.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.90" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="88.3" y="1781" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="91.27" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (4 samples, 0.13%; +0.03%)</title><rect x="23.2" y="373" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="26.17" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="383.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1397" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1407.5" >[unknown]</text>
</g>
<g >
<title>seastar::thread_context::main (9 samples, 0.29%; 0.00%)</title><rect x="91.3" y="2005" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.28" y="2015.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (22 samples, 0.70%; +0.06%)</title><rect x="1083.1" y="1845" width="8.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1086.14" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; -0.06%)</title><rect x="98.8" y="1621" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="101.80" y="1631.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (10 samples, 0.32%; +0.13%)</title><rect x="518.7" y="1813" width="3.8" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="521.72" y="1823.5" ></text>
</g>
<g >
<title>do_cql_test (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="757" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="767.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="51.0" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="623.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; +0.03%)</title><rect x="823.5" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="826.51" y="1775.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.03%; 0.00%)</title><rect x="221.8" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.84" y="1903.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%; +0.03%)</title><rect x="1117.0" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1120.00" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (37 samples, 1.18%; +0.03%)</title><rect x="18.7" y="469" width="13.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="21.65" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; 0.00%)</title><rect x="748.3" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="751.25" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="869" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="879.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%; -0.10%)</title><rect x="467.2" y="1797" width="1.5" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="470.17" y="1807.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="87.1" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.14" y="1743.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.64%; +0.03%)</title><rect x="977.4" y="1765" width="7.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="980.40" y="1775.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="869.8" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.79" y="1711.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.06%)</title><rect x="623.3" y="1813" width="1.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="626.33" y="1823.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1973" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="869.8" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="872.79" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.03%; +0.03%)</title><rect x="87.5" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="90.51" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="139.1" y="1477" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="142.06" y="1487.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="388.2" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="391.16" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.13%; 0.00%)</title><rect x="131.9" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1909" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1919.5" >s..</text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; +0.03%)</title><rect x="126.6" y="1989" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="129.65" y="1999.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.16%; +0.06%)</title><rect x="174.1" y="1893" width="1.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="177.06" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.03%; 0.00%)</title><rect x="1159.9" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.90" y="1951.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="144.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="253.1" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="256.07" y="1839.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (2 samples, 0.06%; +0.06%)</title><rect x="915.3" y="1749" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="918.32" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.22%; -0.06%)</title><rect x="464.2" y="1797" width="2.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="467.16" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="145.8" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.84" y="1535.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="49.1" y="309" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="52.13" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="867.9" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="870.91" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (10 samples, 0.32%; +0.06%)</title><rect x="498.8" y="1829" width="3.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="501.78" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (7 samples, 0.22%; +0.06%)</title><rect x="15.3" y="469" width="2.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="18.27" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="747.1" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="750.12" y="1903.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.03%; 0.00%)</title><rect x="836.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.68" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (43 samples, 1.37%; 0.00%)</title><rect x="136.8" y="1669" width="16.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="1026.7" y="1653" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1029.70" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="45.0" y="325" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="47.99" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%; +0.03%)</title><rect x="889.7" y="1845" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="892.73" y="1855.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; -0.06%)</title><rect x="824.6" y="1765" width="1.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="827.64" y="1775.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.03%)</title><rect x="168.0" y="1893" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="171.04" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="551.5" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="554.46" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="72.1" y="549" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="559.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1717" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1727.5" >[unknown]</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="84.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.50" y="1807.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.10%; 0.00%)</title><rect x="133.4" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="16.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.40" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="48.4" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="96.5" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.54" y="1407.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1082.8" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1085.76" y="1823.5" ></text>
</g>
<g >
<title>query::querier_base::close (86 samples, 2.74%; -0.03%)</title><rect x="515.7" y="1877" width="32.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="518.71" y="1887.5" >qu..</text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (10 samples, 0.32%; +0.13%)</title><rect x="778.4" y="1877" width="3.7" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="781.35" y="1887.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%; 0.00%)</title><rect x="1104.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.59" y="1775.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="676.8" y="1909" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="679.76" y="1919.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.03%)</title><rect x="703.9" y="1909" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="706.85" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (20 samples, 0.64%; 0.00%)</title><rect x="71.7" y="677" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.71" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (5 samples, 0.16%; 0.00%)</title><rect x="22.8" y="437" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.79" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="1119.3" y="1925" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1122.26" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.13%; 0.00%)</title><rect x="30.3" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.32" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; 0.00%)</title><rect x="794.9" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="797.91" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (352 samples, 11.22%; +0.10%)</title><rect x="275.7" y="1861" width="132.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="278.65" y="1871.5" >flat_mutation_re..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="48.4" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="263.2" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="266.23" y="1855.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="669.6" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="672.61" y="1919.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%; +0.03%)</title><rect x="344.5" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="347.51" y="1711.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (343 samples, 10.94%; -0.06%)</title><rect x="278.3" y="1829" width="129.0" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="281.28" y="1839.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="737.0" y="1909" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="739.96" y="1919.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (84 samples, 2.68%; 0.00%)</title><rect x="12.3" y="677" width="31.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.26" y="687.5" >si..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1503.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="97.7" y="1493" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="100.67" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1749" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1759.5" >[unknown]</text>
</g>
<g >
<title>seastar::metrics::impl::metric_definition_impl::metric_definition_impl (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1343.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1215.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.81" y="1647.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (1 samples, 0.03%; 0.00%)</title><rect x="1107.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.60" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.10%; 0.00%)</title><rect x="69.8" y="661" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.83" y="671.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="184.2" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="187.22" y="1615.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="137.2" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="140.18" y="1471.5" ></text>
</g>
<g >
<title>db::filter_for_query (4 samples, 0.13%; +0.10%)</title><rect x="1054.2" y="1765" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1057.16" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="559.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.16%; +0.03%)</title><rect x="788.5" y="1813" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="791.51" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (5 samples, 0.16%; -0.03%)</title><rect x="1097.8" y="1845" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1100.81" y="1855.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; 0.00%)</title><rect x="514.6" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="517.59" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="100.3" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.31" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; +0.03%)</title><rect x="149.2" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="152.22" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="102.9" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1631.5" ></text>
</g>
<g >
<title>__start_context (9 samples, 0.29%; 0.00%)</title><rect x="91.3" y="2021" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.28" y="2031.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="144.3" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="147.33" y="1471.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (35 samples, 1.12%; 0.00%)</title><rect x="67.9" y="725" width="13.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.95" y="735.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="511.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (2 samples, 0.06%; 0.00%)</title><rect x="118.7" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.74" y="1663.5" ></text>
</g>
<g >
<title>make_combined_reader (43 samples, 1.37%; 0.00%)</title><rect x="560.9" y="1829" width="16.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.87" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1359.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="680.9" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="683.90" y="1919.5" ></text>
</g>
<g >
<title>__start_context (5 samples, 0.16%; 0.00%)</title><rect x="126.6" y="2037" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.65" y="2047.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (667 samples, 21.27%; -0.06%)</title><rect x="867.9" y="1925" width="251.0" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="870.91" y="1935.5" >seastar::lambda_task&lt;seastar::exe..</text>
</g>
<g >
<title>seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="50.3" y="341" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="53.26" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="773" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="783.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1935.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (4 samples, 0.13%; +0.13%)</title><rect x="813.3" y="1813" width="1.6" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="816.35" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1295.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (20 samples, 0.64%; +0.06%)</title><rect x="924.3" y="1813" width="7.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="927.35" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (40 samples, 1.28%; -0.06%)</title><rect x="736.2" y="1925" width="15.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="739.21" y="1935.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (342 samples, 10.91%; +0.13%)</title><rect x="954.1" y="1813" width="128.7" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="957.08" y="1823.5" >service::storage..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (3 samples, 0.10%; 0.00%)</title><rect x="67.9" y="693" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.95" y="703.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22 samples, 0.70%; +0.03%)</title><rect x="1100.1" y="1893" width="8.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1103.07" y="1903.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="87.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.51" y="1743.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="677" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="687.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (20 samples, 0.64%; -0.06%)</title><rect x="435.6" y="1829" width="7.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="438.57" y="1839.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.41%; +0.16%)</title><rect x="528.5" y="1797" width="4.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="531.51" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="36.3" y="453" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="39.34" y="463.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1253" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1263.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="76.2" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="79.22" y="671.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::index (1 samples, 0.03%; +0.03%)</title><rect x="108.6" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="111.58" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (8 samples, 0.26%; 0.00%)</title><rect x="1086.9" y="1829" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1089.90" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.34" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (382 samples, 12.18%; 0.00%)</title><rect x="10.0" y="2053" width="143.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1391.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; +0.03%)</title><rect x="144.0" y="1589" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="146.95" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.2" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.20" y="1583.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="1138.8" y="1909" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.83" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.03%; -0.03%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1192.62" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="789" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="799.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; -0.16%)</title><rect x="166.5" y="1909" width="0.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="169.53" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="581" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt;::_M_addr (1 samples, 0.03%; +0.03%)</title><rect x="95.8" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="98.79" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.59" y="623.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.21" y="639.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="14.1" y="421" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="17.14" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="16.4" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.40" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="1016.9" y="1653" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1019.91" y="1663.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.10%; +0.03%)</title><rect x="1089.9" y="1829" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1092.91" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="153.4" y="2021" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.36" y="2031.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; +0.03%)</title><rect x="112.3" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="115.35" y="1711.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="101" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="111.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (19 samples, 0.61%; +0.16%)</title><rect x="829.9" y="1765" width="7.2" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="832.90" y="1775.5" ></text>
</g>
<g >
<title>database::find_schema (7 samples, 0.22%; 0.00%)</title><rect x="795.3" y="1845" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="798.29" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="399.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.03%; 0.00%)</title><rect x="184.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.59" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1663.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="87.1" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="90.14" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="46.1" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="49.12" y="239.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="821" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="831.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1925" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1935.5" >s..</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="170.7" y="1877" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="173.67" y="1887.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (7 samples, 0.22%; +0.03%)</title><rect x="1111.4" y="1653" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1114.36" y="1663.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="463.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.13%; -0.03%)</title><rect x="1049.6" y="1765" width="1.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1052.65" y="1775.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (12 samples, 0.38%; +0.06%)</title><rect x="730.6" y="1909" width="4.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="733.57" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.03%; 0.00%)</title><rect x="1160.3" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1163.27" y="1951.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; 0.00%)</title><rect x="870.2" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="873.17" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="40.9" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.85" y="463.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="48.0" y="453" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="51.00" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="164.3" y="1893" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="167.27" y="1903.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1503.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1 samples, 0.03%; +0.03%)</title><rect x="797.9" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="800.92" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.00" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="130.4" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="133.41" y="1663.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.03%; +0.03%)</title><rect x="546.2" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="549.19" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="134.2" y="1477" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="137.17" y="1487.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="495.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.03%; +0.03%)</title><rect x="751.3" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="754.26" y="1903.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="709" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="719.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (6 samples, 0.19%; 0.00%)</title><rect x="91.7" y="1909" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.65" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (6 samples, 0.19%; 0.00%)</title><rect x="94.7" y="1573" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; +0.03%)</title><rect x="615.4" y="1765" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="618.43" y="1775.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (1 samples, 0.03%; 0.00%)</title><rect x="184.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.59" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="80.4" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="687.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; +0.03%)</title><rect x="727.2" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="730.18" y="1919.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="141.7" y="1397" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="144.70" y="1407.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (3 samples, 0.10%; +0.06%)</title><rect x="1114.0" y="1685" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1116.99" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (194 samples, 6.19%; 0.00%)</title><rect x="10.4" y="1525" width="73.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1535.5" >[unknown]</text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (5 samples, 0.16%; -0.03%)</title><rect x="489.4" y="1829" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="492.38" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="168.4" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.41" y="1887.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%; -0.10%)</title><rect x="488.6" y="1813" width="0.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="491.62" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (9 samples, 0.29%; +0.03%)</title><rect x="29.2" y="453" width="3.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="32.19" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="113.1" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.10%)</title><rect x="710.2" y="1909" width="1.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="713.25" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="204.9" y="1893" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="207.91" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.03%)</title><rect x="522.9" y="1797" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="525.86" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (40 samples, 1.28%; +0.16%)</title><rect x="917.6" y="1829" width="15.0" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="920.58" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.26%; +0.06%)</title><rect x="981.9" y="1733" width="3.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="984.92" y="1743.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="799.5" ></text>
</g>
<g >
<title>reader_permit::max_result_size (1 samples, 0.03%; +0.03%)</title><rect x="653.1" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="656.05" y="1887.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (6 samples, 0.19%; -0.03%)</title><rect x="650.4" y="1861" width="2.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="653.42" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::construct&lt;seastar::shared_ptr&lt;cql3::relation&gt;, seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1615.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.03%; +0.03%)</title><rect x="559.4" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="562.36" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%; +0.06%)</title><rect x="318.9" y="1701" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="321.92" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.20" y="1551.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1471.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="90.9" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="93.90" y="1935.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (5 samples, 0.16%; +0.13%)</title><rect x="253.5" y="1861" width="1.8" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="256.45" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="511.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.18" y="1471.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="709" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="719.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (2 samples, 0.06%; +0.03%)</title><rect x="154.9" y="1941" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="157.87" y="1951.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.41%; 0.00%)</title><rect x="121.4" y="2021" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.38" y="2031.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="1000.7" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1003.73" y="1727.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (31 samples, 0.99%; -0.45%)</title><rect x="369.0" y="1685" width="11.6" height="15.0" fill="rgb(0,0,255)" rx="2" ry="2" />
<text  x="371.97" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="1097.1" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1100.06" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="118.4" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.37" y="1679.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="53.3" y="549" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="56.27" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.03%; 0.00%)</title><rect x="1114.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.74" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="655.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%; 0.00%)</title><rect x="93.9" y="1957" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.91" y="1967.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (4 samples, 0.13%; 0.00%)</title><rect x="306.9" y="1781" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="309.88" y="1791.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="72.5" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.46" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="627.5" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="630.47" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1839.5" ></text>
</g>
<g >
<title>database::query (15 samples, 0.48%; -0.19%)</title><rect x="178.6" y="1925" width="5.6" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="181.57" y="1935.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; 0.00%)</title><rect x="1025.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1028.94" y="1647.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (3 samples, 0.10%; -0.03%)</title><rect x="534.5" y="1781" width="1.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="537.53" y="1791.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; -0.13%)</title><rect x="847.6" y="1813" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="850.59" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="901" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="911.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (4 samples, 0.13%; 0.00%)</title><rect x="65.7" y="645" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.69" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1909" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="131.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.54" y="1647.5" ></text>
</g>
<g >
<title>row_cache::update (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1903.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="543.5" ></text>
</g>
<g >
<title>db::system_keyspace::update_cdc_generation_id (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1887.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="1087.7" y="1797" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1090.65" y="1807.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="495.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; 0.00%)</title><rect x="16.8" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.77" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1145.6" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1148.60" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="869.8" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.79" y="1727.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="63.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="872.4" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="875.42" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; +0.03%)</title><rect x="82.6" y="709" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="85.62" y="719.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 3.44%; 0.00%)</title><rect x="10.4" y="885" width="40.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="895.5" >[un..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="447.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1877" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1887.5" >s..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="533" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="48.4" y="501" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.10%; +0.03%)</title><rect x="19.4" y="389" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="22.41" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="49.5" y="581" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="591.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="872.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="875.42" y="1791.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::empty (1 samples, 0.03%; +0.03%)</title><rect x="32.6" y="501" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="35.58" y="511.5" ></text>
</g>
<g >
<title>database::query (59 samples, 1.88%; 0.00%)</title><rect x="1007.9" y="1701" width="22.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1010.88" y="1711.5" >d..</text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (2 samples, 0.06%; 0.00%)</title><rect x="1107.2" y="1813" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.22" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1845" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1855.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="34.5" y="565" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="37.46" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_view_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="42.4" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.36" y="575.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (3 samples, 0.10%; +0.06%)</title><rect x="516.8" y="1829" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="519.84" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%; +0.03%)</title><rect x="98.0" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.05" y="1647.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1679.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%; +0.03%)</title><rect x="785.9" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="788.88" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="90.9" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1999.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1861" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1871.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="661" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="671.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1471.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (21 samples, 0.67%; -0.22%)</title><rect x="704.6" y="1925" width="7.9" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="707.60" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deque (4 samples, 0.13%; 0.00%)</title><rect x="13.4" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="629" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="118.0" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.99" y="1695.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%; +0.03%)</title><rect x="356.2" y="1701" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="359.17" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="904.8" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="907.78" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (21 samples, 0.67%; -0.10%)</title><rect x="687.7" y="1909" width="7.9" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="690.67" y="1919.5" ></text>
</g>
<g >
<title>_longjmp_unwind (1 samples, 0.03%; 0.00%)</title><rect x="1160.7" y="2053" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1163.65" y="2063.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1118.1" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1121.13" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="821" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="831.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::register_stats (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="826.5" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="829.52" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::signal (4 samples, 0.13%; +0.10%)</title><rect x="405.8" y="1813" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="408.84" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="100.3" y="1573" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.31" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="131.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.54" y="1663.5" ></text>
</g>
<g >
<title>create_partitions (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="789" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="182.3" y="1909" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="185.33" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (7 samples, 0.22%; 0.00%)</title><rect x="12.6" y="613" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="623.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="85" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="95.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="10.0" y="2037" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="130.0" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="133.03" y="1567.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1711.5" ></text>
</g>
<g >
<title>auth::operator== (2 samples, 0.06%; +0.06%)</title><rect x="823.9" y="1765" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="826.88" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="645" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="35.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.59" y="399.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="767.5" ></text>
</g>
<g >
<title>service::client_state::has_access (88 samples, 2.81%; +0.16%)</title><rect x="808.1" y="1829" width="33.1" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="811.08" y="1839.5" >se..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (5 samples, 0.16%; 0.00%)</title><rect x="114.2" y="1669" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1679.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.10%; +0.10%)</title><rect x="550.3" y="1861" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="553.33" y="1871.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="146.2" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.21" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="627.8" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="630.84" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.06%)</title><rect x="554.1" y="1845" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="557.09" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (1 samples, 0.03%; +0.03%)</title><rect x="723.4" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="726.42" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="144.3" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (1 samples, 0.03%; 0.00%)</title><rect x="1159.9" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.90" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (5 samples, 0.16%; 0.00%)</title><rect x="107.5" y="1717" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1727.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (13 samples, 0.41%; -0.13%)</title><rect x="263.6" y="1877" width="4.9" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="266.61" y="1887.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;seastar::do_recursive_touch_directory (1 samples, 0.03%; +0.03%)</title><rect x="724.2" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="727.17" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="527.5" ></text>
</g>
<g >
<title>all (3,136 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (9 samples, 0.29%; +0.16%)</title><rect x="1152.0" y="1909" width="3.4" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1155.00" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.10%; 0.00%)</title><rect x="194.4" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="197.38" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="48.4" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement::do_execute (1 samples, 0.03%; +0.03%)</title><rect x="683.9" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="686.91" y="1935.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%; +0.03%)</title><rect x="321.2" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="324.18" y="1759.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.03%; +0.03%)</title><rect x="974.8" y="1781" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="977.77" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="821" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="831.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.41%; +0.19%)</title><rect x="258.7" y="1861" width="4.9" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="261.72" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="417.9" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="420.88" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::touch_directory (1 samples, 0.03%; 0.00%)</title><rect x="723.8" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.79" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="655.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="543.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="1155.4" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.38" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; +0.03%)</title><rect x="110.8" y="1685" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="113.84" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_deallocate_node (1 samples, 0.03%; +0.03%)</title><rect x="68.7" y="613" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="71.70" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="46.5" y="341" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="49.50" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (36 samples, 1.15%; +0.06%)</title><rect x="162.8" y="1925" width="13.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="165.77" y="1935.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.10%; +0.03%)</title><rect x="537.9" y="1797" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="540.91" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (4 samples, 0.13%; 0.00%)</title><rect x="118.0" y="1701" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.99" y="1711.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="104.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.82" y="1663.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="40.9" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.85" y="479.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="69.1" y="709" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="72.08" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="463.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::close (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (4 samples, 0.13%; 0.00%)</title><rect x="89.0" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.02" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1951.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1663.5" ></text>
</g>
<g >
<title>__start_context (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="837" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="847.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (17 samples, 0.54%; 0.00%)</title><rect x="111.6" y="1717" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.59" y="1727.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="687.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="133.8" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.79" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1567.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="750.5" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="753.51" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1631.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="773" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="783.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (6 samples, 0.19%; 0.00%)</title><rect x="533.4" y="1797" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="536.40" y="1807.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.03%; 0.00%)</title><rect x="1113.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.62" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1813" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1823.5" >c..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="57.4" y="501" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="60.41" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (87 samples, 2.77%; 0.00%)</title><rect x="11.1" y="741" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="751.5" >se..</text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1141" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1151.5" >[unknown]</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (6 samples, 0.19%; 0.00%)</title><rect x="12.6" y="565" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (7 samples, 0.22%; +0.03%)</title><rect x="869.0" y="1829" width="2.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="872.04" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.29%; +0.19%)</title><rect x="1003.0" y="1685" width="3.4" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="1005.99" y="1695.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (4 samples, 0.13%; +0.03%)</title><rect x="599.6" y="1781" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="602.62" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="821" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (254 samples, 8.10%; -0.16%)</title><rect x="552.2" y="1861" width="95.6" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="555.21" y="1871.5" >std::_Funct..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="869" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="879.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (14 samples, 0.45%; 0.00%)</title><rect x="112.7" y="1701" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1583.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="113.1" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; -0.10%)</title><rect x="310.3" y="1765" width="0.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="313.27" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (4 samples, 0.13%; 0.00%)</title><rect x="56.3" y="565" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="575.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (2 samples, 0.06%; -0.10%)</title><rect x="219.6" y="1861" width="0.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="222.59" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="115.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.73" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="133.8" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.79" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="401.7" y="1797" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="404.70" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (3 samples, 0.10%; +0.03%)</title><rect x="87.9" y="1813" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="90.89" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (20 samples, 0.64%; -0.03%)</title><rect x="144.0" y="1637" width="7.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="146.95" y="1647.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="965" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="975.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (20 samples, 0.64%; 0.00%)</title><rect x="1110.6" y="1781" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.61" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="559.5" ></text>
</g>
<g >
<title>[unknown] (194 samples, 6.19%; 0.00%)</title><rect x="10.4" y="1509" width="73.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1519.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="960.5" y="1797" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="963.47" y="1807.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="98.8" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1615.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="101.4" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="104.43" y="1471.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="151.5" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.48" y="1551.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="103.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.32" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.19%; 0.00%)</title><rect x="94.7" y="1605" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (5 samples, 0.16%; 0.00%)</title><rect x="22.8" y="421" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.79" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1333" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1343.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="396.4" y="1733" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="399.43" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="42.4" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.36" y="543.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (6 samples, 0.19%; 0.00%)</title><rect x="91.7" y="1957" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.65" y="1967.5" ></text>
</g>
<g >
<title>cql3::functions::function_name::~function_name (1 samples, 0.03%; +0.03%)</title><rect x="50.6" y="549" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="53.64" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (3 samples, 0.10%; 0.00%)</title><rect x="59.7" y="613" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.67" y="623.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (15 samples, 0.48%; 0.00%)</title><rect x="52.5" y="581" width="5.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1695.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.03%; -0.10%)</title><rect x="1011.6" y="1685" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1014.65" y="1695.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1503.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%; 0.00%)</title><rect x="571.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="574.03" y="1807.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%; -0.16%)</title><rect x="512.7" y="1781" width="1.5" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="515.70" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1839.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%; +0.03%)</title><rect x="16.8" y="309" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="19.77" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; +0.03%)</title><rect x="871.3" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="874.29" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; -0.03%)</title><rect x="683.5" y="1877" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="686.53" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (75 samples, 2.39%; +0.03%)</title><rect x="356.5" y="1701" width="28.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="359.55" y="1711.5" >c..</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="591.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="319.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.03%; +0.03%)</title><rect x="184.6" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="187.59" y="1903.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (2 samples, 0.06%; -0.03%)</title><rect x="118.7" y="1669" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="121.74" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; 0.00%)</title><rect x="114.2" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1663.5" ></text>
</g>
<g >
<title>utils::utf8::validate_with_error_position (1 samples, 0.03%; +0.03%)</title><rect x="121.0" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="124.00" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (130 samples, 4.15%; -0.13%)</title><rect x="336.2" y="1733" width="48.9" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="339.23" y="1743.5" >part..</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="17.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.53" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="553.7" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="556.72" y="1855.5" ></text>
</g>
<g >
<title>make_combined_reader (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="1108.3" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1111.35" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; 0.00%)</title><rect x="114.6" y="1573" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="447.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1221" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1231.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="103.7" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="106.69" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="56.7" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.66" y="351.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%; 0.00%)</title><rect x="1161.0" y="2053" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1164.03" y="2063.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.06%; +0.06%)</title><rect x="621.8" y="1797" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="624.82" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="148.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.85" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1551.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, utils::directories::verify_owner_and_mode (1 samples, 0.03%; 0.00%)</title><rect x="751.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.64" y="1935.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (5 samples, 0.16%; 0.00%)</title><rect x="100.3" y="1653" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.31" y="1663.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="142.1" y="1477" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="145.07" y="1487.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (2 samples, 0.06%; +0.03%)</title><rect x="52.5" y="389" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="55.52" y="399.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.10%; 0.00%)</title><rect x="185.0" y="1925" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.97" y="1935.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%; +0.03%)</title><rect x="33.7" y="485" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="36.71" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="58.9" y="501" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="61.92" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="117.2" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="120.24" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1439.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%; 0.00%)</title><rect x="66.4" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="607.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="51.0" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="141.3" y="1413" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="144.32" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (6 samples, 0.19%; +0.03%)</title><rect x="99.9" y="1669" width="2.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="102.93" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.17" y="1503.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (2 samples, 0.06%; +0.06%)</title><rect x="61.9" y="677" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="64.93" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.18" y="1487.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="34.8" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.83" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.03%)</title><rect x="173.3" y="1861" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="176.30" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="43.1" y="549" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="46.11" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="195.5" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="198.50" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::alter_view_statement*, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="42.4" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.36" y="527.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.2" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.20" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.03%)</title><rect x="1093.7" y="1829" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1096.67" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="59.7" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.67" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1717" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1727.5" >c..</text>
</g>
<g >
<title>cql3::operation::set_value::prepare (6 samples, 0.19%; +0.03%)</title><rect x="62.7" y="677" width="2.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="65.68" y="687.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.29%; +0.13%)</title><rect x="755.0" y="1893" width="3.4" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="758.03" y="1903.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="694.1" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="697.07" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (5 samples, 0.16%; 0.00%)</title><rect x="869.4" y="1781" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.41" y="1791.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1519.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (4 samples, 0.13%; 0.00%)</title><rect x="1102.7" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.70" y="1759.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="726.1" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="729.05" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (3 samples, 0.10%; 0.00%)</title><rect x="107.8" y="1653" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.83" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (12 samples, 0.38%; 0.00%)</title><rect x="45.0" y="565" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1871.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.03%; 0.00%)</title><rect x="1105.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.71" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="151.5" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.48" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.06%; +0.06%)</title><rect x="379.9" y="1653" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="382.88" y="1663.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1391.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="148.8" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="151.85" y="1535.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (1 samples, 0.03%; +0.03%)</title><rect x="863.0" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="866.02" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (64 samples, 2.04%; +0.03%)</title><rect x="1058.7" y="1765" width="24.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1061.68" y="1775.5" >s..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (7 samples, 0.22%; 0.00%)</title><rect x="1115.1" y="1749" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.12" y="1759.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1903.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="147.0" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1567.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.16%; +0.10%)</title><rect x="168.8" y="1893" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="171.79" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="57.4" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.41" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="16.0" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.02" y="463.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; +0.03%)</title><rect x="968.4" y="1781" width="3.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="971.37" y="1791.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1279.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.06%; +0.03%)</title><rect x="931.9" y="1813" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="934.88" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.32%; 0.00%)</title><rect x="854.0" y="1861" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="856.99" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="151.5" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.48" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1327.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (6 samples, 0.19%; +0.06%)</title><rect x="728.3" y="1909" width="2.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="731.31" y="1919.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.03%; +0.03%)</title><rect x="693.3" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="696.32" y="1871.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="44.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.62" y="367.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="221.8" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.84" y="1871.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (119 samples, 3.79%; -0.06%)</title><rect x="992.5" y="1749" width="44.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="995.46" y="1759.5" >serv..</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.03%; +0.03%)</title><rect x="51.4" y="597" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="54.39" y="607.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="141.3" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="1146.0" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1148.98" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="78.9" y="661" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="81.86" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1631.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (8 samples, 0.26%; 0.00%)</title><rect x="94.7" y="1653" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.34" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 2.84%; 0.00%)</title><rect x="10.4" y="837" width="33.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="847.5" >[u..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="613" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="623.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (3 samples, 0.10%; 0.00%)</title><rect x="23.5" y="341" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.55" y="351.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (2 samples, 0.06%; 0.00%)</title><rect x="267.7" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="270.75" y="1871.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="398.7" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="401.69" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="41.2" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.23" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (3 samples, 0.10%; -0.10%)</title><rect x="497.3" y="1829" width="1.1" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="500.28" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="148.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.85" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (3 samples, 0.10%; 0.00%)</title><rect x="110.5" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="495.5" ></text>
</g>
<g >
<title>[unknown] (134 samples, 4.27%; 0.00%)</title><rect x="10.4" y="917" width="50.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="927.5" >[unkn..</text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1989" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1999.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (3 samples, 0.10%; 0.00%)</title><rect x="55.2" y="565" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.15" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="48.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.00" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.10%; 0.00%)</title><rect x="133.4" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="39.3" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.35" y="511.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="741" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="55.5" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.53" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="114.2" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1631.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="74.0" y="597" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="76.97" y="607.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="917" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="927.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; +0.06%)</title><rect x="770.1" y="1893" width="3.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="773.08" y="1903.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="149.6" y="1365" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="152.60" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="100.3" y="1589" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.31" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (25 samples, 0.80%; -0.03%)</title><rect x="504.8" y="1797" width="9.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="507.80" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (7 samples, 0.22%; 0.00%)</title><rect x="660.2" y="1909" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="663.20" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="840.8" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="843.82" y="1791.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%; +0.10%)</title><rect x="675.6" y="1909" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="678.63" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="103.3" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="106.32" y="1503.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (40 samples, 1.28%; -0.03%)</title><rect x="902.5" y="1813" width="15.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="905.53" y="1823.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (602 samples, 19.20%; -0.10%)</title><rect x="873.2" y="1909" width="226.5" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="876.18" y="1919.5" >seastar::concrete_execution_s..</text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1423.5" ></text>
</g>
<g >
<title>seastar::output_stream&lt;char&gt;::close (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1941" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1951.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.13%; 0.00%)</title><rect x="134.5" y="1669" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1679.5" ></text>
</g>
<g >
<title>local_schema_registry (2 samples, 0.06%; -0.06%)</title><rect x="957.1" y="1797" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="960.09" y="1807.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="57.0" y="389" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="60.03" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5 samples, 0.16%; +0.03%)</title><rect x="22.8" y="405" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="25.79" y="415.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.06%; +0.06%)</title><rect x="1158.4" y="1925" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1161.39" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1455.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (5 samples, 0.16%; 0.00%)</title><rect x="107.5" y="1701" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="36.7" y="293" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="39.72" y="303.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1989" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1999.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.19%; 0.00%)</title><rect x="94.7" y="1621" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1631.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1951.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (3 samples, 0.10%; 0.00%)</title><rect x="89.4" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.39" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (6 samples, 0.19%; 0.00%)</title><rect x="12.6" y="597" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="116.1" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="119.11" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.03%; +0.03%)</title><rect x="31.4" y="405" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="34.45" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (76 samples, 2.42%; 0.00%)</title><rect x="15.3" y="597" width="28.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="607.5" >cq..</text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1599.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="130.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.41" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="108.2" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="111.21" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="511.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; 0.00%)</title><rect x="1027.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1030.83" y="1663.5" ></text>
</g>
<g >
<title>hwloc__add_info_nodup.isra.0 (1 samples, 0.03%; 0.00%)</title><rect x="129.3" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.28" y="2047.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1519.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; +0.03%)</title><rect x="95.4" y="1509" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="98.41" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1935.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (114 samples, 3.64%; +0.16%)</title><rect x="893.1" y="1845" width="42.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="896.12" y="1855.5" >cql3..</text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1903.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="816.7" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="819.73" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="575.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="152.6" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="155.61" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="81.9" y="517" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="84.87" y="527.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1013" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1023.5" >[unknown]</text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="347.9" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="350.90" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.06%; 0.00%)</title><rect x="109.7" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.71" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.06%)</title><rect x="317.4" y="1717" width="2.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="320.42" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; +0.03%)</title><rect x="72.5" y="469" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="75.46" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; 0.00%)</title><rect x="112.7" y="1637" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::raw::insert_statement::~insert_statement (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="90.9" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1967.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (18 samples, 0.57%; 0.00%)</title><rect x="51.4" y="613" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.39" y="623.5" ></text>
</g>
<g >
<title>query_state::query_state (12 samples, 0.38%; -0.19%)</title><rect x="648.5" y="1877" width="4.6" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="651.54" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (33 samples, 1.05%; 0.00%)</title><rect x="139.1" y="1653" width="12.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; -0.06%)</title><rect x="514.2" y="1829" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="517.21" y="1839.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (9 samples, 0.29%; -0.03%)</title><rect x="790.8" y="1829" width="3.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="793.77" y="1839.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (2 samples, 0.06%; +0.03%)</title><rect x="1106.1" y="1765" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1109.09" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="85" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="95.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="72.5" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.46" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1711.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="144.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1487.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="54.4" y="485" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="57.40" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.35%; 0.00%)</title><rect x="1111.0" y="1733" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.98" y="1743.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.03%; +0.03%)</title><rect x="748.6" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="751.63" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="134.5" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="137.55" y="1487.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1791.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (30 samples, 0.96%; 0.00%)</title><rect x="739.6" y="1909" width="11.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="742.60" y="1919.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="1112.1" y="1605" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1115.11" y="1615.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="571.4" y="1797" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="574.40" y="1807.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="1093.7" y="1845" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1096.67" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="110.5" y="1669" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="113.47" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="115.7" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="118.73" y="1647.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1877" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1887.5" >s..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1029.0" y="1669" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1031.95" y="1679.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.03%; 0.00%)</title><rect x="385.1" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="388.15" y="1743.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.45%; 0.00%)</title><rect x="258.3" y="1877" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="261.34" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (23 samples, 0.73%; +0.03%)</title><rect x="212.1" y="1893" width="8.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="215.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="56.7" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.66" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1919.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; 0.00%)</title><rect x="854.0" y="1877" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="856.99" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (2 samples, 0.06%; 0.00%)</title><rect x="58.9" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="806.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="809.58" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="758.4" y="1909" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="761.41" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1695.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (10 samples, 0.32%; +0.06%)</title><rect x="303.1" y="1781" width="3.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="306.12" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="170.7" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="173.67" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1871.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (7 samples, 0.22%; -0.06%)</title><rect x="655.7" y="1877" width="2.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="658.69" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="72.1" y="597" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.03%; +0.03%)</title><rect x="82.2" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="85.24" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; 0.00%)</title><rect x="859.6" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="862.63" y="1871.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="144.7" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="147.71" y="1631.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.40%; 0.00%)</title><rect x="1173.1" y="2053" width="16.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1176.07" y="2063.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1759.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::~metric_groups (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1823.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="802.1" y="1829" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="805.06" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="100.3" y="1605" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.31" y="1615.5" ></text>
</g>
<g >
<title>is_system_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="64.9" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="67.94" y="671.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.03%; -0.06%)</title><rect x="498.4" y="1829" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="501.41" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (6 samples, 0.19%; 0.00%)</title><rect x="91.7" y="1941" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.65" y="1951.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (55 samples, 1.75%; -0.06%)</title><rect x="1061.7" y="1749" width="20.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1064.69" y="1759.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="789" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="799.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="691.8" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="694.81" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="19.8" y="373" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="22.78" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1423.5" ></text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.10%; 0.00%)</title><rect x="185.0" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.97" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.06%; 0.00%)</title><rect x="50.3" y="597" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="138.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.69" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="677" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="687.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="35.2" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.21" y="511.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="934.9" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="937.89" y="1839.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; +0.03%)</title><rect x="608.3" y="1797" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="611.28" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="14.9" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.89" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="134.9" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="137.92" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1615.5" ></text>
</g>
<g >
<title>create_partitions (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="725" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="735.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (16 samples, 0.51%; +0.10%)</title><rect x="677.9" y="1925" width="6.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="680.89" y="1935.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.03%)</title><rect x="1048.9" y="1765" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1051.90" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="135.3" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="138.30" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (14 samples, 0.45%; -0.03%)</title><rect x="936.0" y="1845" width="5.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="939.01" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (3 samples, 0.10%; 0.00%)</title><rect x="63.1" y="661" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.05" y="671.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.06%; +0.03%)</title><rect x="870.5" y="1749" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="873.54" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="75.8" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="78.85" y="671.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; +0.03%)</title><rect x="889.4" y="1845" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="892.36" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="40.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.10" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.03%; +0.03%)</title><rect x="33.3" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="36.33" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.8" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.79" y="1455.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="723.0" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.04" y="1871.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (152 samples, 4.85%; +0.06%)</title><rect x="577.0" y="1829" width="57.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="580.05" y="1839.5" >memtab..</text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1925" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1935.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="146.2" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.21" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="773" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="783.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="991.0" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="993.95" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (10 samples, 0.32%; 0.00%)</title><rect x="139.8" y="1637" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.82" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="50.6" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.64" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="53" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="63.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="751.3" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.26" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="99.6" y="1461" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="102.55" y="1471.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::fill_column_info (1 samples, 0.03%; 0.00%)</title><rect x="185.3" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.34" y="1839.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1599.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; +0.03%)</title><rect x="375.4" y="1669" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="378.36" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.10%; 0.00%)</title><rect x="109.3" y="1717" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.34" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.18" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1829" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1839.5" >[unknown]</text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;basic_single_fragmented_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="51.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="543.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10 samples, 0.32%; -0.29%)</title><rect x="1169.3" y="2037" width="3.8" height="15.0" fill="rgb(75,75,255)" rx="2" ry="2" />
<text  x="1172.30" y="2047.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="693.7" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="696.69" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="103.7" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.69" y="1647.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; -0.03%)</title><rect x="407.3" y="1829" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="410.35" y="1839.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (7 samples, 0.22%; +0.03%)</title><rect x="849.1" y="1845" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="852.09" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.03%)</title><rect x="1140.7" y="1893" width="2.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1143.71" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (51 samples, 1.63%; 0.00%)</title><rect x="15.3" y="549" width="19.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.10%; 0.00%)</title><rect x="95.8" y="1493" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.79" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (47 samples, 1.50%; +0.10%)</title><rect x="899.9" y="1829" width="17.7" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="902.89" y="1839.5" ></text>
</g>
<g >
<title>fmt::v7::detail::handle_int_type_spec&lt;fmt::v7::detail::int_writer&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char, unsigned long&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="128.9" y="2037" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="131.90" y="2047.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (4 samples, 0.13%; 0.00%)</title><rect x="89.0" y="1813" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.02" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="46.1" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="559.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.06%; -0.03%)</title><rect x="93.9" y="1909" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="96.91" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%; +0.03%)</title><rect x="750.9" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="753.89" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (18 samples, 0.57%; +0.03%)</title><rect x="435.9" y="1797" width="6.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="438.94" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (7 samples, 0.22%; 0.00%)</title><rect x="85.3" y="1797" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.26" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.10%; 0.00%)</title><rect x="149.6" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="532.6" y="1781" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="535.65" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; 0.00%)</title><rect x="100.3" y="1557" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.31" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.06%; +0.06%)</title><rect x="343.0" y="1717" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="346.00" y="1727.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1829" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1839.5" >c..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="147.3" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="150.34" y="1487.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (1 samples, 0.03%; 0.00%)</title><rect x="1159.9" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.90" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1535.5" ></text>
</g>
<g >
<title>utf8_type_impl::~utf8_type_impl (1 samples, 0.03%; 0.00%)</title><rect x="153.4" y="2037" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.36" y="2047.5" ></text>
</g>
<g >
<title>db::system_keyspace::update_cdc_generation_id (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (2 samples, 0.06%; 0.00%)</title><rect x="879.6" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.57" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="149.6" y="1541" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="152.60" y="1551.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.03%; 0.00%)</title><rect x="1160.3" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1163.27" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="213" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.73%; 0.00%)</title><rect x="1109.5" y="1813" width="8.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.48" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.53" y="527.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (4 samples, 0.13%; +0.03%)</title><rect x="489.8" y="1813" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="492.75" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="805" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="815.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="495.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_input (2 samples, 0.06%; +0.06%)</title><rect x="21.3" y="453" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="24.29" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="35.2" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.21" y="543.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="145.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.84" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; 0.00%)</title><rect x="207.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="210.92" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="559.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="937.5" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="940.52" y="1839.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="138.7" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="141.69" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="837" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="847.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="129.3" y="2005" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="132.28" y="2015.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="74.0" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.97" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (3 samples, 0.10%; -0.16%)</title><rect x="1157.3" y="1925" width="1.1" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="1160.26" y="1935.5" ></text>
</g>
<g >
<title>__libc_start_main (2,675 samples, 85.30%; 0.00%)</title><rect x="154.1" y="2053" width="1006.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.11" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.03%; +0.03%)</title><rect x="1123.0" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1126.02" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1157" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1167.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (51 samples, 1.63%; 0.00%)</title><rect x="15.3" y="565" width="19.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="575.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (21 samples, 0.67%; +0.13%)</title><rect x="348.3" y="1701" width="7.9" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="351.27" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;seastar::file_data_sink_impl::close (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (213 samples, 6.79%; 0.00%)</title><rect x="10.4" y="2021" width="80.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="2031.5" >[unknown]</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (1 samples, 0.03%; +0.03%)</title><rect x="769.7" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="772.70" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="38.6" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="479.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="72.1" y="581" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="591.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.10%; 0.00%)</title><rect x="45.0" y="549" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="559.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="511.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (135 samples, 4.30%; +0.06%)</title><rect x="987.6" y="1765" width="50.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="990.56" y="1775.5" >servi..</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&amp;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="14.1" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.14" y="447.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.03%; 0.00%)</title><rect x="840.1" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.06" y="1807.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="34.8" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.83" y="511.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1967.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (4 samples, 0.13%; +0.03%)</title><rect x="682.4" y="1893" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="685.40" y="1903.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; -0.06%)</title><rect x="399.8" y="1813" width="1.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="402.82" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="789" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="799.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::alter_keyspace_statement*, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="41.6" y="533" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="44.61" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%; -0.06%)</title><rect x="749.0" y="1893" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="752.01" y="1903.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; 0.00%)</title><rect x="755.0" y="1909" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="758.03" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="675.3" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="678.26" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="773" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="783.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;&amp;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.01" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (28 samples, 0.89%; 0.00%)</title><rect x="94.7" y="1701" width="10.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.03%; 0.00%)</title><rect x="12.3" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.26" y="623.5" ></text>
</g>
<g >
<title>free (8 samples, 0.26%; +0.19%)</title><rect x="439.0" y="1781" width="3.0" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="441.95" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (574 samples, 18.30%; -0.19%)</title><rect x="883.7" y="1861" width="216.0" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="886.71" y="1871.5" >cql3::statements::select_sta..</text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,260 samples, 40.18%; -0.06%)</title><rect x="188.7" y="1925" width="474.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="191.73" y="1935.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="447.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="901" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="911.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1407.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="130.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.41" y="1711.5" ></text>
</g>
<g >
<title>cql3::column_identifier::column_identifier (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1631.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; +0.03%)</title><rect x="1116.6" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1119.63" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.10%; 0.00%)</title><rect x="116.5" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1663.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (6 samples, 0.19%; 0.00%)</title><rect x="382.5" y="1685" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="385.51" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="83.4" y="1221" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="86.37" y="1231.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (582 samples, 18.56%; +0.10%)</title><rect x="880.7" y="1893" width="219.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="883.70" y="1903.5" >seastar::noncopyable_functio..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="152.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="98.8" y="1525" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.80" y="1535.5" ></text>
</g>
<g >
<title>do_cql_test (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="789" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="799.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (4 samples, 0.13%; -0.03%)</title><rect x="343.8" y="1717" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="346.76" y="1727.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; -0.10%)</title><rect x="1096.7" y="1845" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1099.68" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.03%; 0.00%)</title><rect x="1160.3" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1163.27" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::alter_view_statement*, false&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="42.4" y="501" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="45.36" y="511.5" ></text>
</g>
<g >
<title>[unknown] (190 samples, 6.06%; 0.00%)</title><rect x="10.4" y="949" width="71.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="959.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_table_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="147.7" y="1365" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="150.72" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1125" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1135.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; +0.03%)</title><rect x="95.0" y="1525" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="98.04" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="671.1" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="674.12" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="105.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.57" y="1727.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="131.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.54" y="1679.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (237 samples, 7.56%; +0.16%)</title><rect x="773.8" y="1893" width="89.2" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="776.84" y="1903.5" >single_nod..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="644.8" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="647.78" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1567.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="2037" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.27" y="2047.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="1019.2" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.17" y="1679.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (17 samples, 0.54%; +0.03%)</title><rect x="84.1" y="1845" width="6.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="87.13" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="204.5" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.53" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1029" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1039.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1973" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1983.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.03%; 0.00%)</title><rect x="86.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.38" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1429" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1439.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (13 samples, 0.41%; +0.06%)</title><rect x="868.3" y="1861" width="4.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="871.28" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (7 samples, 0.22%; +0.06%)</title><rect x="145.1" y="1605" width="2.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="148.08" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="671.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1455.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="807.0" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="809.95" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="682.8" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.78" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_destroy_data&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="67.9" y="645" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="70.95" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="35.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.59" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::create_keyspace_statement*, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.0" y="645" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="79.98" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="917" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1567.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="837" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="847.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="687.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; 0.00%)</title><rect x="940.9" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.91" y="1839.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="1053.8" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1056.79" y="1775.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1 samples, 0.03%; +0.03%)</title><rect x="156.4" y="1941" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="159.37" y="1951.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="671.5" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="674.49" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.03%; -0.10%)</title><rect x="154.5" y="1941" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="157.49" y="1951.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.03%)</title><rect x="163.9" y="1909" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="166.90" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="635.0" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="637.99" y="1839.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="131.5" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="134.54" y="1631.5" ></text>
</g>
<g >
<title>validation::validate_column_family (17 samples, 0.54%; 0.00%)</title><rect x="841.6" y="1829" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="844.57" y="1839.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.03%; 0.00%)</title><rect x="185.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.34" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (7 samples, 0.22%; 0.00%)</title><rect x="72.1" y="661" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="671.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1423.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="735.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="257.6" y="1861" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="260.59" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="853" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="863.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (20 samples, 0.64%; 0.00%)</title><rect x="97.7" y="1685" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1439.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (9 samples, 0.29%; -0.13%)</title><rect x="1148.6" y="1893" width="3.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="1151.61" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="852.5" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.48" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="751.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (8 samples, 0.26%; 0.00%)</title><rect x="705.4" y="1909" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="708.36" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.10%; 0.00%)</title><rect x="149.6" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="708.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.99" y="1887.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.06%; 0.00%)</title><rect x="905.5" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="908.54" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%; 0.00%)</title><rect x="20.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.16" y="367.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (1 samples, 0.03%; 0.00%)</title><rect x="220.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="223.71" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="677" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="43.9" y="517" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="46.86" y="527.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%; +0.03%)</title><rect x="1105.7" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1108.71" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="112.7" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="115.72" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="17.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.53" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; 0.00%)</title><rect x="866.4" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.40" y="1935.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="853" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="863.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1797" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1807.5" >c..</text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (5 samples, 0.16%; 0.00%)</title><rect x="114.2" y="1685" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1695.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="417.9" y="1845" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="420.88" y="1855.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="495.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="79.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.10%)</title><rect x="770.8" y="1877" width="2.7" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="773.83" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="79.2" y="677" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="82.23" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%; +0.03%)</title><rect x="20.2" y="341" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.16" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="98.8" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1551.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="114.6" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="117.60" y="1471.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="1103.1" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.08" y="1727.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%; 0.00%)</title><rect x="90.9" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="140.9" y="1493" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.94" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="98.8" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="53.3" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.27" y="575.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.06%; 0.00%)</title><rect x="93.9" y="1925" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.91" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1263.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (1 samples, 0.03%; +0.03%)</title><rect x="55.9" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="58.91" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&amp;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::_M_set_node (2 samples, 0.06%; 0.00%)</title><rect x="14.1" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.14" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1919.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="115.4" y="1509" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="118.36" y="1519.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="208.7" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="211.67" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1391.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (6 samples, 0.19%; +0.06%)</title><rect x="616.9" y="1781" width="2.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="619.93" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%; 0.00%)</title><rect x="133.4" y="1621" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1631.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (5 samples, 0.16%; 0.00%)</title><rect x="22.8" y="453" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.79" y="463.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1813" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1823.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_aggregate_statement*, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="42.7" y="517" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="45.74" y="527.5" ></text>
</g>
<g >
<title>[unknown] (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="901" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="911.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1637" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1647.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (127 samples, 4.05%; 0.00%)</title><rect x="10.4" y="901" width="47.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="911.5" >[unk..</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="415.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.03%; +0.03%)</title><rect x="647.8" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="650.79" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.10%; 0.00%)</title><rect x="100.7" y="1493" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1503.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; -0.03%)</title><rect x="1030.8" y="1701" width="3.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1033.84" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.03%; 0.00%)</title><rect x="68.7" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.70" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="56.3" y="357" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="59.28" y="367.5" ></text>
</g>
<g >
<title>distributed_loader::init_non_system_keyspaces (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1983.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="114.2" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (2 samples, 0.06%; 0.00%)</title><rect x="872.0" y="1829" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="875.05" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="112.7" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="133.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="81.5" y="613" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="84.49" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (3 samples, 0.10%; 0.00%)</title><rect x="16.0" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.02" y="415.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1461" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1471.5" >[unknown]</text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="113.5" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.48" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%; 0.00%)</title><rect x="133.4" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1599.5" ></text>
</g>
<g >
<title>locator::token_metadata::tokens_iterator::operator== (1 samples, 0.03%; +0.03%)</title><rect x="1155.4" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1158.38" y="1887.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.35%; +0.13%)</title><rect x="540.9" y="1829" width="4.2" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="543.92" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="543.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_errorRecovery (1 samples, 0.03%; +0.03%)</title><rect x="153.0" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="155.98" y="1679.5" ></text>
</g>
<g >
<title>operator delete (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1973" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1983.5" >o..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (3 samples, 0.10%; 0.00%)</title><rect x="67.9" y="677" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.95" y="687.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (6 samples, 0.19%; -0.03%)</title><rect x="85.6" y="1749" width="2.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="88.63" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.04" y="1887.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="693" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="703.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_data_locally (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1647.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (3 samples, 0.10%; +0.10%)</title><rect x="23.5" y="325" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="26.55" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="16.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.40" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.06%; 0.00%)</title><rect x="1036.5" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1039.48" y="1743.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; -0.03%)</title><rect x="834.8" y="1749" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="837.80" y="1759.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (14 samples, 0.45%; 0.00%)</title><rect x="44.2" y="581" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (25 samples, 0.80%; +0.03%)</title><rect x="166.9" y="1909" width="9.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="169.91" y="1919.5" ></text>
</g>
<g >
<title>perf_simple_que (3,136 samples, 100.00%; 0.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >perf_simple_que</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="49.5" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%; +0.03%)</title><rect x="85.3" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="88.26" y="1759.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.03%; +0.03%)</title><rect x="787.8" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="790.76" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1503.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (16 samples, 0.51%; 0.00%)</title><rect x="491.3" y="1829" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="494.26" y="1839.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1471.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="102.2" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (4 samples, 0.13%; +0.13%)</title><rect x="27.7" y="437" width="1.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="30.68" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.03%; +0.03%)</title><rect x="1189.6" y="2021" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1192.62" y="2031.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="722.7" y="1909" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="725.67" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="16.0" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.02" y="447.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1445" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1455.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%; +0.06%)</title><rect x="916.1" y="1765" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="919.07" y="1775.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (346 samples, 11.03%; -0.06%)</title><rect x="277.9" y="1845" width="130.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="280.91" y="1855.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1535.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%; 0.00%)</title><rect x="1055.7" y="1765" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1058.67" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="96.5" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.54" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="591.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="967.2" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="970.24" y="1791.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1701" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1711.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.06%; +0.06%)</title><rect x="30.3" y="421" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="33.32" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.16%; -0.06%)</title><rect x="788.5" y="1829" width="1.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="791.51" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (28 samples, 0.89%; 0.00%)</title><rect x="94.7" y="1717" width="10.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1727.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.03%; -0.06%)</title><rect x="1105.3" y="1733" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1108.34" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; -0.03%)</title><rect x="130.0" y="1701" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="133.03" y="1711.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; 0.00%)</title><rect x="1091.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.04" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.03%)</title><rect x="419.4" y="1845" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="422.39" y="1855.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.03%; +0.03%)</title><rect x="32.2" y="437" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="35.20" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; 0.00%)</title><rect x="672.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="675.62" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (87 samples, 2.77%; 0.00%)</title><rect x="11.1" y="757" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="767.5" >se..</text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (2 samples, 0.06%; 0.00%)</title><rect x="118.7" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.74" y="1695.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (53 samples, 1.69%; 0.00%)</title><rect x="1061.7" y="1733" width="19.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1064.69" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (5 samples, 0.16%; 0.00%)</title><rect x="116.1" y="1685" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1695.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="142.4" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.45" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="703.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::remove_registration (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="149" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.03%; +0.03%)</title><rect x="435.2" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="438.19" y="1839.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.10%; +0.10%)</title><rect x="791.5" y="1813" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="794.52" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1519.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.13%; 0.00%)</title><rect x="134.5" y="1653" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="96.5" y="1349" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="99.54" y="1359.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="143.6" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="146.58" y="1519.5" ></text>
</g>
<g >
<title>locator::simple_snitch::get_datacenter (1 samples, 0.03%; +0.03%)</title><rect x="1115.1" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1118.12" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::begin (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1711.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;table::try_flush_memtable_to_sstable (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1935.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.03%; +0.03%)</title><rect x="162.4" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="165.39" y="1935.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (4 samples, 0.13%; 0.00%)</title><rect x="118.0" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.99" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1503.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="821" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (3 samples, 0.10%; 0.00%)</title><rect x="19.4" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.41" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1583.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (52 samples, 1.66%; +0.03%)</title><rect x="468.7" y="1797" width="19.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="471.68" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="719.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1343.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.03%; -0.06%)</title><rect x="1053.4" y="1765" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1056.41" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="106.7" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="109.70" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1113.6" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1116.62" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1861" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1871.5" >c..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="35.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.59" y="431.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1887.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1599.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1967.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.10%; +0.06%)</title><rect x="846.5" y="1797" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="849.46" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="14.9" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.89" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.2" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.20" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1487.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.19%; +0.10%)</title><rect x="176.3" y="1925" width="2.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="179.31" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (18 samples, 0.57%; +0.13%)</title><rect x="908.5" y="1749" width="6.8" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="911.55" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="150.7" y="1557" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="153.73" y="1567.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="495.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (2 samples, 0.06%; +0.03%)</title><rect x="802.8" y="1829" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="805.81" y="1839.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; +0.03%)</title><rect x="729.8" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="732.82" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.10%)</title><rect x="1057.2" y="1733" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1060.17" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1887.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; 0.00%)</title><rect x="734.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="737.71" y="1903.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (6 samples, 0.19%; +0.06%)</title><rect x="124.0" y="2005" width="2.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="127.01" y="2015.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (3 samples, 0.10%; +0.10%)</title><rect x="947.7" y="1829" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="950.68" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="145.8" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.84" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (75 samples, 2.39%; 0.00%)</title><rect x="15.3" y="581" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="591.5" >c..</text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (5 samples, 0.16%; 0.00%)</title><rect x="19.4" y="453" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.41" y="463.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="597" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; -0.03%)</title><rect x="97.7" y="1605" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="100.67" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="851.7" y="1829" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="854.73" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="94.7" y="1365" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="97.66" y="1375.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (6 samples, 0.19%; 0.00%)</title><rect x="35.2" y="549" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.21" y="559.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (276 samples, 8.80%; +0.03%)</title><rect x="759.2" y="1909" width="103.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="762.16" y="1919.5" >single_node_..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1749" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1759.5" >c..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (13 samples, 0.41%; 0.00%)</title><rect x="868.3" y="1909" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.28" y="1919.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="45.4" y="341" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="48.37" y="351.5" ></text>
</g>
<g >
<title>schema_registry::get (7 samples, 0.22%; -0.03%)</title><rect x="971.8" y="1781" width="2.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="974.76" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="111.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="114.2" y="1589" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1599.5" ></text>
</g>
<g >
<title>service::storage_service::prepare_to_join (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1871.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24 samples, 0.77%; 0.00%)</title><rect x="1109.1" y="1893" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.10" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="559.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (8 samples, 0.26%; +0.13%)</title><rect x="912.3" y="1733" width="3.0" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="915.31" y="1743.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; -0.03%)</title><rect x="206.8" y="1893" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="209.79" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1893" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1903.5" >s..</text>
</g>
<g >
<title>utils::array_search_gt_impl (16 samples, 0.51%; +0.22%)</title><rect x="628.2" y="1813" width="6.0" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="631.22" y="1823.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="789" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="799.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (4 samples, 0.13%; 0.00%)</title><rect x="65.7" y="629" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.69" y="639.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="47.3" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.25" y="543.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (348 samples, 11.10%; -0.10%)</title><rect x="952.2" y="1829" width="130.9" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="955.19" y="1839.5" >service::storage..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="93.5" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="96.53" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::~shared_ptr_count_for (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="2037" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="2047.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.03%; -0.03%)</title><rect x="399.4" y="1813" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="402.45" y="1823.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.45%; 0.00%)</title><rect x="1012.0" y="1685" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1015.02" y="1695.5" ></text>
</g>
<g >
<title>create_partitions (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1893" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1903.5" >c..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="629" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="639.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1567.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::alter_role_statement*, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; +0.03%)</title><rect x="890.9" y="1845" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="893.86" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="139.4" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="142.44" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.16%; 0.00%)</title><rect x="1112.1" y="1621" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.11" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="907.8" y="1765" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="910.79" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="138.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.69" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (87 samples, 2.77%; 0.00%)</title><rect x="11.1" y="725" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="735.5" >st..</text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; 0.00%)</title><rect x="48.4" y="517" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (3 samples, 0.10%; 0.00%)</title><rect x="36.3" y="533" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.34" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; +0.03%)</title><rect x="136.4" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="139.43" y="1679.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="313.3" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="316.28" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (7 samples, 0.22%; -0.03%)</title><rect x="58.2" y="661" width="2.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="61.16" y="671.5" ></text>
</g>
<g >
<title>__start_context (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1925" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1935.5" >_..</text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="95.8" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.79" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="49.5" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1967.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1551.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="757" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="42.0" y="549" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="44.98" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="111.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.22" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="653.4" y="1877" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="656.43" y="1887.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,675 samples, 85.30%; 0.00%)</title><rect x="154.1" y="2005" width="1006.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.11" y="2015.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="114.6" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; +0.03%)</title><rect x="890.5" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="893.48" y="1855.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1423.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="853" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="863.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1311.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::alter_role_statement*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="76.6" y="597" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="79.60" y="607.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="694.8" y="1893" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="697.82" y="1903.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%; +0.03%)</title><rect x="312.9" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="315.90" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="694.1" y="1877" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="697.07" y="1887.5" ></text>
</g>
<g >
<title>database::do_apply (21 samples, 0.67%; 0.00%)</title><rect x="1100.4" y="1861" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.45" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1567.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="644.8" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="647.78" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="68.7" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.70" y="639.5" ></text>
</g>
<g >
<title>utils::directories::verify_owner_and_mode (1 samples, 0.03%; 0.00%)</title><rect x="751.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.64" y="1919.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (24 samples, 0.77%; -0.03%)</title><rect x="1099.7" y="1909" width="9.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1102.69" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="113.1" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1551.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="74.3" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.34" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="67.6" y="661" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="70.57" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="661" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="575.2" y="1797" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="578.17" y="1807.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (1 samples, 0.03%; +0.03%)</title><rect x="766.3" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="769.31" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1567.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (2 samples, 0.06%; +0.03%)</title><rect x="814.9" y="1813" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="817.85" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="36.0" y="517" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="38.96" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="543.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::unregister_metric (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="645" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="655.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (5 samples, 0.16%; 0.00%)</title><rect x="937.9" y="1829" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="940.90" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="821" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="831.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="56.3" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="391.9" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="394.92" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="134.9" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.92" y="1535.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="677" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="687.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (56 samples, 1.79%; 0.00%)</title><rect x="518.0" y="1829" width="21.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="520.97" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (50 samples, 1.59%; 0.00%)</title><rect x="15.3" y="517" width="18.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="38.6" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="547.3" y="1829" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="550.32" y="1839.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="138.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.69" y="1567.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1583.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="221.8" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.84" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="96.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.92" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; +0.03%)</title><rect x="40.5" y="501" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="43.48" y="511.5" ></text>
</g>
<g >
<title>table::table (1 samples, 0.03%; +0.03%)</title><rect x="185.7" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="188.72" y="1903.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="387.8" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="390.78" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 2.77%; 0.00%)</title><rect x="11.1" y="789" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="799.5" >[u..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.10%; 0.00%)</title><rect x="112.7" y="1605" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="527.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.03%; +0.03%)</title><rect x="1120.0" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1123.01" y="1903.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.10%; +0.06%)</title><rect x="646.7" y="1829" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="649.66" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.19%)</title><rect x="1019.2" y="1653" width="1.5" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="1022.17" y="1663.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.45%; +0.03%)</title><rect x="1001.1" y="1717" width="5.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1004.11" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="138.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.69" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1199.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.43" y="623.5" ></text>
</g>
<g >
<title>database::find_schema (10 samples, 0.32%; -0.03%)</title><rect x="842.3" y="1813" width="3.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="845.32" y="1823.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%; +0.03%)</title><rect x="1140.0" y="1909" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1142.96" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="141.3" y="1429" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1439.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1519.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; 0.00%)</title><rect x="327.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="330.20" y="1743.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1327.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (6 samples, 0.19%; 0.00%)</title><rect x="12.6" y="549" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="559.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (84 samples, 2.68%; 0.00%)</title><rect x="12.3" y="645" width="31.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.26" y="655.5" >cq..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="45.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="495.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="723.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.04" y="1919.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="645" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="655.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%; +0.03%)</title><rect x="185.3" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="188.34" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="151.5" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.48" y="1631.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.03%; +0.03%)</title><rect x="110.1" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="113.09" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (42 samples, 1.34%; 0.00%)</title><rect x="105.2" y="1749" width="15.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.20" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; 0.00%)</title><rect x="100.3" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.31" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1487.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (28 samples, 0.89%; 0.00%)</title><rect x="1162.5" y="2053" width="10.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.53" y="2063.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.16%; -0.13%)</title><rect x="389.3" y="1749" width="1.9" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="392.29" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="38.6" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="479.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (5 samples, 0.16%; +0.03%)</title><rect x="121.4" y="2005" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="124.38" y="2015.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (3 samples, 0.10%; 0.00%)</title><rect x="1107.2" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.22" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (2 samples, 0.06%; 0.00%)</title><rect x="50.3" y="613" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="934.1" y="1813" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="937.13" y="1823.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; -0.06%)</title><rect x="1091.4" y="1845" width="2.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1094.42" y="1855.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (30 samples, 0.96%; +0.19%)</title><rect x="244.0" y="1877" width="11.3" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="247.04" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1583.5" ></text>
</g>
<g >
<title>do_cql_test (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1909" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1919.5" >d..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="137.9" y="1621" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="140.93" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.06%)</title><rect x="899.1" y="1829" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="902.14" y="1839.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.03%; +0.03%)</title><rect x="65.7" y="549" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="68.69" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="150.0" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="267.0" y="1845" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="270.00" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="49.5" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="623.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.03%; +0.03%)</title><rect x="31.8" y="405" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="34.82" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (2 samples, 0.06%; +0.06%)</title><rect x="1081.6" y="1733" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1084.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1327.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; +0.03%)</title><rect x="106.3" y="1669" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="109.33" y="1679.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.03%; 0.00%)</title><rect x="724.9" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.92" y="1919.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.03%; -0.06%)</title><rect x="516.5" y="1829" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="519.47" y="1839.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="112.7" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (208 samples, 6.63%; +0.19%)</title><rect x="314.4" y="1765" width="78.3" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="317.41" y="1775.5" >partition..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="146.2" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="149.21" y="1519.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="116.9" y="1461" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="119.86" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="194.0" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="197.00" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="51.0" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="12.3" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.26" y="607.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.06%; 0.00%)</title><rect x="93.9" y="1941" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.91" y="1951.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="618.8" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="621.81" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="113.1" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.10" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1045" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1055.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="661" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="96.5" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.54" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="74.0" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.97" y="639.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1567.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="837" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="847.5" ></text>
</g>
<g >
<title>create_partitions (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1845" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1855.5" >c..</text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="704.2" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="707.23" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (2 samples, 0.06%; 0.00%)</title><rect x="869.4" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.41" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="1024.8" y="1637" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1027.82" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%; +0.03%)</title><rect x="1028.2" y="1669" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1031.20" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1551.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_channel (1 samples, 0.03%; +0.03%)</title><rect x="22.0" y="453" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="25.04" y="463.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.4" y="933" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="943.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="699.3" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="702.34" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="2047.5" ></text>
</g>
<g >
<title>query::querier&lt; (657 samples, 20.95%; +0.32%)</title><rect x="268.5" y="1877" width="247.2" height="15.0" fill="rgb(255,60,60)" rx="2" ry="2" />
<text  x="271.50" y="1887.5" >query::querier&lt;</text>
</g>
<g >
<title>operator new (5 samples, 0.16%; -0.06%)</title><rect x="401.7" y="1813" width="1.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="404.70" y="1823.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (1 samples, 0.03%; +0.03%)</title><rect x="648.2" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="651.16" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="709.1" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="712.12" y="1903.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="175.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="178.94" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.10%; 0.00%)</title><rect x="19.4" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.41" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="629" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="639.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; +0.03%)</title><rect x="148.1" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="151.09" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (30 samples, 0.96%; 0.00%)</title><rect x="502.9" y="1813" width="11.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="505.92" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="36.3" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.34" y="527.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="98.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.05" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="130.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.41" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="2005" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="2015.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="680.5" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="683.52" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.03%)</title><rect x="677.1" y="1909" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="680.14" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="2005" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="2015.5" >[..</text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.16%; 0.00%)</title><rect x="140.6" y="1557" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.57" y="1567.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="102.2" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="105.19" y="1535.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="74.3" y="597" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="77.34" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1935.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%; +0.03%)</title><rect x="128.5" y="2037" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="131.53" y="2047.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="181.6" y="1893" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="184.58" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1631.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%; -0.13%)</title><rect x="354.7" y="1685" width="1.5" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="357.67" y="1695.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (27 samples, 0.86%; 0.00%)</title><rect x="1071.5" y="1717" width="10.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1074.47" y="1727.5" ></text>
</g>
<g >
<title>auth::get_permissions (3 samples, 0.10%; 0.00%)</title><rect x="89.4" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.39" y="1775.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (5 samples, 0.16%; 0.00%)</title><rect x="1115.9" y="1701" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.87" y="1711.5" ></text>
</g>
<g >
<title>cql3::prepare_context::set_bound_variables (1 samples, 0.03%; +0.03%)</title><rect x="71.7" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="74.71" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.15" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="16.4" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.40" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (3 samples, 0.10%; 0.00%)</title><rect x="107.8" y="1637" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.83" y="1647.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; +0.03%)</title><rect x="127.0" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="130.02" y="1951.5" ></text>
</g>
<g >
<title>row_cache::make_reader (26 samples, 0.83%; -0.06%)</title><rect x="636.9" y="1829" width="9.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="639.88" y="1839.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="140.6" y="1461" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="143.57" y="1471.5" ></text>
</g>
<g >
<title>create_partitions (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="741" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="751.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1237" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1247.5" >[unknown]</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1631.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (2 samples, 0.06%; +0.03%)</title><rect x="883.0" y="1861" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="885.96" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; 0.00%)</title><rect x="48.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.00" y="479.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.32%; +0.06%)</title><rect x="523.2" y="1813" width="3.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="526.24" y="1823.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::~metric_groups_impl (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="320.8" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="323.80" y="1759.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="77.7" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="80.73" y="671.5" ></text>
</g>
<g >
<title>[unknown] (195 samples, 6.22%; 0.00%)</title><rect x="10.4" y="1621" width="73.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1631.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.06%)</title><rect x="934.9" y="1813" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="937.89" y="1823.5" ></text>
</g>
<g >
<title>table::set_hit_rate (4 samples, 0.13%; -0.13%)</title><rect x="749.4" y="1893" width="1.5" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="752.38" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.45%; +0.13%)</title><rect x="1012.0" y="1669" width="5.3" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="1015.02" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="37.5" y="533" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.47" y="543.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1647.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="949.2" y="1829" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="952.18" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (8 samples, 0.26%; +0.06%)</title><rect x="209.0" y="1877" width="3.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="212.05" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.10%; 0.00%)</title><rect x="133.4" y="1573" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (7 samples, 0.22%; 0.00%)</title><rect x="85.3" y="1781" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.26" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.03%; +0.03%)</title><rect x="1159.5" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1162.52" y="1951.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="723.0" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="726.04" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::begin (1 samples, 0.03%; +0.03%)</title><rect x="68.3" y="645" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="71.32" y="655.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; +0.03%)</title><rect x="93.9" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="96.91" y="1903.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_failed (1 samples, 0.03%; +0.03%)</title><rect x="17.9" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="20.90" y="479.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="709" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="719.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1781" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1791.5" >c..</text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1269" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1279.5" >[unknown]</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="34.8" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.83" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="735.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; +0.03%)</title><rect x="746.0" y="1893" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="748.99" y="1903.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1983.5" ></text>
</g>
<g >
<title>database::parse_system_tables (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="2005" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="2015.5" >[..</text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.13%; +0.03%)</title><rect x="635.4" y="1829" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="638.37" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_table_statement, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="79.6" y="677" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="82.61" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1903.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; +0.03%)</title><rect x="396.1" y="1749" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="399.06" y="1759.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="48.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="399.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="129.3" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.28" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (30 samples, 0.96%; 0.00%)</title><rect x="69.8" y="709" width="11.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.83" y="719.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="317.4" y="1733" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="320.42" y="1743.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="114.6" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1535.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.06%; -0.03%)</title><rect x="496.5" y="1813" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="499.52" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="100.7" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; +0.03%)</title><rect x="102.9" y="1573" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="105.94" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; +0.03%)</title><rect x="385.5" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="388.52" y="1743.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.69" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (3 samples, 0.10%; -0.03%)</title><rect x="1112.9" y="1605" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1115.86" y="1615.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="885" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="895.5" ></text>
</g>
<g >
<title>cql3::relation::to_column_definition (2 samples, 0.06%; 0.00%)</title><rect x="66.1" y="613" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.07" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="303.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="90.9" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1951.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (38 samples, 1.21%; +0.03%)</title><rect x="902.5" y="1781" width="14.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="905.53" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.13%; 0.00%)</title><rect x="23.2" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.17" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%; +0.03%)</title><rect x="17.1" y="389" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="20.15" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="16.4" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.40" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%; +0.06%)</title><rect x="1033.5" y="1669" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1036.47" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="60.0" y="485" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="63.04" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt;::wait (1 samples, 0.03%; +0.03%)</title><rect x="1108.0" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1110.97" y="1823.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.03%; 0.00%)</title><rect x="1105.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.34" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%; +0.03%)</title><rect x="1029.7" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1032.71" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="431.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; -0.03%)</title><rect x="575.5" y="1813" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="578.54" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="853" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="863.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.03%; +0.03%)</title><rect x="61.2" y="693" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="64.17" y="703.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload_base (2 samples, 0.06%; 0.00%)</title><rect x="118.7" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.74" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (10 samples, 0.32%; -0.03%)</title><rect x="602.6" y="1813" width="3.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="605.63" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1535.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="543.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="104.8" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="107.82" y="1647.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1631.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.10%; -0.13%)</title><rect x="910.4" y="1733" width="1.2" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="913.43" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.03%; 0.00%)</title><rect x="871.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="874.29" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="971.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="974.38" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (195 samples, 6.22%; 0.00%)</title><rect x="10.4" y="1605" width="73.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1615.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="48.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="146.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.21" y="1551.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; +0.03%)</title><rect x="1061.3" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1064.31" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::empty (1 samples, 0.03%; +0.03%)</title><rect x="49.5" y="549" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="52.51" y="559.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1733" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1743.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::select_statement::execute (377 samples, 12.02%; +0.10%)</title><rect x="941.3" y="1845" width="141.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="944.28" y="1855.5" >cql3::statements::..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="38.6" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="757" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="97.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.30" y="1631.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1503.5" ></text>
</g>
<g >
<title>cql3::prepare_context::set_bound_variables (1 samples, 0.03%; +0.03%)</title><rect x="71.3" y="677" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="74.33" y="687.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (111 samples, 3.54%; +0.10%)</title><rect x="994.7" y="1733" width="41.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="997.71" y="1743.5" >ser..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; +0.03%)</title><rect x="35.2" y="485" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="38.21" y="495.5" ></text>
</g>
<g >
<title>query_result_builder::consume (107 samples, 3.41%; +0.06%)</title><rect x="449.1" y="1829" width="40.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="452.11" y="1839.5" >que..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="559.5" ></text>
</g>
<g >
<title>seastar::do_recursive_touch_directory (1 samples, 0.03%; 0.00%)</title><rect x="724.2" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.17" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::relation&gt;::shared_ptr&lt;cql3::single_column_relation, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="119.9" y="1669" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="122.87" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (4 samples, 0.13%; +0.03%)</title><rect x="92.0" y="1877" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="95.03" y="1887.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="724.9" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.92" y="1935.5" ></text>
</g>
<g >
<title>db::system_keyspace::v3::truncated (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="96.9" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.92" y="1631.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (1 samples, 0.03%; -0.03%)</title><rect x="872.4" y="1797" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="875.42" y="1807.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%; +0.03%)</title><rect x="107.8" y="1621" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.83" y="1631.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="113.1" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (57 samples, 1.82%; 0.00%)</title><rect x="131.5" y="1701" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.54" y="1711.5" >c..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; 0.00%)</title><rect x="445.7" y="1813" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="448.73" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1151.6" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1154.62" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1535.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (8 samples, 0.26%; +0.03%)</title><rect x="84.9" y="1813" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="87.88" y="1823.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="1087.7" y="1813" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1090.65" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="138.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.69" y="1663.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; +0.03%)</title><rect x="1102.7" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1105.70" y="1727.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; +0.03%)</title><rect x="313.7" y="1749" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="316.65" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="655.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (2 samples, 0.06%; 0.00%)</title><rect x="50.3" y="581" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.10%; +0.10%)</title><rect x="1146.7" y="1909" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1149.73" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="724.9" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="727.92" y="1903.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1807.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="13.8" y="437" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="16.76" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_function_statement, std::default_delete&lt;cql3::statements::create_function_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="74.7" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="77.72" y="671.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="105.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.57" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (9 samples, 0.29%; 0.00%)</title><rect x="91.3" y="1989" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.28" y="1999.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="463.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1106.8" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1109.84" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (54 samples, 1.72%; -0.06%)</title><rect x="684.3" y="1925" width="20.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="687.29" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1631.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.19%; 0.00%)</title><rect x="140.2" y="1573" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.19" y="1583.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="741" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="751.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (11 samples, 0.35%; 0.00%)</title><rect x="84.9" y="1829" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.88" y="1839.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="137.6" y="1653" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="140.56" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (12 samples, 0.38%; +0.03%)</title><rect x="673.0" y="1925" width="4.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="676.00" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="140.6" y="1541" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.57" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3 samples, 0.10%; 0.00%)</title><rect x="23.5" y="357" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.55" y="367.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1439.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1903.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="517" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="136.8" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="869" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="879.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%; -0.03%)</title><rect x="655.3" y="1877" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="658.31" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (235 samples, 7.49%; +0.13%)</title><rect x="311.0" y="1781" width="88.4" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="314.02" y="1791.5" >partition_..</text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.4" y="965" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="975.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="527.5" ></text>
</g>
<g >
<title>database::~database (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1839.5" ></text>
</g>
<g >
<title>partition_entry::read (6 samples, 0.19%; +0.19%)</title><rect x="625.2" y="1813" width="2.3" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="628.21" y="1823.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (12 samples, 0.38%; -0.13%)</title><rect x="858.1" y="1877" width="4.5" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="861.12" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="75.1" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="78.10" y="671.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="203.4" y="1893" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="206.41" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.10%; 0.00%)</title><rect x="100.7" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1487.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="147.7" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="951.8" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="954.82" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (5 samples, 0.16%; 0.00%)</title><rect x="869.4" y="1813" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.41" y="1823.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.03%)</title><rect x="959.7" y="1765" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="962.72" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="55.5" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.53" y="559.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="591.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1685" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1695.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="151.5" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.48" y="1663.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_tokenStartCharIndex (1 samples, 0.03%; +0.03%)</title><rect x="18.3" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="21.28" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="96.2" y="1429" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="99.17" y="1439.5" ></text>
</g>
<g >
<title>query_state::query_state (2 samples, 0.06%; +0.03%)</title><rect x="207.2" y="1893" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="210.17" y="1903.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="723.0" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.04" y="1855.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; +0.06%)</title><rect x="206.0" y="1893" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="209.04" y="1903.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (5 samples, 0.16%; 0.00%)</title><rect x="1136.9" y="1909" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1139.95" y="1919.5" ></text>
</g>
<g >
<title>operator delete (87 samples, 2.77%; 0.00%)</title><rect x="11.1" y="821" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="831.5" >op..</text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.03%; 0.00%)</title><rect x="1159.9" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.90" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="335.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="2031.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1183.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="57.8" y="533" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="60.79" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="153.4" y="2005" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.36" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="114.6" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="431.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="853" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="863.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; +0.03%)</title><rect x="70.2" y="645" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="73.20" y="655.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="93.9" y="1973" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.91" y="1983.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="138.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.69" y="1583.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (7 samples, 0.22%; 0.00%)</title><rect x="85.3" y="1765" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.26" y="1775.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (2 samples, 0.06%; +0.03%)</title><rect x="522.5" y="1813" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="525.49" y="1823.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (9 samples, 0.29%; -0.16%)</title><rect x="1022.9" y="1653" width="3.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="1025.93" y="1663.5" ></text>
</g>
<g >
<title>auth::resource::resource (6 samples, 0.19%; +0.06%)</title><rect x="803.6" y="1829" width="2.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="806.57" y="1839.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;seastar::shared_ptr&lt;cql3::relation&gt;*, seastar::shared_ptr&lt;cql3::relation&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="72.8" y="645" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="75.84" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1599.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="165.0" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="168.03" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="949" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="959.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; +0.03%)</title><rect x="148.5" y="1589" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="151.47" y="1599.5" ></text>
</g>
<g >
<title>query_data_on_all_shards (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.9" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1711.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (84 samples, 2.68%; 0.00%)</title><rect x="12.3" y="629" width="31.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.26" y="639.5" >cq..</text>
</g>
<g >
<title>dht::tri_compare (12 samples, 0.38%; +0.19%)</title><rect x="595.1" y="1797" width="4.5" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="598.11" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="391.2" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="394.17" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="463.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="869" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="879.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (1 samples, 0.03%; -0.03%)</title><rect x="712.1" y="1909" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="715.13" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="543.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="1082.4" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1085.39" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="135.7" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="138.68" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="130.8" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.78" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; 0.00%)</title><rect x="949.2" y="1813" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="952.18" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1903.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (3 samples, 0.10%; 0.00%)</title><rect x="86.0" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.01" y="1711.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="880.3" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="883.33" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="511.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (11 samples, 0.35%; +0.06%)</title><rect x="1147.9" y="1909" width="4.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1150.86" y="1919.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="139.8" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="142.82" y="1599.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="58.9" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="80.0" y="677" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="82.99" y="687.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="112.7" y="1589" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (3 samples, 0.10%; 0.00%)</title><rect x="86.0" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.01" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="105.6" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="108.57" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (7 samples, 0.22%; +0.03%)</title><rect x="46.9" y="549" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="49.88" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="133.8" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.79" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (6 samples, 0.19%; 0.00%)</title><rect x="91.7" y="1925" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.65" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="150.0" y="1429" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="152.97" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="511.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="35.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.59" y="383.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (20 samples, 0.64%; +0.13%)</title><rect x="762.2" y="1877" width="7.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="765.17" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasReachedFillbufferTarget (1 samples, 0.03%; +0.03%)</title><rect x="49.9" y="565" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="52.89" y="575.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (9 samples, 0.29%; 0.00%)</title><rect x="690.7" y="1893" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="693.68" y="1903.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (1 samples, 0.03%; 0.00%)</title><rect x="129.7" y="2037" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.66" y="2047.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="447.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="981" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="991.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="885" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="895.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="726.4" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="729.43" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.19%; 0.00%)</title><rect x="94.7" y="1557" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.10%; 0.00%)</title><rect x="1120.8" y="1925" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1123.77" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (8 samples, 0.26%; -0.10%)</title><rect x="376.9" y="1637" width="3.0" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="379.87" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="40.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.10" y="479.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="533" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="138.3" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="141.31" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="110.8" y="1701" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="132.3" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.29" y="1471.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1765" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1775.5" >c..</text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="101.1" y="1349" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="104.06" y="1359.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1941" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1951.5" >s..</text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (7 samples, 0.22%; -0.13%)</title><rect x="1115.1" y="1733" width="2.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="1118.12" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="654.6" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.56" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="597" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="144.0" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1631.5" ></text>
</g>
<g >
<title>do_cql_test (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="741" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="751.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (4 samples, 0.13%; 0.00%)</title><rect x="73.2" y="645" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.21" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="904.8" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="907.78" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; 0.00%)</title><rect x="892.0" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="894.99" y="1855.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="80.4" y="661" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="83.36" y="671.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%; +0.03%)</title><rect x="442.3" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="445.34" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (2 samples, 0.06%; +0.06%)</title><rect x="892.4" y="1845" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="895.37" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::file&gt;, seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (1 samples, 0.03%; 0.00%)</title><rect x="662.8" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="665.84" y="1935.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.03%; +0.03%)</title><rect x="153.4" y="1989" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="156.36" y="1999.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1471.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.06%)</title><rect x="413.4" y="1861" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="416.37" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1365" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="431.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="58.2" y="437" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="61.16" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; -0.03%)</title><rect x="143.6" y="1605" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="146.58" y="1615.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="783.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="98.8" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1551.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.03%; +0.03%)</title><rect x="185.0" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="187.97" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (2 samples, 0.06%; +0.06%)</title><rect x="24.7" y="453" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="27.67" y="463.5" ></text>
</g>
<g >
<title>schema::registry_entry (1 samples, 0.03%; +0.03%)</title><rect x="1006.4" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1009.38" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; 0.00%)</title><rect x="1160.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1163.27" y="1935.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1535.5" ></text>
</g>
<g >
<title>service::write_response_handler::write_response_handler (1 samples, 0.03%; +0.03%)</title><rect x="1114.7" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1117.74" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="39.3" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.35" y="527.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="757" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="767.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (3 samples, 0.10%; +0.03%)</title><rect x="53.6" y="565" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="56.65" y="575.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (2 samples, 0.06%; 0.00%)</title><rect x="185.0" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.97" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="576.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="579.29" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::expression&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="119.1" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="122.12" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="891.2" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="894.24" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="634.2" y="1813" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="637.24" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (31 samples, 0.99%; +0.10%)</title><rect x="527.4" y="1813" width="11.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="530.38" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1797" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1807.5" >c..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1519.5" ></text>
</g>
<g >
<title>table::update_cache (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="572.9" y="1781" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="575.91" y="1791.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="953.7" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="956.70" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="144.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1503.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (3 samples, 0.10%; +0.03%)</title><rect x="63.1" y="645" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="66.05" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="106.3" y="1685" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="751.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="527.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (4 samples, 0.13%; 0.00%)</title><rect x="599.6" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="602.62" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::has_supporting_index (1 samples, 0.03%; +0.03%)</title><rect x="85.6" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="88.63" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (195 samples, 6.22%; 0.00%)</title><rect x="10.4" y="1541" width="73.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1551.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_type (1 samples, 0.03%; +0.03%)</title><rect x="19.0" y="453" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="22.03" y="463.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%; +0.03%)</title><rect x="488.2" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="491.25" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1413" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1423.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (6 samples, 0.19%; 0.00%)</title><rect x="94.7" y="1637" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="136.1" y="1605" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="139.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1599.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="952.9" y="1813" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="955.95" y="1823.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (64 samples, 2.04%; -0.26%)</title><rect x="817.1" y="1813" width="24.1" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="820.11" y="1823.5" >s..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (3 samples, 0.10%; +0.03%)</title><rect x="109.3" y="1701" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="112.34" y="1711.5" ></text>
</g>
<g >
<title>database::has_keyspace (4 samples, 0.13%; 0.00%)</title><rect x="846.1" y="1813" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="849.08" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.67%; 0.00%)</title><rect x="1100.4" y="1877" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.45" y="1887.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="98.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.05" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="839.7" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="842.69" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="2047.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,234 samples, 39.35%; +0.26%)</title><rect x="195.9" y="1909" width="464.3" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="198.88" y="1919.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="115.0" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="117.98" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1583.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="36.3" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.34" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="1034.6" y="1717" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1037.60" y="1727.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::index (1 samples, 0.03%; +0.03%)</title><rect x="69.8" y="645" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="72.83" y="655.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (8 samples, 0.26%; +0.16%)</title><rect x="171.0" y="1877" width="3.1" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="174.05" y="1887.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="99.2" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="102.18" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (10 samples, 0.32%; 0.00%)</title><rect x="208.3" y="1893" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="211.30" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="547.7" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="550.70" y="1855.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%; 0.00%)</title><rect x="654.9" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.94" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; 0.00%)</title><rect x="102.2" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.19" y="1679.5" ></text>
</g>
<g >
<title>db::validate_for_write (1 samples, 0.03%; +0.03%)</title><rect x="871.7" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="874.67" y="1839.5" ></text>
</g>
<g >
<title>read_context::create_reader (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1487.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; 0.00%)</title><rect x="899.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="902.52" y="1839.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (18 samples, 0.57%; 0.00%)</title><rect x="539.4" y="1845" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="542.42" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (16 samples, 0.51%; 0.00%)</title><rect x="52.1" y="597" width="6.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="607.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.19%; +0.06%)</title><rect x="500.3" y="1813" width="2.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="503.29" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (3 samples, 0.10%; 0.00%)</title><rect x="59.7" y="629" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.67" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.10%; +0.10%)</title><rect x="878.4" y="1893" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="881.44" y="1903.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.16%; -0.03%)</title><rect x="1143.7" y="1909" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1146.72" y="1919.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1503.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (1 samples, 0.03%; +0.03%)</title><rect x="908.2" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="911.17" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (4 samples, 0.13%; 0.00%)</title><rect x="131.9" y="1685" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1695.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (3 samples, 0.10%; +0.03%)</title><rect x="735.1" y="1909" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="738.08" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (33 samples, 1.05%; +0.10%)</title><rect x="609.4" y="1797" width="12.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="612.41" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (242 samples, 7.72%; 0.00%)</title><rect x="308.4" y="1797" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.39" y="1807.5" >partition_..</text>
</g>
<g >
<title>auth::permissions_cache::get (2 samples, 0.06%; 0.00%)</title><rect x="89.4" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.39" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (86 samples, 2.74%; -0.16%)</title><rect x="515.7" y="1861" width="32.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="518.71" y="1871.5" >st..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="575.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.03%; +0.03%)</title><rect x="948.8" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="951.81" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="837" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="847.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_receivers (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="623.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, keyspace::make_directory_for_column_family (1 samples, 0.03%; 0.00%)</title><rect x="723.8" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.79" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="112.0" y="1573" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.97" y="1583.5" ></text>
</g>
<g >
<title>create_partitions (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="773" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="783.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="35.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.59" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1615.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1407.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="479.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_local_host_id (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="383.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.24" y="415.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (132 samples, 4.21%; +0.13%)</title><rect x="798.3" y="1845" width="49.7" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="801.30" y="1855.5" >servi..</text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (6 samples, 0.19%; 0.00%)</title><rect x="12.6" y="581" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="591.5" ></text>
</g>
<g >
<title>get_scheduling_groups (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="101.8" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="104.81" y="1615.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="652.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="655.68" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="44.2" y="373" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="47.24" y="383.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1487.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (2 samples, 0.06%; 0.00%)</title><rect x="102.9" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (18 samples, 0.57%; 0.00%)</title><rect x="34.8" y="565" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.83" y="575.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="13.0" y="437" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="16.01" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="144.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1535.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.06%; +0.03%)</title><rect x="123.3" y="2005" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="126.26" y="2015.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.16%; 0.00%)</title><rect x="380.6" y="1685" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="383.63" y="1695.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="39.3" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.35" y="495.5" ></text>
</g>
<g >
<title>row::external_memory_usage (26 samples, 0.83%; +0.06%)</title><rect x="346.4" y="1717" width="9.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="349.39" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="48.4" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="86.0" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="89.01" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="46.1" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="543.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="1155.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.38" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; -0.03%)</title><rect x="137.9" y="1653" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="140.93" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1279.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::column_identifier_raw (1 samples, 0.03%; +0.03%)</title><rect x="83.8" y="1285" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="86.75" y="1295.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; +0.06%)</title><rect x="205.3" y="1893" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="208.29" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="42.4" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.36" y="559.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1877" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1887.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="145.8" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="148.84" y="1503.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::AllocatorType (1 samples, 0.03%; +0.03%)</title><rect x="13.4" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="16.39" y="479.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1301" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1311.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="111.2" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.22" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.13%; -0.06%)</title><rect x="615.4" y="1781" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="618.43" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_attachments_statement, std::default_delete&lt;cql3::statements::list_service_level_attachments_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="78.5" y="661" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="81.48" y="671.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1909" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1919.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="639.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="591.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.81" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (16 samples, 0.51%; 0.00%)</title><rect x="61.9" y="693" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.93" y="703.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::do_recursive_touch_directory (1 samples, 0.03%; 0.00%)</title><rect x="724.2" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.17" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base (2 samples, 0.06%; 0.00%)</title><rect x="118.7" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.74" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.03%)</title><rect x="320.1" y="1733" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="323.05" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (4 samples, 0.13%; -0.19%)</title><rect x="692.2" y="1877" width="1.5" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="695.19" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; +0.06%)</title><rect x="39.3" y="469" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="42.35" y="479.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (7 samples, 0.22%; 0.00%)</title><rect x="91.3" y="1973" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.28" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="826.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="829.52" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1845" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1855.5" >c..</text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, seastar::smp::invoke_on_all&lt;seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="622.6" y="1797" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="625.58" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1487.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="46.1" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="527.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="674.1" y="1909" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="677.13" y="1919.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (2 samples, 0.06%; 0.00%)</title><rect x="185.0" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.97" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.32%; +0.03%)</title><rect x="1030.8" y="1685" width="3.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1033.84" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (21 samples, 0.67%; +0.03%)</title><rect x="1110.2" y="1797" width="7.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1113.23" y="1807.5" ></text>
</g>
<g >
<title>main (2,675 samples, 85.30%; 0.00%)</title><rect x="154.1" y="2037" width="1006.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.11" y="2047.5" >main</text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="133" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="143.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%; -0.03%)</title><rect x="1116.2" y="1669" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1119.25" y="1679.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="117.6" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="120.61" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="144.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="113.9" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.85" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (84 samples, 2.68%; 0.00%)</title><rect x="12.3" y="661" width="31.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.26" y="671.5" >cq..</text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1935.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%; +0.03%)</title><rect x="835.5" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="838.55" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.53" y="511.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="741" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="751.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (20 samples, 0.64%; +0.03%)</title><rect x="1110.6" y="1765" width="7.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1113.61" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1359.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Storage&lt;cql3::expr::expression, false&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="118.7" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="121.74" y="1583.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; +0.03%)</title><rect x="220.3" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="223.34" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; 0.00%)</title><rect x="341.9" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="344.88" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (1 samples, 0.03%; +0.03%)</title><rect x="38.2" y="373" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="41.22" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.03%)</title><rect x="221.1" y="1893" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="224.09" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1487.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; -0.03%)</title><rect x="99.2" y="1493" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="102.18" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (55 samples, 1.75%; 0.00%)</title><rect x="60.8" y="885" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="895.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="98.4" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.42" y="1679.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (19 samples, 0.61%; +0.03%)</title><rect x="60.8" y="725" width="7.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="63.80" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.41%; -0.26%)</title><rect x="1001.5" y="1701" width="4.9" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="1004.49" y="1711.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (4 samples, 0.13%; +0.03%)</title><rect x="986.1" y="1765" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="989.06" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,674 samples, 85.27%; +0.03%)</title><rect x="154.1" y="1957" width="1006.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="157.11" y="1967.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="857.7" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="860.75" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="103.3" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.32" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="38.6" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.10%; 0.00%)</title><rect x="133.4" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1679.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (187 samples, 5.96%; -0.26%)</title><rect x="782.5" y="1877" width="70.4" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="785.49" y="1887.5" >cql3::q..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="146.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.21" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="107.1" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.08" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="57.8" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.79" y="559.5" ></text>
</g>
<g >
<title>abstract_type::from_string (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="629" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.43" y="639.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.03%)</title><rect x="546.6" y="1845" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="549.57" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.10%; 0.00%)</title><rect x="69.8" y="677" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.83" y="687.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (2 samples, 0.06%; 0.00%)</title><rect x="185.0" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.97" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1093" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1103.5" >[unknown]</text>
</g>
<g >
<title>seastar::thread_context::main (5 samples, 0.16%; 0.00%)</title><rect x="126.6" y="2021" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.65" y="2031.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="2015.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="351.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="724.5" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="727.55" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1035.4" y="1717" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1038.35" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1711.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; +0.03%)</title><rect x="747.5" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="750.50" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="618.8" y="1749" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="621.81" y="1759.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="48.8" y="389" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="51.76" y="399.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%; 0.00%)</title><rect x="790.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="793.40" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; +0.03%)</title><rect x="90.1" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="93.15" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1957" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1967.5" >[..</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; 0.00%)</title><rect x="1026.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.32" y="1663.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (8 samples, 0.26%; +0.10%)</title><rect x="293.0" y="1797" width="3.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="295.96" y="1807.5" ></text>
</g>
<g >
<title>service::client_state::has_access (4 samples, 0.13%; +0.03%)</title><rect x="89.0" y="1797" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="92.02" y="1807.5" ></text>
</g>
<g >
<title>posix_memalign (5 samples, 0.16%; 0.00%)</title><rect x="382.9" y="1669" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="385.89" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="38.6" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="36.3" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.34" y="479.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1957" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1967.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; 0.00%)</title><rect x="939.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="942.40" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.03%; 0.00%)</title><rect x="576.7" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="579.67" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1391.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="653.8" y="1877" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="656.81" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.03%; -0.03%)</title><rect x="782.1" y="1877" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="785.12" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1038.4" y="1765" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1041.36" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1973" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1983.5" >[unknown]</text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1519.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (22 samples, 0.70%; +0.03%)</title><rect x="638.0" y="1813" width="8.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="641.00" y="1823.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="957.8" y="1797" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="960.84" y="1807.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; -0.06%)</title><rect x="932.6" y="1829" width="2.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="935.63" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="515.3" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="518.34" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="399.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="34.8" y="485" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="37.83" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.8" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.79" y="1471.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="17.5" y="389" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="20.53" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.06%; +0.03%)</title><rect x="1037.6" y="1749" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1040.61" y="1759.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.06%; 0.00%)</title><rect x="1025.2" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1028.19" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1093" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="113.9" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.85" y="1647.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; -0.10%)</title><rect x="848.0" y="1845" width="0.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="850.97" y="1855.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::str (1 samples, 0.03%; +0.03%)</title><rect x="725.3" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="728.30" y="1695.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; 0.00%)</title><rect x="185.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.34" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="879.9" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.95" y="1887.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (13 samples, 0.41%; 0.00%)</title><rect x="868.3" y="1893" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.28" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (5 samples, 0.16%; 0.00%)</title><rect x="869.4" y="1797" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.41" y="1807.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (48 samples, 1.53%; -0.22%)</title><rect x="819.0" y="1781" width="18.1" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="821.99" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (9 samples, 0.29%; 0.00%)</title><rect x="140.2" y="1621" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.19" y="1631.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="96.9" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="99.92" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1097.4" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1100.44" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="97.3" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="100.30" y="1615.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; 0.00%)</title><rect x="344.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="347.89" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="47.3" y="501" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="50.25" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (2 samples, 0.06%; 0.00%)</title><rect x="102.9" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1567.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%; -0.16%)</title><rect x="443.1" y="1829" width="3.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="446.09" y="1839.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1455.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1359.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.22%; -0.06%)</title><rect x="145.1" y="1621" width="2.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="148.08" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="132.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.29" y="1487.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.15" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="72.1" y="565" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="139.1" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="693" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (50 samples, 1.59%; 0.00%)</title><rect x="15.3" y="533" width="18.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="75.5" y="661" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="78.47" y="671.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="985.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.68" y="1775.5" ></text>
</g>
<g >
<title>do_cql_test (87 samples, 2.77%; 0.00%)</title><rect x="11.1" y="709" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="719.5" >do..</text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (2 samples, 0.06%; 0.00%)</title><rect x="118.7" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.74" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="825.8" y="1749" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="828.77" y="1759.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1119.6" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1122.64" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="403.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="406.58" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; +0.10%)</title><rect x="604.9" y="1797" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="607.89" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1941" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1951.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="59.7" y="549" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="62.67" y="559.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (6 samples, 0.19%; +0.03%)</title><rect x="1102.3" y="1765" width="2.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1105.33" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="479.5" ></text>
</g>
<g >
<title>evictable_reader::recreate_reader (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1519.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (295 samples, 9.41%; +0.22%)</title><rect x="288.4" y="1813" width="111.0" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="291.44" y="1823.5" >mutation_read..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1999.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (21 samples, 0.67%; -0.03%)</title><rect x="786.3" y="1845" width="7.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="789.26" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24 samples, 0.77%; 0.00%)</title><rect x="1109.1" y="1877" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.10" y="1887.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::index_impl (1 samples, 0.03%; +0.03%)</title><rect x="20.5" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.54" y="431.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="997" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1007.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1375.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="837" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="847.5" ></text>
</g>
<g >
<title>database::apply_in_memory (1 samples, 0.03%; +0.03%)</title><rect x="1100.8" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1103.82" y="1855.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.03%; 0.00%)</title><rect x="1155.4" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.38" y="1935.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; 0.00%)</title><rect x="1122.3" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1125.27" y="1935.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="543.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="90.9" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="2015.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,674 samples, 85.27%; 0.00%)</title><rect x="154.1" y="1973" width="1006.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.11" y="1983.5" >seastar::reactor::run</text>
</g>
<g >
<title>operator delete (8 samples, 0.26%; 0.00%)</title><rect x="255.3" y="1877" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="258.33" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="96.5" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.54" y="1423.5" ></text>
</g>
<g >
<title>abstract_type::get_string (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="152.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.61" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; 0.00%)</title><rect x="968.8" y="1765" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="971.75" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="81.1" y="741" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="84.12" y="751.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%; +0.03%)</title><rect x="646.3" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="649.28" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="131.9" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (54 samples, 1.72%; 0.00%)</title><rect x="60.8" y="741" width="20.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="751.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="51.0" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="77.4" y="661" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="80.35" y="671.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharPositionInLine (1 samples, 0.03%; +0.03%)</title><rect x="22.4" y="453" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="25.42" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 1.24%; 0.00%)</title><rect x="17.9" y="501" width="14.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.90" y="511.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="100.7" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="140.6" y="1525" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.57" y="1535.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="130.8" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.78" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="933" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="943.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="40.9" y="437" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="43.85" y="447.5" ></text>
</g>
<g >
<title>row::row (3 samples, 0.10%; +0.03%)</title><rect x="92.4" y="1861" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="95.40" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1375.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="446.5" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="449.48" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="693" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="703.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (2 samples, 0.06%; +0.06%)</title><rect x="37.5" y="517" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="40.47" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectStatement (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1727.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="399.1" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="402.07" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::get_deleter (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.06%)</title><rect x="907.4" y="1749" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="910.42" y="1759.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.75" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="320.8" y="1733" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="323.80" y="1743.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1807.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&amp;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="48.4" y="261" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="51.38" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;database&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="725.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.30" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="36.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.72" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (20 samples, 0.64%; +0.06%)</title><rect x="212.8" y="1877" width="7.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="215.81" y="1887.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (39 samples, 1.24%; 0.00%)</title><rect x="902.5" y="1797" width="14.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="905.53" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1471.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="56.3" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="383.5" ></text>
</g>
<g >
<title>seastar::touch_directory (1 samples, 0.03%; 0.00%)</title><rect x="723.8" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.79" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="735.5" ></text>
</g>
<g >
<title>dht::tri_compare (14 samples, 0.45%; -0.03%)</title><rect x="1076.4" y="1701" width="5.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1079.36" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.10%; 0.00%)</title><rect x="56.3" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.28" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; 0.00%)</title><rect x="112.7" y="1557" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.06%; 0.00%)</title><rect x="277.2" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="280.16" y="1855.5" ></text>
</g>
<g >
<title>freeze (8 samples, 0.26%; 0.00%)</title><rect x="1111.0" y="1685" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.98" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1615.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%; +0.03%)</title><rect x="219.6" y="1845" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="222.59" y="1855.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="572.9" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="575.91" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="132.7" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (10 samples, 0.32%; +0.03%)</title><rect x="317.0" y="1749" width="3.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="320.04" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="140.2" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="143.19" y="1567.5" ></text>
</g>
<g >
<title>do_cql_test (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1893" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="103.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.32" y="1535.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.45%; -0.03%)</title><rect x="248.2" y="1861" width="5.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="251.18" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1109" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1119.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="130.8" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.78" y="1695.5" ></text>
</g>
<g >
<title>database::apply_in_memory (16 samples, 0.51%; +0.06%)</title><rect x="1101.2" y="1829" width="6.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1104.20" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="17.1" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.15" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="447.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1173" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1183.5" >[unknown]</text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="527.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="723.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.04" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (41 samples, 1.31%; +0.03%)</title><rect x="105.2" y="1733" width="15.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="108.20" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.88" y="1807.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="132.3" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="135.29" y="1455.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (22 samples, 0.70%; +0.41%)</title><rect x="327.6" y="1733" width="8.3" height="15.0" fill="rgb(255,15,15)" rx="2" ry="2" />
<text  x="330.58" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.06%)</title><rect x="838.2" y="1765" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="841.18" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="891.6" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="894.61" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.03%)</title><rect x="991.0" y="1733" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="993.95" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.03%; 0.00%)</title><rect x="64.9" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.94" y="687.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.10%; +0.06%)</title><rect x="545.1" y="1829" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="548.06" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1631.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="904.8" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="907.78" y="1759.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.03%; +0.03%)</title><rect x="109.7" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="112.71" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="869.8" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.79" y="1743.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="64.2" y="661" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.18" y="671.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.06%; 0.00%)</title><rect x="1102.7" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.70" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (15 samples, 0.48%; 0.00%)</title><rect x="43.9" y="693" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="703.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="885" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="895.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; 0.00%)</title><rect x="345.3" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="348.26" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (113 samples, 3.60%; +0.06%)</title><rect x="1040.2" y="1781" width="42.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1043.24" y="1791.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="165" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="175.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="559.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.13%; 0.00%)</title><rect x="131.9" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="144.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="45.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.06%)</title><rect x="608.7" y="1781" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="611.65" y="1791.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.35%; 0.00%)</title><rect x="1111.0" y="1749" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.98" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_M_get (1 samples, 0.03%; 0.00%)</title><rect x="95.8" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.79" y="1439.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%; +0.03%)</title><rect x="994.3" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="997.34" y="1743.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; -0.10%)</title><rect x="442.7" y="1797" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="445.72" y="1807.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.03%; 0.00%)</title><rect x="151.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.48" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.01" y="495.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1669" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1679.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1381" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1391.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="559.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.06%; 0.00%)</title><rect x="10.4" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="709" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="719.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; +0.19%)</title><rect x="719.3" y="1909" width="2.6" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="722.28" y="1919.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="70.6" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="73.58" y="479.5" ></text>
</g>
<g >
<title>[unknown] (195 samples, 6.22%; 0.00%)</title><rect x="10.4" y="1573" width="73.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1583.5" >[unknown]</text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.40" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (6 samples, 0.19%; +0.03%)</title><rect x="1115.5" y="1717" width="2.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1118.50" y="1727.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (9 samples, 0.29%; 0.00%)</title><rect x="140.2" y="1605" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.19" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1765" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1775.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.06%)</title><rect x="575.5" y="1797" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="578.54" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="702.3" y="1909" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="705.35" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; +0.03%)</title><rect x="917.2" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="920.20" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="153.0" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.98" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::operation::set_value*, false&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="152.2" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="155.23" y="1567.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="127.5" ></text>
</g>
<g >
<title>seastar::task_quota_aio_completion::complete_with (1 samples, 0.03%; 0.00%)</title><rect x="1120.4" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1123.39" y="1919.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="862.6" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="865.64" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="128.2" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="131.15" y="1823.5" ></text>
</g>
<g >
<title>dht::tri_compare (4 samples, 0.13%; 0.00%)</title><rect x="1070.0" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1072.97" y="1727.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (4 samples, 0.13%; 0.00%)</title><rect x="13.4" y="517" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.63" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="725" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="735.5" ></text>
</g>
<g >
<title>from_hex (2 samples, 0.06%; +0.06%)</title><rect x="63.4" y="597" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="66.43" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="84.1" y="1925" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.06%)</title><rect x="671.9" y="1909" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="674.87" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; +0.03%)</title><rect x="335.9" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="338.85" y="1743.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="407.7" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="410.72" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.53" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="933" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="943.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="725" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="735.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.03%; +0.03%)</title><rect x="10.4" y="37" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="13.38" y="47.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="367.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.03%; 0.00%)</title><rect x="1159.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.90" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.53" y="495.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.03%; 0.00%)</title><rect x="682.8" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.78" y="1887.5" ></text>
</g>
<g >
<title>__libc_siglongjmp (1 samples, 0.03%; +0.03%)</title><rect x="153.7" y="2053" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="156.74" y="2063.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="106.3" y="1701" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::file_data_sink_impl::close (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1567.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (8 samples, 0.26%; 0.00%)</title><rect x="1111.0" y="1669" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.98" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; 0.00%)</title><rect x="31.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.82" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="151.5" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.48" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="104.4" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.45" y="1503.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="98.8" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="36.3" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.34" y="495.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.45%; +0.03%)</title><rect x="408.1" y="1861" width="5.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="411.10" y="1871.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%; +0.06%)</title><rect x="1036.5" y="1717" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1039.48" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="11.9" y="677" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="14.88" y="687.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="139.4" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.44" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1599.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (3 samples, 0.10%; +0.03%)</title><rect x="593.2" y="1813" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="596.23" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1765" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1775.5" >s..</text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1317" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1327.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="869" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="879.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="1122.6" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1125.65" y="1935.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::task_queue (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (3 samples, 0.10%; 0.00%)</title><rect x="48.4" y="533" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.13%; 0.00%)</title><rect x="49.5" y="805" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="815.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (2 samples, 0.06%; +0.06%)</title><rect x="1109.5" y="1797" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1112.48" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="64.2" y="645" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="67.18" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="142.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.45" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1823.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.10%; +0.03%)</title><rect x="645.2" y="1797" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="648.15" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="114.2" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="117.23" y="1583.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (19 samples, 0.61%; 0.00%)</title><rect x="51.0" y="693" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.01" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 1.24%; 0.00%)</title><rect x="17.9" y="485" width="14.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.90" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="826.9" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="829.89" y="1775.5" ></text>
</g>
<g >
<title>row::compact_and_expire (31 samples, 0.99%; -0.06%)</title><rect x="502.5" y="1829" width="11.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="505.54" y="1839.5" ></text>
</g>
<g >
<title>__start_context (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="853" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_aggregate_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="575.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (5 samples, 0.16%; +0.06%)</title><rect x="658.3" y="1893" width="1.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="661.32" y="1903.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="575.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.03%; 0.00%)</title><rect x="36.0" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.96" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (52 samples, 1.66%; 0.00%)</title><rect x="133.4" y="1685" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.57" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="147.7" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1631.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1663.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.03%; -0.03%)</title><rect x="748.3" y="1893" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="751.25" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="96.2" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1471.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="837" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.03%)</title><rect x="703.1" y="1909" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="706.10" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; -0.03%)</title><rect x="601.1" y="1813" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="604.13" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.06%)</title><rect x="548.5" y="1845" width="1.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="551.45" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; +0.03%)</title><rect x="47.6" y="341" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="50.63" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::untyped_constant&gt;::_M_addr (1 samples, 0.03%; +0.03%)</title><rect x="100.7" y="1237" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="103.68" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1519.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; +0.03%)</title><rect x="836.3" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="839.30" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; 0.00%)</title><rect x="345.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="348.64" y="1727.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (2 samples, 0.06%; +0.06%)</title><rect x="1030.1" y="1701" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1033.08" y="1711.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (13 samples, 0.41%; 0.00%)</title><rect x="375.7" y="1669" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="378.74" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; +0.03%)</title><rect x="140.9" y="1477" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="143.94" y="1487.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.38" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="144.0" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1615.5" ></text>
</g>
<g >
<title>seastar::reactor::init_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.10" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; +0.03%)</title><rect x="12.6" y="501" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="15.63" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="91.7" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="94.65" y="1887.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (61 samples, 1.95%; -0.03%)</title><rect x="516.5" y="1845" width="22.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="519.47" y="1855.5" >m..</text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (6 samples, 0.19%; +0.10%)</title><rect x="535.7" y="1797" width="2.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="538.66" y="1807.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (6 samples, 0.19%; 0.00%)</title><rect x="102.9" y="1669" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.58" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%; 0.00%)</title><rect x="620.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="623.32" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="719.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (169 samples, 5.39%; -0.06%)</title><rect x="975.1" y="1781" width="63.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="978.15" y="1791.5" >servic..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="118.4" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.37" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="59.3" y="533" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="62.29" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; -0.06%)</title><rect x="681.7" y="1909" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="684.65" y="1919.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="71.0" y="469" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="73.96" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="71.0" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.96" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (196 samples, 6.25%; 0.00%)</title><rect x="10.4" y="1941" width="73.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1951.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="724.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.55" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1535.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="1113.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.62" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (61 samples, 1.95%; 0.00%)</title><rect x="130.0" y="1941" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.03" y="1951.5" >[..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; -0.03%)</title><rect x="544.3" y="1813" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="547.31" y="1823.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.22%; +0.03%)</title><rect x="827.3" y="1765" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="830.27" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="147.0" y="1541" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="149.96" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1535.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="2015.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (8 samples, 0.26%; 0.00%)</title><rect x="94.7" y="1685" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1695.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; +0.03%)</title><rect x="90.5" y="2021" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="93.52" y="2031.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_stopIndex (1 samples, 0.03%; +0.03%)</title><rect x="83.0" y="1077" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="86.00" y="1087.5" ></text>
</g>
<g >
<title>std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="60.4" y="565" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="63.42" y="575.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.03%; +0.03%)</title><rect x="527.0" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="530.00" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="620.7" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="623.70" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.42" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.10%; 0.00%)</title><rect x="133.4" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="751.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (3 samples, 0.10%; +0.03%)</title><rect x="448.0" y="1829" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="450.98" y="1839.5" ></text>
</g>
<g >
<title>create_partitions (87 samples, 2.77%; 0.00%)</title><rect x="11.1" y="693" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="703.5" >cr..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="52.5" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="16.4" y="309" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="19.40" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.10%; 0.00%)</title><rect x="116.5" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1679.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (3 samples, 0.10%; 0.00%)</title><rect x="67.9" y="661" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.95" y="671.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="135.7" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.68" y="1519.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,675 samples, 85.30%; 0.00%)</title><rect x="154.1" y="1989" width="1006.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.11" y="1999.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.01" y="511.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1983.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="83.0" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.72" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (3 samples, 0.10%; 0.00%)</title><rect x="40.1" y="517" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.10" y="527.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="805" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="815.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; -0.03%)</title><rect x="621.1" y="1781" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="624.07" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; -0.03%)</title><rect x="1029.3" y="1685" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1032.33" y="1695.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (4 samples, 0.13%; -0.03%)</title><rect x="1098.2" y="1829" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1101.19" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="35.2" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.21" y="527.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.03%; +0.03%)</title><rect x="516.1" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="519.09" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.57" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.16%; 0.00%)</title><rect x="126.6" y="2005" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.65" y="2015.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.12" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="44.6" y="341" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="47.62" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="45.7" y="373" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="48.75" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="96.2" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_initialize_map (3 samples, 0.10%; 0.00%)</title><rect x="13.8" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.76" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="984.9" y="1765" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="987.93" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.16" y="1871.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="184.2" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.22" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="52.1" y="389" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="55.14" y="399.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; 0.00%)</title><rect x="221.8" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="94.7" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="145.8" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.84" y="1551.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.03%; 0.00%)</title><rect x="1120.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1123.01" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (70 samples, 2.23%; 0.00%)</title><rect x="94.7" y="1781" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.66" y="1791.5" >c..</text>
</g>
<g >
<title>[unknown] (89 samples, 2.84%; 0.00%)</title><rect x="10.4" y="853" width="33.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="863.5" >[u..</text>
</g>
<g >
<title>reconcilable_result_builder::consume_end_of_partition (1 samples, 0.03%; 0.00%)</title><rect x="221.8" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.84" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (193 samples, 6.15%; 0.00%)</title><rect x="10.4" y="1061" width="72.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1071.5" >[unknown]</text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.03%; -0.06%)</title><rect x="392.3" y="1749" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="395.30" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.16%)</title><rect x="992.1" y="1717" width="0.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="995.08" y="1727.5" ></text>
</g>
<g >
<title>row::external_memory_usage (5 samples, 0.16%; +0.16%)</title><rect x="385.9" y="1733" width="1.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="388.90" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="95.0" y="1541" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.04" y="1551.5" ></text>
</g>
<g >
<title>database::has_keyspace (6 samples, 0.19%; +0.06%)</title><rect x="860.4" y="1861" width="2.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="863.38" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="35.6" y="357" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="38.59" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (30 samples, 0.96%; 0.00%)</title><rect x="69.8" y="693" width="11.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.83" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="1019.9" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.92" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="97.7" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="83.4" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1311.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="50.3" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="559.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%; -0.10%)</title><rect x="466.8" y="1797" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="469.80" y="1807.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (6 samples, 0.19%; +0.03%)</title><rect x="1111.7" y="1637" width="2.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1114.73" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1583.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.69" y="607.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="1121.9" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1124.89" y="1935.5" ></text>
</g>
</g>
</svg>
