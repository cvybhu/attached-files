<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (3 samples, 0.10%; 0.00%)</title><rect x="20.5" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.51" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (4 samples, 0.13%; 0.00%)</title><rect x="1157.3" y="1941" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.35" y="1951.5" ></text>
</g>
<g >
<title>__start_context (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="677" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="69" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="60.7" y="389" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="63.67" y="399.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="25.8" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="28.76" y="383.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; -0.06%)</title><rect x="346.3" y="1685" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="349.28" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="76.1" y="437" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="79.06" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="447.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; -0.03%)</title><rect x="861.6" y="1845" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="864.60" y="1855.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.06%; -0.03%)</title><rect x="790.7" y="1829" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="793.66" y="1839.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.03%; -0.03%)</title><rect x="687.1" y="1877" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="690.07" y="1887.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.06%)</title><rect x="598.9" y="1781" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="601.87" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; -0.13%)</title><rect x="890.9" y="1845" width="0.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="893.87" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="85.8" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="773" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="783.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="287.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="118.8" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1455.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; 0.00%)</title><rect x="10.0" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (688 samples, 21.88%; +0.03%)</title><rect x="867.6" y="1925" width="258.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="870.60" y="1935.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="917" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="77.9" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.93" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="853" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="863.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (10 samples, 0.32%; -0.16%)</title><rect x="661.2" y="1909" width="3.7" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="664.18" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.30" y="287.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (2 samples, 0.06%; +0.06%)</title><rect x="636.0" y="1813" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="639.03" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::temporary_buffer&lt;unsigned char&gt; &gt;, seastar::posix_file_impl::read_maybe_eof (1 samples, 0.03%; +0.03%)</title><rect x="718.2" y="1925" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="721.23" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%; -0.03%)</title><rect x="1029.0" y="1653" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1031.99" y="1663.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="46.8" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="49.78" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (22 samples, 0.70%; +0.03%)</title><rect x="696.1" y="1909" width="8.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="699.08" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="326.0" y="1717" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="329.02" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="100.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.08" y="447.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; +0.03%)</title><rect x="210.4" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="213.42" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.61" y="1743.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (5 samples, 0.16%; -0.16%)</title><rect x="794.8" y="1813" width="1.9" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="797.79" y="1823.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (3 samples, 0.10%; 0.00%)</title><rect x="101.2" y="533" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="543.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="823.3" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="826.31" y="1775.5" ></text>
</g>
<g >
<title>do_cql_test (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="613" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="623.5" ></text>
</g>
<g >
<title>table::~table (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="159.4" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="162.38" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1727.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; 0.00%)</title><rect x="520.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="523.43" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%; +0.03%)</title><rect x="967.1" y="1781" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="970.06" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_params_to_mutations (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%; 0.00%)</title><rect x="107.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.58" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.45%; 0.00%)</title><rect x="147.7" y="2021" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.74" y="2031.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="189.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.40" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="44.2" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.15" y="335.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.03%; 0.00%)</title><rect x="192.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.40" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (309 samples, 9.83%; +0.16%)</title><rect x="279.9" y="1813" width="115.9" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="282.85" y="1823.5" >mutation_reade..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="118.5" y="1621" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.47" y="1631.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="152.6" y="1941" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="155.62" y="1951.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1647.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; -0.03%)</title><rect x="1129.2" y="1925" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1132.20" y="1935.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="24.3" y="389" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="27.26" y="399.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 7.86%; 0.00%)</title><rect x="10.4" y="837" width="92.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="847.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (138 samples, 4.39%; -0.06%)</title><rect x="796.7" y="1861" width="51.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="799.67" y="1871.5" >cql3:..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="303.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (3 samples, 0.10%; +0.03%)</title><rect x="1054.9" y="1765" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1057.89" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (6 samples, 0.19%; 0.00%)</title><rect x="26.5" y="341" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.51" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="574.1" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="577.10" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.10%)</title><rect x="1103.7" y="1845" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1106.68" y="1855.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (4 samples, 0.13%; -0.03%)</title><rect x="221.7" y="1861" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="224.68" y="1871.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="111.3" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.34" y="1839.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.10%; +0.03%)</title><rect x="804.5" y="1829" width="1.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="807.55" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1829" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1839.5" >[unknown]</text>
</g>
<g >
<title>all (3,144 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="679.2" y="1909" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="682.19" y="1919.5" ></text>
</g>
<g >
<title>database::find_keyspace (14 samples, 0.45%; +0.13%)</title><rect x="1049.6" y="1765" width="5.3" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="1052.63" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result_set&gt; &gt;, db::system_keyspace::query (1 samples, 0.03%; 0.00%)</title><rect x="665.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.31" y="1935.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="868.0" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="870.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="67.0" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.05" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::file&gt;, sstables::sstable::new_sstable_component_file (1 samples, 0.03%; +0.03%)</title><rect x="664.9" y="1925" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="667.93" y="1935.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="641.3" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="644.28" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; 0.00%)</title><rect x="762.5" y="1893" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="765.51" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.23" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.06%)</title><rect x="1020.4" y="1653" width="1.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1023.36" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (13 samples, 0.41%; +0.10%)</title><rect x="371.8" y="1637" width="4.9" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="374.81" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.06%; +0.06%)</title><rect x="267.1" y="1845" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="270.09" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="392.1" y="1765" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="395.07" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="705.5" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="708.46" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.16%; 0.00%)</title><rect x="59.2" y="421" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.17" y="431.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (28 samples, 0.89%; +0.06%)</title><rect x="665.7" y="1925" width="10.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="668.68" y="1935.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (70 samples, 2.23%; 0.00%)</title><rect x="16.4" y="485" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.38" y="495.5" >a..</text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.03%; 0.00%)</title><rect x="147.7" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.74" y="1983.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; +0.03%)</title><rect x="22.4" y="357" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="25.39" y="367.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="1157.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.72" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="557.6" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="560.59" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="68.9" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.92" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="159.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="729.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.11" y="1919.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="591.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="123.7" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1455.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.23" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; -0.06%)</title><rect x="980.9" y="1733" width="1.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="983.95" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1125.1" y="1909" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1128.07" y="1919.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.06%; +0.06%)</title><rect x="601.9" y="1781" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="604.88" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (2 samples, 0.06%; 0.00%)</title><rect x="99.3" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;logalloc::region_impl&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.13%; +0.10%)</title><rect x="537.3" y="1797" width="1.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="540.32" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="989.6" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="992.58" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.80%; 0.00%)</title><rect x="1108.6" y="1893" width="9.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.56" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.18" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (6 samples, 0.19%; 0.00%)</title><rect x="700.2" y="1893" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="703.21" y="1903.5" ></text>
</g>
<g >
<title>db::system_keyspace::query (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1791.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="79.1" y="597" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="82.06" y="607.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; -0.03%)</title><rect x="390.6" y="1749" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="393.57" y="1759.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.03%; +0.03%)</title><rect x="1126.6" y="1893" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1129.57" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="99.3" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.10%; +0.03%)</title><rect x="1101.0" y="1845" width="1.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1104.05" y="1855.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; 0.00%)</title><rect x="66.3" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.30" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="96.3" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.32" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="314.0" y="1733" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="317.01" y="1743.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%; +0.06%)</title><rect x="847.0" y="1797" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="849.96" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (6 samples, 0.19%; 0.00%)</title><rect x="123.3" y="1573" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.35" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="591.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="869.5" y="1685" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="872.48" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="512.2" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="515.18" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; 0.00%)</title><rect x="755.4" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="758.38" y="1887.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.03%; +0.03%)</title><rect x="23.9" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="26.89" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="1124.3" y="1909" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1127.32" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="66.7" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.67" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="148.5" y="1957" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.49" y="1967.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, auth::service::start (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1935.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1967.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; 0.00%)</title><rect x="151.1" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.12" y="1935.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.03%; 0.00%)</title><rect x="936.7" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="939.66" y="1839.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; 0.00%)</title><rect x="70.4" y="261" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.43" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%; +0.06%)</title><rect x="639.8" y="1797" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="642.78" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;10ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (2 samples, 0.06%; 0.00%)</title><rect x="50.2" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.16" y="431.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="717.5" y="1893" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="720.47" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.70" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.0" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.97" y="1503.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (13 samples, 0.41%; -0.06%)</title><rect x="628.1" y="1813" width="4.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="631.15" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.03%; +0.03%)</title><rect x="516.3" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="519.30" y="1871.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (4 samples, 0.13%; 0.00%)</title><rect x="606.0" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.01" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.35%; +0.03%)</title><rect x="961.1" y="1765" width="4.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="964.06" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (58 samples, 1.84%; +0.45%)</title><rect x="687.8" y="1925" width="21.8" height="15.0" fill="rgb(255,37,37)" rx="2" ry="2" />
<text  x="690.82" y="1935.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1535.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%; 0.00%)</title><rect x="1172.4" y="2053" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.36" y="2063.5" ></text>
</g>
<g >
<title>std::operator+ (4 samples, 0.13%; 0.00%)</title><rect x="53.5" y="277" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.54" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="623.5" ></text>
</g>
<g >
<title>seastar::file::list_directory (1 samples, 0.03%; 0.00%)</title><rect x="730.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.24" y="1903.5" ></text>
</g>
<g >
<title>cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="682.2" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.19" y="1887.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.03%)</title><rect x="701.7" y="1861" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="704.71" y="1871.5" ></text>
</g>
<g >
<title>db::get_cdc_generation_mutations (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="335.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.95" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.41%; -0.16%)</title><rect x="828.6" y="1765" width="4.8" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="831.57" y="1775.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1743.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="608.3" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.26" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1477" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1669" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1679.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.61" y="1759.5" ></text>
</g>
<g >
<title>std::__addressof&lt;__gnu_cxx::__aligned_membuf&lt;cql3::expr::untyped_constant&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="126.0" y="1349" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="128.97" y="1359.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="581" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.10%; 0.00%)</title><rect x="70.4" y="309" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.43" y="319.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; -0.03%)</title><rect x="1030.1" y="1653" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1033.11" y="1663.5" ></text>
</g>
<g >
<title>__start_context (21 samples, 0.67%; 0.00%)</title><rect x="103.8" y="2005" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.83" y="2015.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="709" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="719.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (2 samples, 0.06%; 0.00%)</title><rect x="99.3" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="447.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1461" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1471.5" >[unknown]</text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="140.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.24" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1615.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.38%; +0.03%)</title><rect x="960.7" y="1781" width="4.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="963.68" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1647.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="833.4" y="1781" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="836.45" y="1791.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="105.0" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.96" y="1839.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (2 samples, 0.06%; +0.06%)</title><rect x="1158.1" y="1861" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1161.10" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.35%; +0.10%)</title><rect x="944.9" y="1781" width="4.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="947.92" y="1791.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%; 0.00%)</title><rect x="871.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="874.35" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;10ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1631.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="117.7" y="1637" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="120.72" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (9 samples, 0.29%; 0.00%)</title><rect x="122.2" y="1621" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.22" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="967.4" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="970.44" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1663.5" ></text>
</g>
<g >
<title>std::locale::_S_initialize (1 samples, 0.03%; +0.03%)</title><rect x="81.3" y="613" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="84.31" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="21.3" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.26" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; -0.06%)</title><rect x="218.3" y="1861" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="221.30" y="1871.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (7 samples, 0.22%; 0.00%)</title><rect x="1119.8" y="1717" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.82" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="129.7" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.73" y="1679.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="733.6" y="1909" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="736.61" y="1919.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="109.1" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="112.08" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="399.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="533" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="543.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.06%)</title><rect x="922.4" y="1829" width="1.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="925.40" y="1839.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (31 samples, 0.99%; +0.13%)</title><rect x="1160.7" y="2053" width="11.7" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="1163.73" y="2063.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.03%; +0.03%)</title><rect x="1095.8" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1098.80" y="1855.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="335.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.03%; 0.00%)</title><rect x="111.0" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.96" y="1839.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.10%; 0.00%)</title><rect x="660.1" y="1877" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="663.05" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1631.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.38%; -0.16%)</title><rect x="446.9" y="1829" width="4.5" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="449.87" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="30.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.64" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="575.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (1 samples, 0.03%; +0.03%)</title><rect x="155.6" y="1941" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="158.62" y="1951.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="751.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="67.4" y="341" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="70.42" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (169 samples, 5.38%; 0.00%)</title><rect x="15.3" y="581" width="63.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.25" y="591.5" >cql3::..</text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%; +0.03%)</title><rect x="147.0" y="2037" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="149.99" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="123.7" y="1429" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1439.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.24" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (167 samples, 5.31%; 0.00%)</title><rect x="16.0" y="533" width="62.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.01" y="543.5" >seasta..</text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (59 samples, 1.88%; -0.19%)</title><rect x="1060.1" y="1765" width="22.2" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="1063.14" y="1775.5" >s..</text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.23" y="1919.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; -0.03%)</title><rect x="977.9" y="1765" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="980.95" y="1775.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.03%; 0.00%)</title><rect x="191.7" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="86.6" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.56" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1647.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.06%; 0.00%)</title><rect x="192.0" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.03" y="1871.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="126.3" y="1621" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="129.35" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="123.7" y="1413" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1423.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; 0.00%)</title><rect x="1110.8" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.81" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; +0.03%)</title><rect x="147.7" y="1957" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="150.74" y="1967.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.38%; -0.06%)</title><rect x="464.5" y="1797" width="4.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="467.51" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="885" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="895.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.83" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.10%; -0.06%)</title><rect x="512.6" y="1829" width="1.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="515.55" y="1839.5" ></text>
</g>
<g >
<title>fmt::v7::detail::formatbuf&lt;char&gt;::xsputn (1 samples, 0.03%; +0.03%)</title><rect x="153.4" y="2037" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="156.37" y="2047.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="189.8" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1679.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="271.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result&lt;int&gt; &gt;::~work_item_returning (1 samples, 0.03%; 0.00%)</title><rect x="1157.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.72" y="1903.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (1 samples, 0.03%; 0.00%)</title><rect x="106.8" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.83" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.03%)</title><rect x="201.8" y="1909" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="204.79" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="62.5" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.54" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="157.5" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.50" y="1951.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="657.4" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="660.42" y="1887.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="11.1" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.30" y="239.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; +0.03%)</title><rect x="772.3" y="1893" width="2.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="775.27" y="1903.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="21.3" y="277" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="24.26" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.13%)</title><rect x="577.5" y="1797" width="1.9" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="580.48" y="1807.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1813" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (9 samples, 0.29%; 0.00%)</title><rect x="122.2" y="1653" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.06" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="734.4" y="1909" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="737.36" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="1097.3" y="1829" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1100.30" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="866.9" y="1925" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="869.85" y="1935.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (3 samples, 0.10%; 0.00%)</title><rect x="1122.4" y="1733" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1125.44" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (4 samples, 0.13%; +0.06%)</title><rect x="1154.0" y="1925" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1156.97" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="61.4" y="325" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="64.42" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="107.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.58" y="1791.5" ></text>
</g>
<g >
<title>std::construct_at&lt;seastar::shared_ptr&lt;cql3::relation&gt;, seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="140.6" y="1717" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="143.61" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="479.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; +0.03%)</title><rect x="577.1" y="1813" width="2.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="580.11" y="1823.5" ></text>
</g>
<g >
<title>query::querier_base::close (87 samples, 2.77%; +0.03%)</title><rect x="516.7" y="1877" width="32.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="519.68" y="1887.5" >qu..</text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.03%; +0.03%)</title><rect x="153.0" y="2037" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="156.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="559.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="682.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.19" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (7 samples, 0.22%; 0.00%)</title><rect x="85.1" y="437" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.06" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="61.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.79" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (39 samples, 1.24%; +0.10%)</title><rect x="524.9" y="1813" width="14.7" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="527.94" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="56.2" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (21 samples, 0.67%; +0.19%)</title><rect x="321.1" y="1733" width="7.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="324.14" y="1743.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%; 0.00%)</title><rect x="112.1" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.09" y="2031.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, lister::scan_dir (1 samples, 0.03%; 0.00%)</title><rect x="730.2" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.24" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; 0.00%)</title><rect x="335.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="338.03" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1631.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="732.5" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="735.49" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="61.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.42" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1871.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.06%; 0.00%)</title><rect x="143.6" y="2005" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.61" y="2015.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="730.6" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="733.61" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1711.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.16%; -0.06%)</title><rect x="346.7" y="1685" width="1.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="349.66" y="1695.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="51.7" y="229" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="54.66" y="239.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_error (1 samples, 0.03%; +0.03%)</title><rect x="29.5" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="32.52" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="118.1" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.09" y="1631.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="833.8" y="1781" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="836.82" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="479.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (4 samples, 0.13%; -0.10%)</title><rect x="860.5" y="1877" width="1.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="863.47" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (8 samples, 0.25%; 0.00%)</title><rect x="99.3" y="549" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="559.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%; +0.06%)</title><rect x="1142.0" y="1893" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1144.96" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.03%)</title><rect x="521.9" y="1797" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="524.93" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="71.9" y="309" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="74.93" y="319.5" ></text>
</g>
<g >
<title>table::query (1,159 samples, 36.86%; -0.35%)</title><rect x="226.2" y="1893" width="435.0" height="15.0" fill="rgb(74,74,255)" rx="2" ry="2" />
<text  x="229.18" y="1903.5" >table::query</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.61" y="1647.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (2 samples, 0.06%; +0.06%)</title><rect x="1062.0" y="1749" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1065.02" y="1759.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="189.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.40" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.48%; 0.00%)</title><rect x="1118.7" y="1893" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.69" y="1903.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="639.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="783.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="183.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.40" y="1903.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;10ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.32%; +0.06%)</title><rect x="937.0" y="1813" width="3.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="940.04" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.10%; +0.10%)</title><rect x="421.7" y="1845" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="424.72" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="217.9" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="220.93" y="1871.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; +0.03%)</title><rect x="737.7" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="740.74" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1711.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (15 samples, 0.48%; +0.03%)</title><rect x="1118.7" y="1845" width="5.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1121.69" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="821" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="831.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1679.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="63.7" y="405" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="66.67" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql3::untyped_result_set&gt; &gt;, cql3::query_processor::execute_paged_internal (1 samples, 0.03%; 0.00%)</title><rect x="682.2" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.19" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1743.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.10%; 0.00%)</title><rect x="191.7" y="1925" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="68.9" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="71.92" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;int&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1903.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="629" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="639.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1791.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; 0.00%)</title><rect x="847.7" y="1845" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="850.71" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="169.5" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="172.51" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.06%; +0.06%)</title><rect x="658.5" y="1877" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="661.55" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="99.7" y="309" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="102.70" y="319.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%; 0.00%)</title><rect x="390.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="393.20" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; 0.00%)</title><rect x="402.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="405.58" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; +0.03%)</title><rect x="85.1" y="405" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="88.06" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1845" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1855.5" >c..</text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1509" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1519.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="335.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (7 samples, 0.22%; -0.03%)</title><rect x="144.4" y="2005" width="2.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="147.36" y="2015.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%; +0.03%)</title><rect x="539.9" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="542.95" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1269" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1279.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1621" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1631.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="108.0" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.96" y="1791.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.03%; +0.03%)</title><rect x="853.3" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="856.34" y="1871.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; +0.03%)</title><rect x="1111.9" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1114.93" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1887.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="93.3" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="96.32" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.10%; 0.00%)</title><rect x="114.0" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.96" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1663.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info (1 samples, 0.03%; 0.00%)</title><rect x="147.4" y="2037" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.37" y="2047.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; 0.00%)</title><rect x="126.3" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.35" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (51 samples, 1.62%; -0.03%)</title><rect x="112.8" y="1749" width="19.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="115.84" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.35" y="1711.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (16 samples, 0.51%; +0.29%)</title><rect x="530.6" y="1781" width="6.0" height="15.0" fill="rgb(255,98,98)" rx="2" ry="2" />
<text  x="533.57" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::has_partition_key_unrestricted_components (1 samples, 0.03%; +0.03%)</title><rect x="105.7" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="108.71" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="671.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="549.0" y="1829" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="551.96" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.03%)</title><rect x="538.8" y="1797" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="541.82" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.06%)</title><rect x="244.6" y="1877" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="247.57" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.61" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (13 samples, 0.41%; 0.00%)</title><rect x="868.4" y="1845" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.35" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="656.7" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.67" y="1887.5" ></text>
</g>
<g >
<title>__start_context (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="725" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="735.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (8 samples, 0.25%; 0.00%)</title><rect x="99.3" y="565" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (2 samples, 0.06%; 0.00%)</title><rect x="158.3" y="1941" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.25" y="1951.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (13 samples, 0.41%; 0.00%)</title><rect x="868.4" y="1861" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.35" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.48" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.23" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="136.9" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.86" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; +0.03%)</title><rect x="51.3" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="54.28" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="97.8" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.82" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.06%)</title><rect x="1059.4" y="1733" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1062.39" y="1743.5" ></text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.10%; 0.00%)</title><rect x="191.7" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="524.6" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="527.56" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="13.0" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.00" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1813" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1823.5" >c..</text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="100.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.08" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="130.5" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="133.48" y="1711.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%; +0.03%)</title><rect x="138.7" y="1685" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="141.73" y="1695.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="565.5" y="1829" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="568.47" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="687.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.19" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="62.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.54" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; 0.00%)</title><rect x="754.6" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="757.63" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="633.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="636.03" y="1839.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%; +0.03%)</title><rect x="137.2" y="1413" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="140.23" y="1423.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (3 samples, 0.10%; +0.10%)</title><rect x="80.2" y="613" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="83.18" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="11.9" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.88" y="447.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (4 samples, 0.13%; +0.03%)</title><rect x="869.1" y="1765" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="872.10" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="62.5" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.54" y="399.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%; 0.00%)</title><rect x="573.4" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="576.35" y="1807.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (37 samples, 1.18%; +0.03%)</title><rect x="363.2" y="1685" width="13.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="366.17" y="1695.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="91.8" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.82" y="527.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="67.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.80" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="70.8" y="229" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="73.80" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%; +0.03%)</title><rect x="57.7" y="405" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="60.67" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; 0.00%)</title><rect x="871.4" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="874.35" y="1791.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;db::view::view_builder&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1935.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%; +0.03%)</title><rect x="1093.2" y="1829" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1096.17" y="1839.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (4 samples, 0.13%; 0.00%)</title><rect x="189.8" y="1925" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="693" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="415.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (3 samples, 0.10%; -0.03%)</title><rect x="848.8" y="1845" width="1.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="851.84" y="1855.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.13%; +0.10%)</title><rect x="171.0" y="1909" width="1.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="174.01" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; +0.03%)</title><rect x="59.2" y="373" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="62.17" y="383.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="1114.6" y="1733" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1117.56" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; +0.03%)</title><rect x="42.3" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="45.28" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="56.2" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="133.9" y="1653" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="136.85" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (1 samples, 0.03%; -0.03%)</title><rect x="157.9" y="1941" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="160.88" y="1951.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; +0.03%)</title><rect x="1112.7" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1115.68" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.03%; -0.06%)</title><rect x="580.1" y="1813" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="583.11" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1599.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; 0.00%)</title><rect x="869.9" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.85" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (10 samples, 0.32%; 0.00%)</title><rect x="117.7" y="1701" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.72" y="1711.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="126.7" y="1621" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="129.72" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (76 samples, 2.42%; 0.00%)</title><rect x="112.5" y="1989" width="28.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.46" y="1999.5" >se..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::__uniq_ptr_impl (2 samples, 0.06%; 0.00%)</title><rect x="77.2" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.18" y="463.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="573.7" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="576.73" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="138.4" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.70" y="335.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.35" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.35%; 0.00%)</title><rect x="1119.8" y="1765" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.82" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="687.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (9 samples, 0.29%; 0.00%)</title><rect x="88.4" y="533" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.44" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1103.3" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1106.30" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="725" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="735.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; 0.00%)</title><rect x="862.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.72" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.19%; 0.00%)</title><rect x="52.8" y="341" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (25 samples, 0.80%; -0.10%)</title><rect x="899.5" y="1781" width="9.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="902.50" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="517" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="527.5" ></text>
</g>
<g >
<title>from_hex (5 samples, 0.16%; +0.16%)</title><rect x="88.8" y="453" width="1.9" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="91.82" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="22.8" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.76" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="1142.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.71" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.03%; +0.03%)</title><rect x="1123.6" y="1749" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1126.57" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="136.1" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="687.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1781" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1791.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1663.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; 0.00%)</title><rect x="1081.9" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1084.91" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1013" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1023.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="44.2" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.15" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="67.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.05" y="271.5" ></text>
</g>
<g >
<title>make_combined_reader (39 samples, 1.24%; +0.03%)</title><rect x="565.8" y="1829" width="14.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="568.85" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="106.1" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.08" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; 0.00%)</title><rect x="118.8" y="1589" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="451.4" y="1813" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="454.37" y="1823.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="22.8" y="277" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="25.76" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (3 samples, 0.10%; -0.10%)</title><rect x="615.8" y="1781" width="1.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="618.76" y="1791.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; -0.03%)</title><rect x="866.5" y="1925" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="869.48" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; -0.03%)</title><rect x="139.5" y="1717" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="142.48" y="1727.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (43 samples, 1.37%; -0.10%)</title><rect x="817.3" y="1781" width="16.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="820.31" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1951.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (1 samples, 0.03%; -0.06%)</title><rect x="1081.2" y="1733" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1084.16" y="1743.5" ></text>
</g>
<g >
<title>ser::deserialize_array_helper&lt;false, ser::deletable_row_view&gt;::doit&lt;seastar::simple_memory_input_stream, utils::chunked_vector&lt;ser::deletable_row_view, 131072ul&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="1115.3" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1118.31" y="1759.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="177.4" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="180.39" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1205" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1215.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare_conditions (1 samples, 0.03%; +0.03%)</title><rect x="108.3" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="111.33" y="1823.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="719.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="837" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="847.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1807.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; +0.03%)</title><rect x="806.0" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="809.05" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="367.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; +0.03%)</title><rect x="386.4" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="389.44" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1935.5" ></text>
</g>
<g >
<title>ser::qr_row_view::cells (1 samples, 0.03%; +0.03%)</title><rect x="682.2" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="685.19" y="1871.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.03%; 0.00%)</title><rect x="88.1" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; -0.10%)</title><rect x="1143.1" y="1893" width="1.9" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1146.09" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_index_statement*, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::tuple&lt;true, true&gt; (2 samples, 0.06%; 0.00%)</title><rect x="77.2" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.18" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1615.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="994.1" y="1717" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="997.08" y="1727.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.06%; +0.03%)</title><rect x="812.4" y="1813" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="815.43" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="108.0" y="1765" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="110.96" y="1775.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.06" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="447.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.03%; +0.03%)</title><rect x="41.5" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="44.53" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_890c8f4026fb5657cc774dcb869d5487d413f0d3] (1 samples, 0.03%; +0.03%)</title><rect x="840.2" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="843.20" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="11.1" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.35" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; -0.03%)</title><rect x="103.1" y="629" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="106.08" y="639.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (7 samples, 0.22%; 0.00%)</title><rect x="105.7" y="1813" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.71" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="908.5" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="911.51" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~deque (1 samples, 0.03%; 0.00%)</title><rect x="93.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.32" y="511.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="1063.1" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1066.14" y="1743.5" ></text>
</g>
<g >
<title>do_cql_test (181 samples, 5.76%; 0.00%)</title><rect x="13.8" y="629" width="67.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.75" y="639.5" >do_cql_..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::empty (1 samples, 0.03%; +0.03%)</title><rect x="40.4" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="43.40" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (28 samples, 0.89%; 0.00%)</title><rect x="63.3" y="421" width="10.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="28.0" y="293" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="31.02" y="303.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.0" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="67.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.42" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%; +0.03%)</title><rect x="541.1" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="544.08" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="61.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.79" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="112.1" y="1925" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="115.09" y="1935.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; 0.00%)</title><rect x="715.2" y="1909" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="718.22" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="976.4" y="1765" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="979.44" y="1775.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="86.9" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="89.94" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.03%; +0.03%)</title><rect x="150.4" y="1893" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="153.37" y="1903.5" ></text>
</g>
<g >
<title>database::do_apply (24 samples, 0.76%; 0.00%)</title><rect x="1108.9" y="1861" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.93" y="1871.5" ></text>
</g>
<g >
<title>do_cql_test (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="677" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="687.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (3 samples, 0.10%; 0.00%)</title><rect x="101.2" y="501" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="46.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.41" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.03%; +0.03%)</title><rect x="103.1" y="565" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="106.08" y="575.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="700.6" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="703.59" y="1887.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="124.5" y="1397" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="127.47" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="56.2" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="223.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%; +0.03%)</title><rect x="147.4" y="2005" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="150.37" y="2015.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="135.4" y="1573" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="138.36" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1973" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1983.5" >[unknown]</text>
</g>
<g >
<title>db::system_distributed_keyspace::insert_cdc_generation (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1855.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.03%; +0.03%)</title><rect x="392.4" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="395.45" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="175.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="54.3" y="229" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="57.29" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (24 samples, 0.76%; 0.00%)</title><rect x="132.0" y="1797" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.98" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.03%; 0.00%)</title><rect x="783.5" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="786.53" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1973" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1983.5" >s..</text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.03%; +0.03%)</title><rect x="38.9" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="41.90" y="383.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; +0.03%)</title><rect x="1122.1" y="1669" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1125.07" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1237" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1247.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1285" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1295.5" >[unknown]</text>
</g>
<g >
<title>db::schema_tables::make_create_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="836.1" y="1781" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="839.08" y="1791.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_890c8f4026fb5657cc774dcb869d5487d413f0d3] (1 samples, 0.03%; +0.03%)</title><rect x="464.1" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="467.13" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1503.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="49.0" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1999.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (3 samples, 0.10%; 0.00%)</title><rect x="12.6" y="437" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="82.8" y="277" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="85.81" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.91" y="239.5" ></text>
</g>
<g >
<title>row_cache::make_reader (32 samples, 1.02%; +0.06%)</title><rect x="633.8" y="1829" width="12.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="636.78" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="18.3" y="277" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="21.26" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="107.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.58" y="1711.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; 0.00%)</title><rect x="737.4" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="740.37" y="1903.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.03%; 0.00%)</title><rect x="190.9" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.90" y="1871.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (47 samples, 1.49%; +0.19%)</title><rect x="1063.5" y="1733" width="17.7" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1066.52" y="1743.5" ></text>
</g>
<g >
<title>table::query (3 samples, 0.10%; +0.03%)</title><rect x="1156.2" y="1925" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1159.22" y="1935.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.06%; 0.00%)</title><rect x="654.0" y="1845" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.05" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="85.8" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="335.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1333" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1343.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="623.5" ></text>
</g>
<g >
<title>auth::resource::parent (1 samples, 0.03%; +0.03%)</title><rect x="110.6" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="113.59" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.29%; +0.16%)</title><rect x="850.0" y="1845" width="3.3" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="852.96" y="1855.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="114.3" y="1653" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="117.34" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; 0.00%)</title><rect x="725.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (386 samples, 12.28%; 0.00%)</title><rect x="10.0" y="2053" width="144.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.61" y="1759.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="399.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="1125.4" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1128.45" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (22 samples, 0.70%; -0.03%)</title><rect x="788.4" y="1845" width="8.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="791.41" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1029.7" y="1653" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1032.74" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="655.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.10%)</title><rect x="683.3" y="1909" width="1.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="686.32" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; +0.03%)</title><rect x="248.3" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="251.33" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="709" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="719.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (2 samples, 0.06%; +0.06%)</title><rect x="771.5" y="1893" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="774.52" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="390.6" y="1733" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="393.57" y="1743.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="223.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1653" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1663.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.35" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (28 samples, 0.89%; -0.32%)</title><rect x="718.6" y="1925" width="10.5" height="15.0" fill="rgb(86,86,255)" rx="2" ry="2" />
<text  x="721.60" y="1935.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="150.0" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="152.99" y="1903.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="863.1" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="866.10" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1823.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; +0.03%)</title><rect x="526.4" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="529.44" y="1807.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="209.7" y="1893" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="212.67" y="1903.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.06%; 0.00%)</title><rect x="192.0" y="1877" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.03" y="1887.5" ></text>
</g>
<g >
<title>service::client_state::has_access (79 samples, 2.51%; -0.06%)</title><rect x="809.4" y="1829" width="29.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="812.43" y="1839.5" >se..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (4 samples, 0.13%; +0.06%)</title><rect x="27.3" y="309" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="30.26" y="319.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (2 samples, 0.06%; +0.06%)</title><rect x="518.6" y="1829" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="521.56" y="1839.5" ></text>
</g>
<g >
<title>create_partitions (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="661" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.06%; 0.00%)</title><rect x="139.5" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.48" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1631.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.22%; -0.16%)</title><rect x="360.5" y="1685" width="2.7" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="363.55" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="122.6" y="1461" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="125.60" y="1471.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1567.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="44.5" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="47.53" y="431.5" ></text>
</g>
<g >
<title>database::has_keyspace (6 samples, 0.19%; -0.03%)</title><rect x="853.7" y="1877" width="2.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="856.72" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.30" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="832.3" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="835.32" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (9 samples, 0.29%; +0.03%)</title><rect x="122.2" y="1605" width="3.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="125.22" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (8 samples, 0.25%; 0.00%)</title><rect x="108.7" y="1877" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.71" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1112.3" y="1717" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1115.31" y="1727.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="151.5" y="1941" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="154.49" y="1951.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1935.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.03%; 0.00%)</title><rect x="62.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.54" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="60.3" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="63.29" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (2 samples, 0.06%; -0.10%)</title><rect x="1155.5" y="1925" width="0.7" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1158.47" y="1935.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; -0.03%)</title><rect x="1096.2" y="1845" width="1.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1099.17" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1567.5" ></text>
</g>
<g >
<title>reconcilable_result_builder::consume_end_of_partition (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="2015.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.06%; +0.03%)</title><rect x="1129.6" y="1925" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1132.57" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="725.4" y="1893" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="728.36" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="98.2" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.20" y="511.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="869" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="879.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="129.0" y="1541" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="131.98" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="10.8" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="13.75" y="383.5" ></text>
</g>
<g >
<title>do_cql_test (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1957" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1967.5" >d..</text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="414.6" y="1861" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="417.59" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="41.9" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="44.90" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="319.5" ></text>
</g>
<g >
<title>do_parse_schema_tables (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1807.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (4 samples, 0.13%; +0.06%)</title><rect x="395.8" y="1813" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="398.83" y="1823.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="44.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.15" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="869.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.48" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::operator* (1 samples, 0.03%; +0.03%)</title><rect x="73.8" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="76.80" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (254 samples, 8.08%; +0.16%)</title><rect x="555.0" y="1861" width="95.3" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="557.96" y="1871.5" >std::_Funct..</text>
</g>
<g >
<title>__libc_start_main (2,676 samples, 85.11%; 0.00%)</title><rect x="154.9" y="2053" width="1004.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.87" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (9 samples, 0.29%; 0.00%)</title><rect x="122.2" y="1669" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.22" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.10%)</title><rect x="833.8" y="1765" width="2.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="836.82" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.48%; 0.00%)</title><rect x="1118.7" y="1861" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.69" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="867.2" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="870.23" y="1887.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (4 samples, 0.13%; +0.10%)</title><rect x="336.9" y="1701" width="1.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="339.90" y="1711.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt;::wait (1 samples, 0.03%; +0.03%)</title><rect x="1117.6" y="1797" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1120.56" y="1807.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_role_statement*, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.9" y="453" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="80.93" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%; 0.00%)</title><rect x="871.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="874.35" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.10%; +0.06%)</title><rect x="859.3" y="1877" width="1.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="862.34" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (16 samples, 0.51%; -0.13%)</title><rect x="676.2" y="1925" width="6.0" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="679.19" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="113.2" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="116.21" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,221 samples, 38.84%; -0.06%)</title><rect x="202.9" y="1909" width="458.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="205.91" y="1919.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.19" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="71.6" y="325" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="74.55" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="642.8" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="645.79" y="1775.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.48" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; -0.03%)</title><rect x="113.2" y="1733" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="116.21" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.19" y="319.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.03%; +0.03%)</title><rect x="665.3" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="668.31" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="22.8" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.76" y="303.5" ></text>
</g>
<g >
<title>schema_registry::get (1 samples, 0.03%; +0.03%)</title><rect x="949.0" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="952.05" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="2031.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="1020.4" y="1669" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1023.36" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="644.3" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="647.29" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1120.9" y="1637" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1123.94" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1157.7" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1160.72" y="1871.5" ></text>
</g>
<g >
<title>seastar::io_queue::poll_io_queue (1 samples, 0.03%; +0.03%)</title><rect x="1157.3" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1160.35" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (596 samples, 18.96%; +0.16%)</title><rect x="884.1" y="1861" width="223.7" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="887.12" y="1871.5" >cql3::statements::select_stat..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="383.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="111.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.34" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="70.4" y="245" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="73.43" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; +0.03%)</title><rect x="418.3" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="421.35" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="733.2" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="736.24" y="1903.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%; -0.13%)</title><rect x="377.1" y="1685" width="1.5" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="380.06" y="1695.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="213.0" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="216.05" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (8 samples, 0.25%; 0.00%)</title><rect x="85.1" y="469" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.06" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (10 samples, 0.32%; 0.00%)</title><rect x="51.3" y="437" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.30" y="351.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="58.4" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="61.42" y="239.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (3 samples, 0.10%; 0.00%)</title><rect x="224.7" y="1893" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="227.68" y="1903.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.06%; +0.06%)</title><rect x="620.6" y="1797" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="623.64" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;database&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (24 samples, 0.76%; 0.00%)</title><rect x="132.0" y="1781" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.98" y="1791.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (2 samples, 0.06%; +0.03%)</title><rect x="526.8" y="1797" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="529.81" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; -0.03%)</title><rect x="169.9" y="1909" width="1.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="172.89" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (2 samples, 0.06%; +0.03%)</title><rect x="148.5" y="1861" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="151.49" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.19%; +0.10%)</title><rect x="299.7" y="1765" width="2.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="302.75" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (2 samples, 0.06%; +0.06%)</title><rect x="1107.8" y="1861" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1110.81" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.35" y="1663.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (64 samples, 2.04%; +0.06%)</title><rect x="815.1" y="1813" width="24.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="818.06" y="1823.5" >s..</text>
</g>
<g >
<title>cql3::query_options::~query_options (7 samples, 0.22%; -0.13%)</title><rect x="711.1" y="1909" width="2.6" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="714.09" y="1919.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%; +0.10%)</title><rect x="727.6" y="1909" width="1.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="730.61" y="1919.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (265 samples, 8.43%; -0.03%)</title><rect x="415.3" y="1861" width="99.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="418.34" y="1871.5" >query::consu..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.03%; 0.00%)</title><rect x="200.7" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="203.66" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="68.5" y="245" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="71.55" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.16%; +0.03%)</title><rect x="181.5" y="1893" width="1.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="184.52" y="1903.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%; +0.03%)</title><rect x="994.5" y="1717" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="997.46" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.45%; 0.00%)</title><rect x="343.3" y="1701" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="346.28" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.8" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.85" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.03%; +0.03%)</title><rect x="16.4" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="19.38" y="447.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (17 samples, 0.54%; +0.16%)</title><rect x="484.4" y="1829" width="6.4" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="487.40" y="1839.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="61.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.42" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="380.1" y="1733" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="383.06" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="661" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="671.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="923.9" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="926.90" y="1839.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.16%; -0.22%)</title><rect x="509.5" y="1781" width="1.9" height="15.0" fill="rgb(123,123,255)" rx="2" ry="2" />
<text  x="512.55" y="1791.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="124.1" y="1365" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="127.10" y="1375.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="101.6" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="44.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.15" y="351.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="66.3" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.30" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="16.8" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="19.76" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.60" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (3 samples, 0.10%; +0.03%)</title><rect x="74.2" y="421" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="77.18" y="431.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (3 samples, 0.10%; +0.10%)</title><rect x="567.3" y="1813" width="1.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="570.35" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (4 samples, 0.13%; 0.00%)</title><rect x="869.1" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.10" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="852.6" y="1829" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="855.59" y="1839.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; 0.00%)</title><rect x="514.8" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="517.80" y="1871.5" ></text>
</g>
<g >
<title>partition_entry::read (10 samples, 0.32%; +0.16%)</title><rect x="623.6" y="1813" width="3.8" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="626.65" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7 samples, 0.22%; +0.03%)</title><rect x="17.5" y="309" width="2.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="20.51" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1791.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="149.2" y="1989" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.24" y="1999.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="85.8" y="213" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="88.81" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="85" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="95.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.03%; +0.03%)</title><rect x="28.4" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="31.39" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; +0.03%)</title><rect x="99.3" y="341" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="102.33" y="351.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (4 samples, 0.13%; +0.03%)</title><rect x="1120.6" y="1653" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1123.57" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="306.1" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="309.13" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="591.5" ></text>
</g>
<g >
<title>row::row (81 samples, 2.58%; +0.10%)</title><rect x="348.9" y="1717" width="30.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="351.91" y="1727.5" >ro..</text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1114.9" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1117.94" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.29%; 0.00%)</title><rect x="10.4" y="693" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="629" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; 0.00%)</title><rect x="136.1" y="1701" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1711.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.03%; +0.03%)</title><rect x="1153.6" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1156.59" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="114.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.71" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.03%; +0.03%)</title><rect x="15.6" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="18.63" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="514.4" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="517.43" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.25%; 0.00%)</title><rect x="99.3" y="581" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="351.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.03%; +0.03%)</title><rect x="149.2" y="1941" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="152.24" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="56.2" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%; -0.13%)</title><rect x="791.0" y="1813" width="0.4" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="794.04" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (15 samples, 0.48%; +0.06%)</title><rect x="1087.5" y="1829" width="5.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1090.54" y="1839.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; 0.00%)</title><rect x="311.0" y="1733" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.01" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1679.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (27 samples, 0.86%; 0.00%)</title><rect x="1108.6" y="1909" width="10.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.56" y="1919.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (4 samples, 0.13%; +0.03%)</title><rect x="701.0" y="1877" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="703.96" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="22.4" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.39" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="21.3" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.26" y="335.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (2 samples, 0.06%; -0.06%)</title><rect x="490.8" y="1829" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="493.78" y="1839.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%; +0.03%)</title><rect x="148.9" y="1845" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="151.87" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.80%; +0.03%)</title><rect x="1108.6" y="1877" width="9.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1111.56" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; +0.03%)</title><rect x="641.7" y="1781" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="644.66" y="1791.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (2 samples, 0.06%; +0.03%)</title><rect x="207.0" y="1893" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="210.04" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; -0.10%)</title><rect x="311.0" y="1717" width="3.0" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="314.01" y="1727.5" ></text>
</g>
<g >
<title>dht::tri_compare (4 samples, 0.13%; -0.06%)</title><rect x="1072.2" y="1717" width="1.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1075.15" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="239.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (19 samples, 0.60%; 0.00%)</title><rect x="369.9" y="1669" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="372.93" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (12 samples, 0.38%; +0.03%)</title><rect x="135.7" y="1765" width="4.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="138.73" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::untyped_constant&gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="123.7" y="1301" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="126.72" y="1311.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="314.0" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="317.01" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; +0.03%)</title><rect x="31.4" y="293" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="34.39" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.19%; 0.00%)</title><rect x="20.1" y="373" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.13" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="431.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; +0.03%)</title><rect x="339.9" y="1685" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="342.90" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1679.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (9 samples, 0.29%; +0.03%)</title><rect x="310.6" y="1749" width="3.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="313.63" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (190 samples, 6.04%; 0.00%)</title><rect x="10.4" y="709" width="71.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="719.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (6 samples, 0.19%; 0.00%)</title><rect x="52.8" y="325" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (2 samples, 0.06%; 0.00%)</title><rect x="93.3" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.32" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.03%; 0.00%)</title><rect x="103.8" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.83" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="671.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.03%; 0.00%)</title><rect x="925.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="928.40" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (3 samples, 0.10%; +0.03%)</title><rect x="20.5" y="341" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="23.51" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="68.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.92" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="74.9" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.93" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (4 samples, 0.13%; 0.00%)</title><rect x="189.8" y="1877" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.10%; 0.00%)</title><rect x="56.2" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.03%; +0.03%)</title><rect x="40.8" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="43.78" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (6 samples, 0.19%; +0.03%)</title><rect x="871.0" y="1797" width="2.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="873.98" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="543.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="981" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="991.5" >[unknown]</text>
</g>
<g >
<title>operator new (9 samples, 0.29%; +0.03%)</title><rect x="551.6" y="1861" width="3.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="554.58" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1813" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1823.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; 0.00%)</title><rect x="515.6" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="518.55" y="1871.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.10%)</title><rect x="522.7" y="1813" width="2.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="525.68" y="1823.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="50.9" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="53.91" y="239.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.03%; -0.10%)</title><rect x="1011.7" y="1685" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1014.72" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_M_get (1 samples, 0.03%; +0.03%)</title><rect x="56.9" y="197" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="59.91" y="207.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.03%; +0.03%)</title><rect x="23.1" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="26.14" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="39.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.27" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; +0.03%)</title><rect x="82.4" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="85.44" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; 0.00%)</title><rect x="1047.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1050.00" y="1775.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (5 samples, 0.16%; -0.10%)</title><rect x="642.4" y="1797" width="1.9" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="645.41" y="1807.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.03%; +0.03%)</title><rect x="944.2" y="1797" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="947.17" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="100.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.08" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (1 samples, 0.03%; +0.03%)</title><rect x="79.8" y="613" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="82.81" y="623.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="96.3" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="99.32" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="136.9" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.86" y="1599.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; -0.03%)</title><rect x="856.0" y="1877" width="3.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="858.97" y="1887.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="789" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="799.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result&lt;int&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="729.9" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.86" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="136.1" y="1685" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1695.5" ></text>
</g>
<g >
<title>abstract_type::from_string (6 samples, 0.19%; 0.00%)</title><rect x="88.4" y="485" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.44" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base&lt;cql3::expr::expression, false&gt; (1 samples, 0.03%; +0.03%)</title><rect x="140.2" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="143.24" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (3 samples, 0.10%; +0.03%)</title><rect x="1113.8" y="1749" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1116.81" y="1759.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="68.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.55" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.06%; 0.00%)</title><rect x="1156.6" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.60" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1583.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.44" y="479.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.06%; -0.06%)</title><rect x="599.2" y="1781" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="602.25" y="1791.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.9" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.85" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="56.5" y="213" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="59.54" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt;, true, true&gt;::__uniq_ptr_data (2 samples, 0.06%; 0.00%)</title><rect x="77.2" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.18" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="172.5" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="175.51" y="1919.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="85.8" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (2 samples, 0.06%; 0.00%)</title><rect x="73.1" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.05" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (12 samples, 0.38%; 0.00%)</title><rect x="88.1" y="581" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; 0.00%)</title><rect x="189.4" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1301" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1311.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.03%; 0.00%)</title><rect x="1189.2" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.25" y="2031.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%; +0.06%)</title><rect x="511.4" y="1797" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="514.42" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.9" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.92" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.03%; +0.03%)</title><rect x="93.7" y="501" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="96.70" y="511.5" ></text>
</g>
<g >
<title>make_combined_reader (23 samples, 0.73%; -0.25%)</title><rect x="568.5" y="1813" width="8.6" height="15.0" fill="rgb(111,111,255)" rx="2" ry="2" />
<text  x="571.47" y="1823.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1861" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1871.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; 0.00%)</title><rect x="850.0" y="1861" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.96" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (14 samples, 0.45%; -0.03%)</title><rect x="1119.1" y="1829" width="5.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1122.06" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="68.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.55" y="303.5" ></text>
</g>
<g >
<title>auth::service::start (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1743.5" ></text>
</g>
<g >
<title>cql3::prepare_context::set_bound_variables (1 samples, 0.03%; +0.03%)</title><rect x="95.6" y="533" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="98.57" y="543.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%; 0.00%)</title><rect x="192.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.03" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="81.7" y="293" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="84.69" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="2031.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; +0.03%)</title><rect x="159.0" y="1941" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="162.00" y="1951.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1839.5" ></text>
</g>
<g >
<title>row::external_memory_usage (19 samples, 0.60%; +0.06%)</title><rect x="341.8" y="1717" width="7.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="344.78" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::insertStatement (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1791.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (15 samples, 0.48%; 0.00%)</title><rect x="594.4" y="1813" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="597.37" y="1823.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.67%; 0.00%)</title><rect x="996.7" y="1717" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="999.71" y="1727.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (4 samples, 0.13%; 0.00%)</title><rect x="189.8" y="1909" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1919.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; 0.00%)</title><rect x="1111.9" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.93" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1535.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="100.8" y="357" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="103.83" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::detach_service_level_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="78.3" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.31" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.23" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="351.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_text[abi:cxx11] (1 samples, 0.03%; +0.03%)</title><rect x="29.9" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="32.89" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%; 0.00%)</title><rect x="107.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.58" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (15 samples, 0.48%; 0.00%)</title><rect x="16.8" y="389" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.76" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="136.1" y="1733" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="613" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="121.1" y="1685" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="124.09" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (6 samples, 0.19%; 0.00%)</title><rect x="26.5" y="357" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.51" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="135.0" y="1557" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="137.98" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="713.3" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="716.35" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="684.4" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="687.45" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (167 samples, 5.31%; 0.00%)</title><rect x="16.0" y="517" width="62.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.01" y="527.5" >cql3_p..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="72.7" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.68" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="351.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="74.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.93" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (353 samples, 11.23%; +0.51%)</title><rect x="949.8" y="1797" width="132.5" height="15.0" fill="rgb(255,12,12)" rx="2" ry="2" />
<text  x="952.80" y="1807.5" >service::storage..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.06%)</title><rect x="608.3" y="1781" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="611.26" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1477" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1487.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;multishard_combining_reader, dht::sharder const&amp;, seastar::shared_ptr&lt;reader_lifecycle_policy&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, nonwrapping_interval&lt;dht::ring_position&gt; const&amp;, query::partition_slice const&amp;, seastar::io_priority_class const&amp;, tracing::trace_state_ptr, seastar::bool_class&lt;flat_mutation_reader::partition_range_forwarding_tag&gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="2047.5" ></text>
</g>
<g >
<title>db::view::view_builder::start (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (261 samples, 8.30%; -0.06%)</title><rect x="297.9" y="1797" width="97.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="300.87" y="1807.5" >partition_s..</text>
</g>
<g >
<title>create_partitions (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="645" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="655.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1157" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1167.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (7 samples, 0.22%; 0.00%)</title><rect x="1119.8" y="1701" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.82" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.91" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="22.4" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.39" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="540.7" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="543.70" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.13%)</title><rect x="254.7" y="1861" width="2.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="257.71" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1615.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (3 samples, 0.10%; 0.00%)</title><rect x="49.8" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.78" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1567.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; +0.03%)</title><rect x="837.2" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="840.20" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="22.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.39" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="431.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="47.2" y="261" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="50.16" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.7" y="1397" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1407.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (11 samples, 0.35%; +0.10%)</title><rect x="64.8" y="389" width="4.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="67.80" y="399.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="99.3" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (3 samples, 0.10%; 0.00%)</title><rect x="150.7" y="1989" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.74" y="1999.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.19%; 0.00%)</title><rect x="52.8" y="373" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="383.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; 0.00%)</title><rect x="1036.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1039.49" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="515.2" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="518.18" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="1017.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1020.35" y="1647.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1925" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1935.5" >s..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.03%; +0.03%)</title><rect x="75.7" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="78.68" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (2 samples, 0.06%; 0.00%)</title><rect x="151.1" y="1957" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.12" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="118.5" y="1605" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.47" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.13%)</title><rect x="824.1" y="1749" width="1.5" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="827.06" y="1759.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (1 samples, 0.03%; +0.03%)</title><rect x="1057.5" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1060.51" y="1775.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; -0.06%)</title><rect x="307.6" y="1749" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="310.63" y="1759.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="1122.4" y="1749" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1125.44" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1029" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1039.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (5 samples, 0.16%; 0.00%)</title><rect x="11.9" y="453" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.88" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="19.4" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="22.38" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="606.0" y="1765" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="609.01" y="1775.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.54" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.03%)</title><rect x="1057.9" y="1749" width="2.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1060.89" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="95.2" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.20" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (7 samples, 0.22%; +0.10%)</title><rect x="294.1" y="1781" width="2.6" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="297.12" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.23" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (2 samples, 0.06%; 0.00%)</title><rect x="757.3" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="760.26" y="1935.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (5 samples, 0.16%; -0.22%)</title><rect x="141.7" y="2005" width="1.9" height="15.0" fill="rgb(123,123,255)" rx="2" ry="2" />
<text  x="144.74" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1567.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; 0.00%)</title><rect x="918.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.65" y="1807.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (4 samples, 0.13%; 0.00%)</title><rect x="598.5" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="601.50" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="399.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,676 samples, 85.11%; 0.00%)</title><rect x="154.9" y="2021" width="1004.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.87" y="2031.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.6" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::to_expression (2 samples, 0.06%; 0.00%)</title><rect x="91.1" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.07" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.10%)</title><rect x="772.6" y="1877" width="2.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="775.65" y="1887.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="988.8" y="1733" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="991.83" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.10%; +0.03%)</title><rect x="655.2" y="1877" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="658.17" y="1887.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::raw (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="447.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1941" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1951.5" >[unknown]</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::create_index_statement&gt;, true&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="77.2" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="80.18" y="415.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%; +0.03%)</title><rect x="805.7" y="1829" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="808.67" y="1839.5" ></text>
</g>
<g >
<title>query_state::query_state (13 samples, 0.41%; +0.13%)</title><rect x="650.3" y="1877" width="4.9" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="653.29" y="1887.5" ></text>
</g>
<g >
<title>validation::validate_column_family (21 samples, 0.67%; -0.03%)</title><rect x="839.8" y="1829" width="7.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="842.83" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1951.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (6 samples, 0.19%; 0.00%)</title><rect x="871.0" y="1813" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="873.98" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="190.2" y="1653" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="193.15" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.10%; 0.00%)</title><rect x="129.4" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1695.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; +0.03%)</title><rect x="1113.1" y="1781" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1116.06" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; -0.06%)</title><rect x="1028.6" y="1653" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1031.61" y="1663.5" ></text>
</g>
<g >
<title>__start_context (181 samples, 5.76%; 0.00%)</title><rect x="13.8" y="693" width="67.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.75" y="703.5" >__start..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (13 samples, 0.41%; 0.00%)</title><rect x="868.4" y="1877" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.35" y="1887.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.03%)</title><rect x="1117.9" y="1893" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1120.94" y="1903.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="287.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (2 samples, 0.06%; +0.03%)</title><rect x="755.0" y="1893" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="758.01" y="1903.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (3 samples, 0.10%; +0.03%)</title><rect x="106.5" y="1781" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="109.46" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.23" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="191.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (13 samples, 0.41%; -0.13%)</title><rect x="682.9" y="1925" width="4.9" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="685.95" y="1935.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (2 samples, 0.06%; 0.00%)</title><rect x="1119.1" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.06" y="1791.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="103.5" y="389" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="106.45" y="399.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; 0.00%)</title><rect x="306.9" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="309.88" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (3 samples, 0.10%; 0.00%)</title><rect x="47.2" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="463.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="853" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="863.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; +0.06%)</title><rect x="398.5" y="1813" width="3.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="401.45" y="1823.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="805" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="815.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1471.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="53.2" y="261" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="56.16" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="49.8" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="52.78" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="67.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.80" y="367.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.10%; -0.03%)</title><rect x="860.8" y="1861" width="1.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="863.85" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.95" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.03%; +0.03%)</title><rect x="106.8" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="109.83" y="1759.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="259.6" y="1861" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.59" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="764.8" y="1909" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="767.76" y="1919.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (371 samples, 11.80%; -0.10%)</title><rect x="267.8" y="1845" width="139.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="270.84" y="1855.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (8 samples, 0.25%; +0.03%)</title><rect x="17.1" y="325" width="3.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="20.13" y="335.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; -0.10%)</title><rect x="527.6" y="1797" width="1.8" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="530.56" y="1807.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; -0.03%)</title><rect x="334.3" y="1717" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="337.27" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="1021.5" y="1637" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1024.48" y="1647.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.0" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.97" y="1551.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.48%; +0.03%)</title><rect x="1012.1" y="1685" width="5.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1015.10" y="1695.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (170 samples, 5.41%; 0.00%)</title><rect x="15.3" y="597" width="63.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.25" y="607.5" >single_..</text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (9 samples, 0.29%; 0.00%)</title><rect x="178.1" y="1877" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.14" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (86 samples, 2.74%; -0.06%)</title><rect x="517.1" y="1861" width="32.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="520.05" y="1871.5" >st..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1679.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.06%; 0.00%)</title><rect x="192.0" y="1845" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.03" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1253" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1263.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="654.0" y="1829" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="657.05" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="134.6" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="287.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (6 samples, 0.19%; -0.03%)</title><rect x="1105.6" y="1829" width="2.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1108.55" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; 0.00%)</title><rect x="56.2" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.10%; -0.06%)</title><rect x="339.2" y="1701" width="1.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="342.15" y="1711.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (2 samples, 0.06%; 0.00%)</title><rect x="1112.3" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.31" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::list_users_statement*, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="97.8" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="100.82" y="495.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.03%; 0.00%)</title><rect x="517.8" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="520.81" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="96.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.70" y="495.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;lister&gt;::shared_ptr_no_esft&lt;seastar::file, std::unordered_set&lt;seastar::directory_entry_type, seastar::enum_hash&lt;seastar::directory_entry_type&gt;, std::equal_to&lt;seastar::directory_entry_type&gt;, std::allocator&lt;seastar::directory_entry_type&gt; &gt; const, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="730.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.24" y="1919.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (140 samples, 4.45%; -0.22%)</title><rect x="580.5" y="1829" width="52.5" height="15.0" fill="rgb(123,123,255)" rx="2" ry="2" />
<text  x="583.48" y="1839.5" >memta..</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="629" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1551.5" ></text>
</g>
<g >
<title>__start_context (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="709" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1663.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1121.3" y="1605" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1124.32" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.13%; +0.03%)</title><rect x="619.1" y="1781" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="622.14" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; -0.10%)</title><rect x="615.0" y="1765" width="0.8" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="618.01" y="1775.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_built_views (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1807.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="447.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.03%; +0.03%)</title><rect x="833.1" y="1749" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="836.07" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.44" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="735.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; 0.00%)</title><rect x="1102.2" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.18" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="83.6" y="261" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="86.56" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="61.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.79" y="415.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (3 samples, 0.10%; 0.00%)</title><rect x="1111.9" y="1781" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.93" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="394.3" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="397.33" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (6 samples, 0.19%; +0.06%)</title><rect x="26.5" y="325" width="2.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="29.51" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; +0.03%)</title><rect x="66.7" y="245" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="69.67" y="255.5" ></text>
</g>
<g >
<title>database::find_schema (14 samples, 0.45%; +0.06%)</title><rect x="841.0" y="1813" width="5.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="843.95" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.60" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="61.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.79" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1711.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.06%)</title><rect x="173.3" y="1893" width="1.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="176.26" y="1903.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (8 samples, 0.25%; +0.03%)</title><rect x="108.7" y="1861" width="3.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="111.71" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.03%; +0.03%)</title><rect x="1189.2" y="2005" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1192.25" y="2015.5" ></text>
</g>
<g >
<title>utils::array_search_gt (6 samples, 0.19%; +0.19%)</title><rect x="645.8" y="1829" width="2.2" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="648.79" y="1839.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="59.9" y="245" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="62.92" y="255.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.03%)</title><rect x="712.6" y="1893" width="1.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="715.60" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="132.4" y="1653" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="135.35" y="1663.5" ></text>
</g>
<g >
<title>database::query (71 samples, 2.26%; +0.19%)</title><rect x="1006.1" y="1701" width="26.6" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1009.09" y="1711.5" >d..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (27 samples, 0.86%; 0.00%)</title><rect x="899.5" y="1797" width="10.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="902.50" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.67%; +0.13%)</title><rect x="996.7" y="1701" width="7.9" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="999.71" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="540.3" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="543.32" y="1823.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.03%; 0.00%)</title><rect x="192.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.40" y="1807.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="613" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="623.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1349" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1359.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.10%)</title><rect x="837.6" y="1781" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="840.58" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="982.1" y="1717" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="985.07" y="1727.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="821" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="831.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%; -0.13%)</title><rect x="1015.9" y="1653" width="1.8" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="1018.85" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.06%)</title><rect x="674.7" y="1909" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="677.69" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (7 samples, 0.22%; +0.03%)</title><rect x="95.9" y="533" width="2.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="98.95" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (4 samples, 0.13%; 0.00%)</title><rect x="53.5" y="293" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.54" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.06%)</title><rect x="858.6" y="1845" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="861.59" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; +0.03%)</title><rect x="21.6" y="341" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="24.63" y="351.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.73" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (3 samples, 0.10%; +0.10%)</title><rect x="891.2" y="1845" width="1.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="894.25" y="1855.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1807.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1935.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1871.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (125 samples, 3.98%; 0.00%)</title><rect x="800.8" y="1845" width="46.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="803.80" y="1855.5" >serv..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="964.4" y="1749" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="967.43" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1839.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (2 samples, 0.06%; 0.00%)</title><rect x="1156.6" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.60" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="106.1" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="109.08" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="120.0" y="1445" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="122.97" y="1455.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="622.1" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="625.14" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1471.5" ></text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.03%; +0.03%)</title><rect x="422.8" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="425.85" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; 0.00%)</title><rect x="133.1" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.10" y="1775.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.38%; 0.00%)</title><rect x="543.7" y="1829" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="546.70" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="351.5" ></text>
</g>
<g >
<title>perf_simple_que (3,144 samples, 100.00%; 0.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >perf_simple_que</text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.35" y="1679.5" ></text>
</g>
<g >
<title>__start_context (76 samples, 2.42%; 0.00%)</title><rect x="112.5" y="2021" width="28.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.46" y="2031.5" >__..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="97.1" y="517" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="100.07" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (599 samples, 19.05%; -0.06%)</title><rect x="883.7" y="1877" width="224.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="886.74" y="1887.5" >seastar::noncopyable_function..</text>
</g>
<g >
<title>service::storage_proxy::do_mutate (11 samples, 0.35%; 0.00%)</title><rect x="1119.8" y="1781" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.82" y="1791.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="141.4" y="2021" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="144.36" y="2031.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; 0.00%)</title><rect x="832.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="835.70" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.35" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.03%; +0.03%)</title><rect x="25.4" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="28.39" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.25%; 0.00%)</title><rect x="17.1" y="357" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.13" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="46.4" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="49.41" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (2 samples, 0.06%; 0.00%)</title><rect x="1158.1" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.10" y="1887.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1583.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (9 samples, 0.29%; 0.00%)</title><rect x="99.0" y="597" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="607.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (4 samples, 0.13%; -0.10%)</title><rect x="211.9" y="1877" width="1.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="214.92" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="139.9" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.86" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="106.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.08" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="60.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.67" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="536.2" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="539.20" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="255.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; -0.03%)</title><rect x="451.4" y="1829" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="454.37" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.79" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.10%; 0.00%)</title><rect x="30.6" y="341" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.64" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.06%; -0.03%)</title><rect x="977.2" y="1765" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="980.19" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="101" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1031.6" y="1669" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1034.62" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,674 samples, 85.05%; -0.06%)</title><rect x="155.2" y="1957" width="1003.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="158.25" y="1967.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="114.7" y="1605" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="117.71" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.23" y="1759.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%; +0.03%)</title><rect x="1056.0" y="1765" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1059.01" y="1775.5" ></text>
</g>
<g >
<title>row::append_cell (3 samples, 0.10%; 0.00%)</title><rect x="1113.8" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.81" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.18" y="207.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="62.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.92" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="20.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.88" y="319.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="565" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="575.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1679.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; +0.03%)</title><rect x="125.6" y="1685" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="128.60" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (4 samples, 0.13%; +0.03%)</title><rect x="848.5" y="1861" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="851.46" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="105.3" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="108.33" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1493" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1503.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1839.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (43 samples, 1.37%; +0.03%)</title><rect x="167.6" y="1925" width="16.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="170.63" y="1935.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (169 samples, 5.38%; 0.00%)</title><rect x="15.3" y="549" width="63.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.25" y="559.5" >cql3::..</text>
</g>
<g >
<title>reader_permit::impl::~impl (7 samples, 0.22%; 0.00%)</title><rect x="210.8" y="1893" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="213.80" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (31 samples, 0.99%; -0.13%)</title><rect x="898.0" y="1829" width="11.6" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="901.00" y="1839.5" ></text>
</g>
<g >
<title>db::system_keyspace::set_local_host_id (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; +0.03%)</title><rect x="61.0" y="421" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="64.04" y="431.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1 samples, 0.03%; +0.03%)</title><rect x="446.5" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="449.49" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.06%)</title><rect x="675.4" y="1909" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="678.44" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.35" y="1775.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (2 samples, 0.06%; 0.00%)</title><rect x="1092.4" y="1813" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1095.42" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="682.6" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.57" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="69.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.68" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; 0.00%)</title><rect x="114.3" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.34" y="1679.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.66" y="463.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="625.5" y="1797" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="628.52" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="581" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="591.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (181 samples, 5.76%; 0.00%)</title><rect x="13.8" y="677" width="67.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.75" y="687.5" >seastar..</text>
</g>
<g >
<title>reader_permit::mark_unused (26 samples, 0.83%; +0.10%)</title><rect x="213.4" y="1893" width="9.8" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="216.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.10%; -0.03%)</title><rect x="443.9" y="1765" width="1.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="446.87" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; 0.00%)</title><rect x="189.4" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.40" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.16%; 0.00%)</title><rect x="99.3" y="501" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.03%; 0.00%)</title><rect x="107.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.58" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="75.3" y="469" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="78.31" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.16%; 0.00%)</title><rect x="99.3" y="533" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="543.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.19" y="255.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="597" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="20.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.88" y="335.5" ></text>
</g>
<g >
<title>inet_pton4 (1 samples, 0.03%; +0.03%)</title><rect x="758.0" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="761.01" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (51 samples, 1.62%; 0.00%)</title><rect x="112.8" y="1781" width="19.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1791.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="379.7" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="382.69" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="70.4" y="325" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.43" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; 0.00%)</title><rect x="56.2" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.19%; -0.03%)</title><rect x="600.4" y="1813" width="2.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="603.38" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="579.4" y="1813" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="582.36" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.23" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1567.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%; +0.03%)</title><rect x="151.1" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="154.12" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (134 samples, 4.26%; -0.03%)</title><rect x="329.0" y="1733" width="50.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="332.02" y="1743.5" >parti..</text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="901.4" y="1749" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="904.38" y="1759.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="30.6" y="293" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="33.64" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="511.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.03%; 0.00%)</title><rect x="152.6" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.62" y="1967.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (7 samples, 0.22%; 0.00%)</title><rect x="88.4" y="501" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.44" y="511.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (7 samples, 0.22%; 0.00%)</title><rect x="85.1" y="421" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.06" y="431.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="136.9" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.86" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1829" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1839.5" >c..</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (20 samples, 0.64%; 0.00%)</title><rect x="104.2" y="1909" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.20" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="74.6" y="389" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="77.55" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="20.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.88" y="303.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; -0.03%)</title><rect x="380.4" y="1733" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="383.44" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="200.3" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="203.29" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (6 samples, 0.19%; 0.00%)</title><rect x="82.8" y="469" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; -0.03%)</title><rect x="1032.4" y="1685" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1035.37" y="1695.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="43.8" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.78" y="431.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.06%; +0.06%)</title><rect x="301.2" y="1749" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="304.25" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; +0.03%)</title><rect x="70.1" y="341" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="73.05" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="684.8" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="687.82" y="1919.5" ></text>
</g>
<g >
<title>dht::tri_compare (8 samples, 0.25%; -0.03%)</title><rect x="1078.2" y="1701" width="3.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1081.16" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="672.8" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="675.81" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.03%; +0.03%)</title><rect x="35.1" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="38.15" y="383.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.03%)</title><rect x="548.2" y="1845" width="1.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="551.21" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="136.1" y="1381" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="139.11" y="1391.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.03%; +0.03%)</title><rect x="1116.1" y="1781" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1119.06" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; +0.03%)</title><rect x="114.0" y="1669" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="116.96" y="1679.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (8 samples, 0.25%; +0.03%)</title><rect x="65.9" y="373" width="3.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="68.92" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_destroy_nodes (1 samples, 0.03%; 0.00%)</title><rect x="93.3" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.32" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (70 samples, 2.23%; 0.00%)</title><rect x="16.4" y="469" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.38" y="479.5" >a..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.16%; 0.00%)</title><rect x="99.3" y="517" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.13%; 0.00%)</title><rect x="53.5" y="309" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.54" y="319.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (6 samples, 0.19%; +0.06%)</title><rect x="1119.8" y="1669" width="2.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1122.82" y="1679.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (82 samples, 2.61%; -0.06%)</title><rect x="1004.6" y="1717" width="30.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1007.59" y="1727.5" >se..</text>
</g>
<g >
<title>sstables::mc::writer::consume (4 samples, 0.13%; 0.00%)</title><rect x="149.2" y="1973" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.24" y="1983.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (9 samples, 0.29%; 0.00%)</title><rect x="105.3" y="1845" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.33" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="767.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.03%; 0.00%)</title><rect x="28.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.39" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="287.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="61.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.42" y="399.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.03%; 0.00%)</title><rect x="105.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.33" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="123.7" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="729.5" y="1653" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="732.48" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_counters&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="1123.9" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1126.94" y="1791.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (2 samples, 0.06%; 0.00%)</title><rect x="93.3" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.32" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="687.4" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="690.45" y="1887.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="351.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1989" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1999.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.03%; +0.03%)</title><rect x="15.3" y="533" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="18.25" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.10%; +0.10%)</title><rect x="572.2" y="1797" width="1.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="575.23" y="1807.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (13 samples, 0.41%; -0.06%)</title><rect x="868.4" y="1909" width="4.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="871.35" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="19.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.38" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.13%; +0.10%)</title><rect x="219.8" y="1861" width="1.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="222.80" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="29.1" y="357" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="32.14" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%; 0.00%)</title><rect x="139.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.11" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="335.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1221" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1231.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="66.7" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.67" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (1 samples, 0.03%; +0.03%)</title><rect x="102.3" y="597" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="105.33" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (4 samples, 0.13%; +0.13%)</title><rect x="617.6" y="1781" width="1.5" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="620.64" y="1791.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="84.3" y="373" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="87.31" y="383.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (4 samples, 0.13%; +0.10%)</title><rect x="1094.3" y="1829" width="1.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1097.29" y="1839.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="246.1" y="1861" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="249.08" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_ptr (2 samples, 0.06%; 0.00%)</title><rect x="84.3" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="948.3" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="951.30" y="1775.5" ></text>
</g>
<g >
<title>cql3::attributes::get_timestamp (1 samples, 0.03%; +0.03%)</title><rect x="868.4" y="1813" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="871.35" y="1823.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.25%; -0.10%)</title><rect x="496.4" y="1813" width="3.0" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="499.41" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.10%; 0.00%)</title><rect x="1026.4" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.36" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.10%; +0.06%)</title><rect x="340.7" y="1717" width="1.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="343.66" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="616.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="619.14" y="1775.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (13 samples, 0.41%; -0.03%)</title><rect x="917.1" y="1813" width="4.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="920.14" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="175.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::complete (1 samples, 0.03%; 0.00%)</title><rect x="1157.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.72" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.10%)</title><rect x="923.9" y="1813" width="1.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="926.90" y="1823.5" ></text>
</g>
<g >
<title>do_cql_test (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="661" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="671.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; +0.03%)</title><rect x="20.1" y="357" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="23.13" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,250 samples, 39.76%; +0.03%)</title><rect x="195.8" y="1925" width="469.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="198.78" y="1935.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; +0.13%)</title><rect x="552.0" y="1845" width="3.0" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="554.96" y="1855.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="12.3" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="15.25" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_index_statement&gt;, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="77.2" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.18" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1845" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="28.8" y="357" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="31.77" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="11.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.50" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="138.0" y="1701" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="140.98" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (236 samples, 7.51%; 0.00%)</title><rect x="10.4" y="741" width="88.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="751.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="59.2" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.17" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.16%; +0.03%)</title><rect x="183.8" y="1925" width="1.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="186.77" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="447.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (186 samples, 5.92%; -0.16%)</title><rect x="783.9" y="1877" width="69.8" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="786.91" y="1887.5" >cql3::q..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="134.6" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.23" y="1487.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (269 samples, 8.56%; +0.03%)</title><rect x="549.3" y="1877" width="101.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="552.33" y="1887.5" >query::queri..</text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1541" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1551.5" >[unknown]</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (29 samples, 0.92%; -0.06%)</title><rect x="172.9" y="1909" width="10.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="175.89" y="1919.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; +0.03%)</title><rect x="1123.2" y="1653" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1126.19" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="148.5" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.49" y="1935.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="52.8" y="245" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="55.79" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1114.2" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1117.19" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 7.86%; 0.00%)</title><rect x="10.4" y="869" width="92.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="879.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.03%)</title><rect x="702.5" y="1877" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="705.46" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="109.5" y="1829" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="112.46" y="1839.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="1111.2" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1114.18" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1365" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1375.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="351.5" ></text>
</g>
<g >
<title>table::apply (19 samples, 0.60%; +0.06%)</title><rect x="1109.3" y="1813" width="7.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1112.31" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1797" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1807.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%; +0.03%)</title><rect x="1032.0" y="1685" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1034.99" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="62.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.54" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="42.7" y="309" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="45.65" y="319.5" ></text>
</g>
<g >
<title>free (8 samples, 0.25%; -0.10%)</title><rect x="442.0" y="1781" width="3.0" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="444.99" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (1 samples, 0.03%; 0.00%)</title><rect x="1122.1" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1125.07" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="415.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_stopIndex (1 samples, 0.03%; +0.03%)</title><rect x="128.6" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="131.60" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1439.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="319.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (1 samples, 0.03%; 0.00%)</title><rect x="189.4" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.40" y="1935.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="645" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="714.1" y="1893" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="717.10" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (374 samples, 11.90%; +0.03%)</title><rect x="266.7" y="1861" width="140.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="269.72" y="1871.5" >flat_mutation_rea..</text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.10%; -0.29%)</title><rect x="1171.2" y="2037" width="1.2" height="15.0" fill="rgb(98,98,255)" rx="2" ry="2" />
<text  x="1174.23" y="2047.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="74.6" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.55" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (6 samples, 0.19%; +0.13%)</title><rect x="716.0" y="1909" width="2.2" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="718.97" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="136.9" y="1509" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="139.86" y="1519.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;10ul, cql3::expr::bind_variable, cql3::expr::bind_variable, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="463.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (9 samples, 0.29%; +0.03%)</title><rect x="26.1" y="373" width="3.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="29.14" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; +0.03%)</title><rect x="99.0" y="581" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="101.95" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;10ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1663.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%; 0.00%)</title><rect x="1159.2" y="2053" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.22" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="133.9" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.85" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="61.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.42" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="287.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1077" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1087.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="45.3" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="48.28" y="431.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1125" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1135.5" >[unknown]</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="136.9" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.86" y="1551.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="527.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; +0.03%)</title><rect x="621.8" y="1813" width="1.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="624.77" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (7 samples, 0.22%; 0.00%)</title><rect x="88.4" y="517" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.44" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (8 samples, 0.25%; 0.00%)</title><rect x="85.1" y="485" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.06" y="495.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="46.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.41" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (36 samples, 1.15%; -0.29%)</title><rect x="1082.3" y="1845" width="13.5" height="15.0" fill="rgb(98,98,255)" rx="2" ry="2" />
<text  x="1085.28" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="627.8" y="1813" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="630.77" y="1823.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="105.0" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.96" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="68.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.55" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%; 0.00%)</title><rect x="791.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="794.41" y="1839.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.06%)</title><rect x="928.0" y="1813" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="931.03" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (3 samples, 0.10%; 0.00%)</title><rect x="127.5" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1711.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; 0.00%)</title><rect x="112.1" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.09" y="1951.5" ></text>
</g>
<g >
<title>schema_registry::get (5 samples, 0.16%; -0.10%)</title><rect x="965.2" y="1781" width="1.9" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="968.18" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="44.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.15" y="367.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1173" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1183.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="39.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.27" y="367.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="62.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.92" y="319.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="799.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.6" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="59.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.92" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; +0.03%)</title><rect x="12.6" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="15.63" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.7" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1359.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (6 samples, 0.19%; +0.10%)</title><rect x="648.0" y="1829" width="2.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="651.04" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="335.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.29%; +0.13%)</title><rect x="1089.0" y="1797" width="3.4" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="1092.04" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1397" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1407.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="66.7" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.67" y="335.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1445" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1455.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; -0.03%)</title><rect x="120.0" y="1525" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="122.97" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.61" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="549" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="559.5" ></text>
</g>
<g >
<title>row::~row (16 samples, 0.51%; -0.13%)</title><rect x="440.5" y="1813" width="6.0" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="443.49" y="1823.5" ></text>
</g>
<g >
<title>seastar::task_quota_aio_completion::complete_with (1 samples, 0.03%; 0.00%)</title><rect x="1126.6" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1129.57" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="52.8" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.92" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="11.9" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.88" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (144 samples, 4.58%; -0.03%)</title><rect x="983.6" y="1749" width="54.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="986.58" y="1759.5" >servi..</text>
</g>
<g >
<title>auth::get_permissions (55 samples, 1.75%; -0.22%)</title><rect x="816.9" y="1797" width="20.7" height="15.0" fill="rgb(123,123,255)" rx="2" ry="2" />
<text  x="819.93" y="1807.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.18" y="223.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="22.8" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.76" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%; -0.03%)</title><rect x="705.8" y="1909" width="1.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="708.84" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (6 samples, 0.19%; 0.00%)</title><rect x="52.8" y="357" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="447.5" ></text>
</g>
<g >
<title>row::compact_and_expire (30 samples, 0.95%; +0.10%)</title><rect x="500.9" y="1829" width="11.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="503.92" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="61.8" y="341" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="64.79" y="351.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.03%; +0.03%)</title><rect x="192.0" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="195.03" y="1823.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::rows (1 samples, 0.03%; 0.00%)</title><rect x="1115.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.31" y="1775.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::index (1 samples, 0.03%; +0.03%)</title><rect x="102.7" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="105.70" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="208.9" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="211.92" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="44.2" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.15" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_startIndex (1 samples, 0.03%; +0.03%)</title><rect x="25.0" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="28.01" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; 0.00%)</title><rect x="175.1" y="1893" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="178.14" y="1903.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; +0.03%)</title><rect x="757.6" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="760.63" y="1903.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="591.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (91 samples, 2.89%; -0.03%)</title><rect x="892.4" y="1845" width="34.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="895.37" y="1855.5" >cq..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="101.2" y="293" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="104.20" y="303.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="87.3" y="197" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="90.32" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="399.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1045" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1055.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlLexer::~CqlLexer (1 samples, 0.03%; 0.00%)</title><rect x="92.9" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.95" y="575.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (13 samples, 0.41%; +0.06%)</title><rect x="738.1" y="1909" width="4.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="741.12" y="1919.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.16%; +0.03%)</title><rect x="1126.9" y="1925" width="1.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1129.95" y="1935.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (23 samples, 0.73%; -0.22%)</title><rect x="636.8" y="1813" width="8.6" height="15.0" fill="rgb(123,123,255)" rx="2" ry="2" />
<text  x="639.78" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="399.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1775.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; -0.03%)</title><rect x="420.2" y="1845" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="423.22" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1855.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_local_host_id (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="10.4" y="325" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="13.38" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="807.2" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="810.18" y="1823.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; 0.00%)</title><rect x="62.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.92" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="139.1" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.11" y="1727.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (124 samples, 3.94%; 0.00%)</title><rect x="990.3" y="1733" width="46.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="993.33" y="1743.5" >serv..</text>
</g>
<g >
<title>mutation_reader_merger::close (58 samples, 1.84%; 0.00%)</title><rect x="519.3" y="1829" width="21.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="522.31" y="1839.5" >m..</text>
</g>
<g >
<title>service::client_state::has_access (4 samples, 0.13%; +0.06%)</title><rect x="109.8" y="1845" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="112.83" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="64.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.42" y="399.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1429" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1439.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1583.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="574.5" y="1797" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="577.48" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="714.5" y="1909" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="717.47" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (24 samples, 0.76%; +0.10%)</title><rect x="383.1" y="1765" width="9.0" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="386.07" y="1775.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_error (1 samples, 0.03%; +0.03%)</title><rect x="23.5" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="26.51" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1519.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="483.3" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="486.28" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="107.6" y="1685" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="110.58" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (3 samples, 0.10%; 0.00%)</title><rect x="93.3" y="565" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.32" y="575.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (31 samples, 0.99%; +0.03%)</title><rect x="609.0" y="1797" width="11.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="612.01" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.06%)</title><rect x="673.2" y="1909" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="676.19" y="1919.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.03%; +0.03%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1192.62" y="2063.5" ></text>
</g>
<g >
<title>checked_file_impl::close (1 samples, 0.03%; 0.00%)</title><rect x="729.9" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.86" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1983.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="44.9" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.90" y="447.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (1 samples, 0.03%; -0.03%)</title><rect x="1081.5" y="1749" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1084.53" y="1759.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.06%; +0.03%)</title><rect x="1119.1" y="1765" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1122.06" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::detach_service_level_statement*, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="78.3" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.31" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (7 samples, 0.22%; 0.00%)</title><rect x="1119.8" y="1749" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.82" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1679.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; +0.03%)</title><rect x="68.2" y="357" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="71.17" y="367.5" ></text>
</g>
<g >
<title>[unknown] (207 samples, 6.58%; 0.00%)</title><rect x="10.4" y="725" width="77.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="735.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="501" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="511.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.03%; +0.03%)</title><rect x="111.0" y="1797" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="113.96" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.8" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.85" y="1503.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="757.3" y="1909" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="760.26" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="415.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1115.7" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1118.69" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; +0.06%)</title><rect x="938.5" y="1797" width="2.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="941.54" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.16%)</title><rect x="1145.3" y="1909" width="0.4" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="1148.34" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.91" y="223.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; 0.00%)</title><rect x="1098.0" y="1845" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.05" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="1157.0" y="1861" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1159.97" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.60" y="1535.5" ></text>
</g>
<g >
<title>freeze (1 samples, 0.03%; 0.00%)</title><rect x="189.4" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.40" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; +0.16%)</title><rect x="1098.0" y="1829" width="3.0" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="1101.05" y="1839.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (50 samples, 1.59%; -0.10%)</title><rect x="602.6" y="1813" width="18.8" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="605.63" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (9 samples, 0.29%; 0.00%)</title><rect x="926.5" y="1845" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="929.53" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="869.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.48" y="1743.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="114.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.71" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1583.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; -0.03%)</title><rect x="870.2" y="1749" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="873.23" y="1759.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (50 samples, 1.59%; +0.03%)</title><rect x="1062.8" y="1749" width="18.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1065.77" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (2 samples, 0.06%; 0.00%)</title><rect x="93.3" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.32" y="559.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.03%; -0.03%)</title><rect x="484.0" y="1813" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="487.03" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.03%)</title><rect x="407.1" y="1861" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="410.09" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1637" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1647.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (9 samples, 0.29%; 0.00%)</title><rect x="122.2" y="1637" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.22" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.30" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="255.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="729.1" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.11" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="133.1" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.10" y="1759.5" ></text>
</g>
<g >
<title>create_partitions (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="597" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="607.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (2 samples, 0.06%; 0.00%)</title><rect x="1158.1" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.10" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.03%)</title><rect x="312.5" y="1701" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="315.51" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="21.3" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.26" y="303.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (51 samples, 1.62%; 0.00%)</title><rect x="112.8" y="1797" width="19.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="382.7" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="385.69" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (10 samples, 0.32%; 0.00%)</title><rect x="88.4" y="549" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.44" y="559.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (7 samples, 0.22%; +0.22%)</title><rect x="403.7" y="1829" width="2.6" height="15.0" fill="rgb(255,123,123)" rx="2" ry="2" />
<text  x="406.71" y="1839.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (13 samples, 0.41%; 0.00%)</title><rect x="1146.1" y="1909" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1149.09" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="114.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.71" y="1647.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (3 samples, 0.10%; +0.10%)</title><rect x="13.8" y="597" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="16.75" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="202.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="205.54" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; 0.00%)</title><rect x="381.9" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="384.94" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.10%; 0.00%)</title><rect x="123.7" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="74.9" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="77.93" y="383.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::operator== (1 samples, 0.03%; +0.03%)</title><rect x="13.0" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="16.00" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (8 samples, 0.25%; 0.00%)</title><rect x="70.1" y="373" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.05" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="95.2" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="98.20" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="52.8" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="597" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.35" y="1679.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::explode (1 samples, 0.03%; +0.03%)</title><rect x="189.4" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="192.40" y="1807.5" ></text>
</g>
<g >
<title>auth::resource::parent (5 samples, 0.16%; +0.06%)</title><rect x="813.2" y="1813" width="1.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="816.18" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.10%; +0.10%)</title><rect x="643.2" y="1781" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="646.16" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (2 samples, 0.06%; 0.00%)</title><rect x="99.3" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="463.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.41%; 0.00%)</title><rect x="971.6" y="1765" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="974.56" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.35%; -0.03%)</title><rect x="440.9" y="1797" width="4.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="443.87" y="1807.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.10%)</title><rect x="840.6" y="1813" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="843.58" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="128.2" y="1573" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="131.23" y="1583.5" ></text>
</g>
<g >
<title>unimplemented::warn (1 samples, 0.03%; +0.03%)</title><rect x="870.6" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="873.60" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="406.7" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="409.71" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.0" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.97" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.61" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (373 samples, 11.86%; -0.13%)</title><rect x="942.3" y="1813" width="140.0" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="945.29" y="1823.5" >service::storage_..</text>
</g>
<g >
<title>cql3::expr::expression::expression (11 samples, 0.35%; 0.00%)</title><rect x="69.7" y="389" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.68" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.72" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (16 samples, 0.51%; -0.06%)</title><rect x="440.5" y="1829" width="6.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="443.49" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.03%; +0.03%)</title><rect x="69.3" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="72.30" y="415.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1573" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1583.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; -0.03%)</title><rect x="126.3" y="1701" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="129.35" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.83" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1759.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.03%; +0.03%)</title><rect x="518.2" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="521.18" y="1839.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (2 samples, 0.06%; 0.00%)</title><rect x="296.7" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="299.74" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.13%; +0.06%)</title><rect x="18.6" y="261" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="21.63" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="54.3" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.29" y="255.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="378.9" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="381.94" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (91 samples, 2.89%; 0.00%)</title><rect x="42.7" y="485" width="34.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="495.5" >cq..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (3 samples, 0.10%; 0.00%)</title><rect x="114.0" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.96" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_index_statement*, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="77.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.18" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="69.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.68" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.25%; +0.03%)</title><rect x="1001.6" y="1685" width="3.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1004.59" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (602 samples, 19.15%; +0.10%)</title><rect x="882.6" y="1893" width="226.0" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="885.61" y="1903.5" >seastar::noncopyable_function..</text>
</g>
<g >
<title>database::~database (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="565" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::construct&lt;seastar::shared_ptr&lt;cql3::relation&gt;, seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.61" y="1743.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%; 0.00%)</title><rect x="105.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.33" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1035.4" y="1717" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1038.37" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1583.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="67.8" y="309" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="70.80" y="319.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1941" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1951.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="157.1" y="1941" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="160.12" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="303.5" ></text>
</g>
<g >
<title>seastar::file_desc::timerfd_settime (1 samples, 0.03%; +0.03%)</title><rect x="154.9" y="1957" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="157.87" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="127.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; 0.00%)</title><rect x="378.6" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="381.56" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.03%; 0.00%)</title><rect x="93.3" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.32" y="463.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1109" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1119.5" >[unknown]</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="699.8" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="702.83" y="1903.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.10%; +0.10%)</title><rect x="222.1" y="1845" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="225.05" y="1855.5" ></text>
</g>
<g >
<title>free (5 samples, 0.16%; +0.13%)</title><rect x="179.3" y="1861" width="1.8" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="182.27" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; +0.03%)</title><rect x="16.0" y="501" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="19.01" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="70.4" y="293" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.43" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.10%; 0.00%)</title><rect x="30.6" y="325" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.64" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1727.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (20 samples, 0.64%; +0.03%)</title><rect x="104.2" y="1893" width="7.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="107.20" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="1035.7" y="1717" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1038.74" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="61.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.42" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.61" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; 0.00%)</title><rect x="1121.3" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1124.32" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="633.4" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="636.40" y="1839.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (5 samples, 0.16%; +0.16%)</title><rect x="326.4" y="1717" width="1.9" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="329.39" y="1727.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (627 samples, 19.94%; +0.41%)</title><rect x="873.2" y="1909" width="235.4" height="15.0" fill="rgb(255,49,49)" rx="2" ry="2" />
<text  x="876.23" y="1919.5" >seastar::concrete_execution_sta..</text>
</g>
<g >
<title>checked_file_impl::list_directory (1 samples, 0.03%; 0.00%)</title><rect x="730.2" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.24" y="1887.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="1158.8" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.85" y="1967.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="251.7" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="254.70" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="687.1" y="1845" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="690.07" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1871.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (11 samples, 0.35%; 0.00%)</title><rect x="88.1" y="565" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::~allocator (1 samples, 0.03%; +0.03%)</title><rect x="96.7" y="469" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="99.70" y="479.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1861" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1871.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.13%)</title><rect x="625.5" y="1781" width="1.9" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="628.52" y="1791.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.03%; -0.19%)</title><rect x="380.8" y="1733" width="0.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="383.81" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1647.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (1 samples, 0.03%; +0.03%)</title><rect x="771.1" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="774.15" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="1121.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1124.69" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (13 samples, 0.41%; +0.06%)</title><rect x="121.5" y="1717" width="4.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="124.47" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="62.5" y="309" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="65.54" y="319.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.06%; +0.06%)</title><rect x="615.0" y="1749" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="618.01" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="136.5" y="1445" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="139.48" y="1455.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="86.6" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="89.56" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="67.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.80" y="351.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="837.6" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.58" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="55.8" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.79" y="447.5" ></text>
</g>
<g >
<title>db::system_keyspace::local (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1983.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.66" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.29" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.91" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="767.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (4 samples, 0.13%; 0.00%)</title><rect x="1116.4" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.44" y="1839.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.06%; 0.00%)</title><rect x="151.9" y="1989" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1999.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="223.2" y="1893" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="226.18" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; -0.10%)</title><rect x="601.9" y="1797" width="0.7" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="604.88" y="1807.5" ></text>
</g>
<g >
<title>create_partitions (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1941" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1951.5" >c..</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharPositionInLine (1 samples, 0.03%; +0.03%)</title><rect x="30.3" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="33.27" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.06" y="495.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%; +0.03%)</title><rect x="154.1" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="157.12" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1477" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1487.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="271.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%; +0.03%)</title><rect x="925.8" y="1829" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="928.78" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.22%; +0.13%)</title><rect x="707.0" y="1909" width="2.6" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="709.97" y="1919.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; +0.03%)</title><rect x="407.8" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="410.84" y="1871.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (62 samples, 1.97%; 0.00%)</title><rect x="518.2" y="1845" width="23.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="521.18" y="1855.5" >m..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="71.6" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.55" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (2 samples, 0.06%; +0.03%)</title><rect x="104.6" y="1861" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="107.58" y="1871.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="129.0" y="1509" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="131.98" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::truncate_statement*, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.2" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="101.20" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="123.3" y="1557" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="126.35" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.06%; +0.03%)</title><rect x="908.9" y="1781" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="911.89" y="1791.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::create_metadata_tables_if_missing (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1887.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="719.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="807.6" y="1829" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="810.55" y="1839.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%; 0.00%)</title><rect x="665.3" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.31" y="1919.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="1143.1" y="1909" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1146.09" y="1919.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="104.6" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.58" y="1887.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="112.1" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.09" y="1983.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; +0.03%)</title><rect x="11.9" y="405" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="14.88" y="415.5" ></text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (1 samples, 0.03%; 0.00%)</title><rect x="191.7" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; 0.00%)</title><rect x="1123.2" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1126.19" y="1695.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; 0.00%)</title><rect x="794.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="797.41" y="1823.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.7" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1871.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.44" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (22 samples, 0.70%; -0.25%)</title><rect x="214.9" y="1877" width="8.3" height="15.0" fill="rgb(111,111,255)" rx="2" ry="2" />
<text  x="217.92" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="84.3" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::ksName (1 samples, 0.03%; +0.03%)</title><rect x="152.2" y="1637" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="155.25" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1535.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="303.5" ></text>
</g>
<g >
<title>freeze (6 samples, 0.19%; 0.00%)</title><rect x="1119.8" y="1685" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.82" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (4 samples, 0.13%; +0.06%)</title><rect x="53.5" y="261" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="56.54" y="271.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.06%)</title><rect x="201.0" y="1909" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="204.04" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (2 samples, 0.06%; 0.00%)</title><rect x="84.3" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.10%; +0.03%)</title><rect x="149.6" y="1909" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="152.62" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="66.7" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.67" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.54" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="687.1" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="690.07" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="44.2" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.15" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="11.1" y="277" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="14.13" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="616.9" y="1765" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="619.89" y="1775.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="824.1" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="827.06" y="1775.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.10%; -0.06%)</title><rect x="469.4" y="1797" width="1.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="472.39" y="1807.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.16%)</title><rect x="397.3" y="1813" width="1.2" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="400.33" y="1823.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (5 samples, 0.16%; +0.03%)</title><rect x="520.8" y="1813" width="1.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="523.81" y="1823.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::close (1 samples, 0.03%; 0.00%)</title><rect x="729.9" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.86" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="677" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="687.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; +0.06%)</title><rect x="839.1" y="1829" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="842.08" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="72.3" y="213" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="75.30" y="223.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; 0.00%)</title><rect x="594.0" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="596.99" y="1823.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (2 samples, 0.06%; -0.10%)</title><rect x="483.7" y="1829" width="0.7" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="486.65" y="1839.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (8 samples, 0.25%; -0.13%)</title><rect x="1104.8" y="1845" width="3.0" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="1107.80" y="1855.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (235 samples, 7.47%; -0.06%)</title><rect x="774.9" y="1893" width="88.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="777.90" y="1903.5" >single_nod..</text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.7" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1839.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="112.1" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.09" y="1967.5" ></text>
</g>
<g >
<title>main (2,676 samples, 85.11%; 0.00%)</title><rect x="154.9" y="2037" width="1004.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.87" y="2047.5" >main</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (13 samples, 0.41%; +0.29%)</title><rect x="1146.1" y="1893" width="4.9" height="15.0" fill="rgb(255,98,98)" rx="2" ry="2" />
<text  x="1149.09" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="334.3" y="1701" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="337.27" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%; +0.03%)</title><rect x="31.0" y="293" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="34.02" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (9 samples, 0.29%; +0.29%)</title><rect x="31.8" y="373" width="3.3" height="15.0" fill="rgb(255,98,98)" rx="2" ry="2" />
<text  x="34.77" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="747.1" y="1909" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="750.12" y="1919.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.48%; +0.03%)</title><rect x="175.9" y="1893" width="5.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="178.89" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.72" y="1679.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="1153.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.59" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="88.1" y="533" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="91.07" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="383.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.03%; +0.03%)</title><rect x="729.9" y="1829" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="732.86" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,658 samples, 84.54%; 0.00%)</title><rect x="159.8" y="1941" width="997.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="162.75" y="1951.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.24" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="223.9" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="226.93" y="1903.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (1 samples, 0.03%; +0.03%)</title><rect x="762.1" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="765.14" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="95.2" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.20" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="136.1" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="382.3" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="385.32" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="97.8" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.82" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (7 samples, 0.22%; 0.00%)</title><rect x="117.7" y="1669" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.72" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.03%; +0.03%)</title><rect x="40.0" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="43.03" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="63.3" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="66.30" y="239.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; 0.00%)</title><rect x="45.7" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.66" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="70.4" y="277" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.43" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="58.8" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="61.79" y="399.5" ></text>
</g>
<g >
<title>do_cql_test (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="645" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.48" y="1695.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="713.7" y="1909" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="716.72" y="1919.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="549" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="129.0" y="1669" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="131.98" y="1679.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="132.7" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="135.73" y="1775.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1695.5" ></text>
</g>
<g >
<title>db::filter_for_query (2 samples, 0.06%; -0.03%)</title><rect x="1056.8" y="1765" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1059.76" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (2 samples, 0.06%; 0.00%)</title><rect x="1158.1" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.10" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_Uninitialized&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.95" y="367.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (8 samples, 0.25%; +0.25%)</title><rect x="985.8" y="1733" width="3.0" height="15.0" fill="rgb(255,111,111)" rx="2" ry="2" />
<text  x="988.83" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="59.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.92" y="303.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.19" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="406.3" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="409.34" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.45%; 0.00%)</title><rect x="141.7" y="2021" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.74" y="2031.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; +0.03%)</title><rect x="1059.0" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1062.01" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (3 samples, 0.10%; 0.00%)</title><rect x="114.0" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.96" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (9 samples, 0.29%; 0.00%)</title><rect x="105.3" y="1877" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.33" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (46 samples, 1.46%; 0.00%)</title><rect x="23.1" y="405" width="17.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.14" y="415.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_receivers (1 samples, 0.03%; +0.03%)</title><rect x="107.2" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="110.21" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="72.7" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.68" y="207.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; -0.03%)</title><rect x="702.5" y="1893" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="705.46" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_view_statement, std::default_delete&lt;cql3::statements::create_view_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="76.8" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="79.81" y="495.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 7.86%; 0.00%)</title><rect x="10.4" y="805" width="92.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="815.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="645.0" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="648.04" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (11 samples, 0.35%; 0.00%)</title><rect x="69.7" y="405" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.68" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="131.6" y="1717" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="134.60" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.82%; 0.00%)</title><rect x="10.4" y="773" width="92.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="783.5" >[unknown]</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.60" y="1519.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.06%; +0.03%)</title><rect x="862.0" y="1877" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="864.97" y="1887.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (8 samples, 0.25%; -0.06%)</title><rect x="926.9" y="1829" width="3.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="929.90" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="55.4" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="58.41" y="447.5" ></text>
</g>
<g >
<title>frozen_mutation::partition (1 samples, 0.03%; +0.03%)</title><rect x="1111.6" y="1781" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1114.56" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="661" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="671.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (6 samples, 0.19%; +0.03%)</title><rect x="868.7" y="1813" width="2.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="871.73" y="1823.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (11 samples, 0.35%; 0.00%)</title><rect x="127.5" y="1717" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.23" y="1503.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,676 samples, 85.11%; 0.00%)</title><rect x="154.9" y="1989" width="1004.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.87" y="1999.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="447.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1733" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1743.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (3 samples, 0.10%; -0.03%)</title><rect x="1122.4" y="1717" width="1.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1125.44" y="1727.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.03%; 0.00%)</title><rect x="189.4" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.40" y="1855.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;*, seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="94.1" y="549" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="97.07" y="559.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.18" y="191.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="95.2" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.20" y="543.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="704.0" y="1893" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="706.96" y="1903.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; +0.03%)</title><rect x="654.8" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="657.80" y="1871.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (9 samples, 0.29%; 0.00%)</title><rect x="117.7" y="1685" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.72" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="92.9" y="549" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="95.95" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.60" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.03%)</title><rect x="1033.1" y="1685" width="2.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1036.12" y="1695.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; -0.10%)</title><rect x="401.8" y="1813" width="0.8" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="404.83" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.06%; +0.06%)</title><rect x="746.4" y="1909" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="749.37" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (10 samples, 0.32%; 0.00%)</title><rect x="117.7" y="1717" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.72" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="335.5" ></text>
</g>
<g >
<title>dht::maximum_token (1 samples, 0.03%; +0.03%)</title><rect x="573.4" y="1781" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="576.35" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="76.4" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="79.43" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, std::function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1935.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%; -0.03%)</title><rect x="1121.3" y="1637" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1124.32" y="1647.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (2 samples, 0.06%; -0.06%)</title><rect x="1116.8" y="1797" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1119.81" y="1807.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="415.5" ></text>
</g>
<g >
<title>sstables::sstable::write_compression (1 samples, 0.03%; 0.00%)</title><rect x="152.6" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.62" y="1983.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="93.3" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.32" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (8 samples, 0.25%; -0.10%)</title><rect x="257.7" y="1877" width="3.0" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="260.71" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="431.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; 0.00%)</title><rect x="937.0" y="1829" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="940.04" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.89%; 0.00%)</title><rect x="10.4" y="917" width="93.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="927.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="99.3" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (169 samples, 5.38%; 0.00%)</title><rect x="15.3" y="565" width="63.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.25" y="575.5" >cql3::..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="838.7" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="841.70" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.23" y="1471.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="1153.6" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.59" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%; +0.03%)</title><rect x="315.5" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="318.51" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; 0.00%)</title><rect x="62.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.92" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="627.4" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="630.40" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mIDENT (1 samples, 0.03%; +0.03%)</title><rect x="39.7" y="389" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="42.65" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.45%; +0.10%)</title><rect x="1012.5" y="1669" width="5.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1015.47" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="671.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (62 samples, 1.97%; -0.03%)</title><rect x="1130.3" y="1925" width="23.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1133.32" y="1935.5" >s..</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (38 samples, 1.21%; -0.06%)</title><rect x="743.0" y="1925" width="14.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="746.00" y="1935.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="22.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.01" y="351.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.40%; 0.00%)</title><rect x="1172.7" y="2053" width="16.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.74" y="2063.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="825.6" y="1765" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="828.57" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (3 samples, 0.10%; +0.03%)</title><rect x="686.7" y="1893" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="689.70" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (2 samples, 0.06%; 0.00%)</title><rect x="84.3" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="195.4" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="198.41" y="1919.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (1 samples, 0.03%; 0.00%)</title><rect x="153.7" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.75" y="2047.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (174 samples, 5.53%; -0.13%)</title><rect x="315.9" y="1749" width="65.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="318.88" y="1759.5" >partiti..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.10%; 0.00%)</title><rect x="114.0" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.96" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="133.9" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.85" y="1679.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (7 samples, 0.22%; -0.03%)</title><rect x="1119.8" y="1733" width="2.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1122.82" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (9 samples, 0.29%; 0.00%)</title><rect x="105.3" y="1829" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.33" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (285 samples, 9.06%; +0.10%)</title><rect x="759.1" y="1925" width="107.0" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="762.13" y="1935.5" >seastar::inte..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="133.5" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.48" y="1743.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; 0.00%)</title><rect x="754.3" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="757.26" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1701" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1711.5" >[unknown]</text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="665.3" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.31" y="1903.5" ></text>
</g>
<g >
<title>cql3::functions::function_name::function_name (1 samples, 0.03%; +0.03%)</title><rect x="115.1" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="118.09" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; 0.00%)</title><rect x="557.2" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="560.21" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%; 0.00%)</title><rect x="28.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.39" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (9 samples, 0.29%; +0.13%)</title><rect x="35.5" y="373" width="3.4" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="38.52" y="383.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.03%; 0.00%)</title><rect x="1153.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.59" y="1935.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.10" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="431.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.25%; 0.00%)</title><rect x="17.1" y="341" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.13" y="351.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%; 0.00%)</title><rect x="192.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.40" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectStatement (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; +0.03%)</title><rect x="43.8" y="405" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="46.78" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.91" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="758.4" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.38" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="58.0" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="61.04" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.22%; 0.00%)</title><rect x="85.1" y="453" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.06" y="463.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="112.5" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.46" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 7.86%; 0.00%)</title><rect x="10.4" y="789" width="92.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="799.5" >[unknown]</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; +0.03%)</title><rect x="130.9" y="1685" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="133.85" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="133.5" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="136.48" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (181 samples, 5.76%; 0.00%)</title><rect x="13.8" y="661" width="67.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.75" y="671.5" >seastar..</text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="169.1" y="1909" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="172.13" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 7.86%; 0.00%)</title><rect x="10.4" y="821" width="92.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="831.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; 0.00%)</title><rect x="734.7" y="1909" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="737.74" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%; +0.03%)</title><rect x="929.9" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="932.90" y="1855.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="85.4" y="389" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.44" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.06%; 0.00%)</title><rect x="391.3" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="394.32" y="1759.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; 0.00%)</title><rect x="148.5" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.49" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (13 samples, 0.41%; +0.03%)</title><rect x="335.4" y="1717" width="4.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="338.40" y="1727.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (3 samples, 0.10%; 0.00%)</title><rect x="30.6" y="373" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.64" y="383.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="1119.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.44" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (6 samples, 0.19%; 0.00%)</title><rect x="82.8" y="453" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="118.5" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.47" y="1599.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (2 samples, 0.06%; +0.03%)</title><rect x="657.8" y="1877" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="660.80" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="70.8" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.80" y="255.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="48.7" y="213" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="51.66" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (4 samples, 0.13%; -0.10%)</title><rect x="283.6" y="1797" width="1.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="286.61" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.29%; +0.16%)</title><rect x="973.1" y="1733" width="3.3" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="976.07" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.10%)</title><rect x="1092.0" y="1781" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1095.04" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (19 samples, 0.60%; +0.06%)</title><rect x="529.4" y="1797" width="7.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="532.44" y="1807.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (29 samples, 0.92%; +0.03%)</title><rect x="898.8" y="1813" width="10.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="901.75" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; -0.03%)</title><rect x="113.6" y="1685" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="116.59" y="1695.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="1057.9" y="1765" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1060.89" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="940.8" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="943.79" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.89%; 0.00%)</title><rect x="10.4" y="885" width="93.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="895.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (270 samples, 8.59%; 0.00%)</title><rect x="10.4" y="2021" width="101.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="2031.5" >[unknown]</text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.35" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (6 samples, 0.19%; 0.00%)</title><rect x="52.8" y="389" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="714.8" y="1909" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="717.85" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.03%)</title><rect x="1144.2" y="1877" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1147.21" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="139.1" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.11" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="98.6" y="549" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="101.58" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.16%; 0.00%)</title><rect x="43.8" y="453" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.78" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; +0.10%)</title><rect x="679.9" y="1909" width="1.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="682.94" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="134.2" y="1653" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="137.23" y="1663.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.03%; 0.00%)</title><rect x="806.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="809.42" y="1839.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (4 samples, 0.13%; +0.10%)</title><rect x="871.7" y="1781" width="1.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="874.73" y="1791.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.03%; +0.03%)</title><rect x="565.1" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="568.10" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1909" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1919.5" >c..</text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1893" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1903.5" >[unknown]</text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (23 samples, 0.73%; 0.00%)</title><rect x="1022.2" y="1669" width="8.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1025.23" y="1679.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (3 samples, 0.10%; +0.10%)</title><rect x="770.0" y="1861" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="773.02" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="77.6" y="421" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="80.56" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; -0.06%)</title><rect x="413.8" y="1845" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="416.84" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="765.1" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="768.14" y="1919.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="753.9" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="756.88" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (166 samples, 5.28%; 0.00%)</title><rect x="16.4" y="501" width="62.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.38" y="511.5" >cql3_p..</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.8" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.85" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.03%; 0.00%)</title><rect x="1189.2" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.25" y="2047.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.29%; -0.19%)</title><rect x="856.0" y="1861" width="3.3" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="858.97" y="1871.5" ></text>
</g>
<g >
<title>table::make_reader (245 samples, 7.79%; 0.00%)</title><rect x="558.3" y="1845" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="561.34" y="1855.5" >table::mak..</text>
</g>
<g >
<title>service::storage_proxy::query (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.13%)</title><rect x="574.5" y="1781" width="2.2" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="577.48" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.83" y="447.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1663.5" ></text>
</g>
<g >
<title>tolower (2 samples, 0.06%; +0.06%)</title><rect x="47.5" y="421" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="50.53" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;10ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="53" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="63.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1663.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.10%)</title><rect x="207.8" y="1893" width="1.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="210.79" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.06%)</title><rect x="529.1" y="1781" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="532.06" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;10ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="68.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.55" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1551.5" ></text>
</g>
<g >
<title>create_partitions (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="629" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="639.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="1033.1" y="1701" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1036.12" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1615.5" ></text>
</g>
<g >
<title>seastar::reactor::syscall_pollfn::poll (1 samples, 0.03%; 0.00%)</title><rect x="1157.7" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.72" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="201.4" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="204.41" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.06%; -0.10%)</title><rect x="615.0" y="1781" width="0.8" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="618.01" y="1791.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (4 samples, 0.13%; -0.10%)</title><rect x="1141.2" y="1909" width="1.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1144.21" y="1919.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (14 samples, 0.45%; 0.00%)</title><rect x="1119.1" y="1813" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.06" y="1823.5" ></text>
</g>
<g >
<title>serialize_mutation_fragments (2 samples, 0.06%; 0.00%)</title><rect x="189.8" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="68.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.55" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="69.7" y="341" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="72.68" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="62.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.92" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.16%; 0.00%)</title><rect x="18.3" y="293" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.26" y="303.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; +0.03%)</title><rect x="46.0" y="453" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="49.03" y="463.5" ></text>
</g>
<g >
<title>cql3::untyped_result_set::untyped_result_set (1 samples, 0.03%; 0.00%)</title><rect x="682.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.19" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="189.8" y="1653" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="192.78" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (51 samples, 1.62%; 0.00%)</title><rect x="112.8" y="1765" width="19.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1775.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="62.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.92" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (15 samples, 0.48%; 0.00%)</title><rect x="16.8" y="405" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.76" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="71.2" y="149" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="74.18" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (72 samples, 2.29%; 0.00%)</title><rect x="48.3" y="469" width="27.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.28" y="479.5" >c..</text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="131.2" y="1653" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="134.23" y="1663.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.13%; +0.06%)</title><rect x="789.2" y="1829" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="792.16" y="1839.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (11 samples, 0.35%; -0.03%)</title><rect x="1024.5" y="1653" width="4.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1027.48" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.29" y="431.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.45%; 0.00%)</title><rect x="147.7" y="2037" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.74" y="2047.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.10" y="1727.5" ></text>
</g>
<g >
<title>cql3::cf_name::set_column_family (2 samples, 0.06%; 0.00%)</title><rect x="47.5" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.53" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="403.0" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="405.96" y="1823.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (8 samples, 0.25%; -0.10%)</title><rect x="919.0" y="1797" width="3.0" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="922.02" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="55.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.79" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (16 samples, 0.51%; 0.00%)</title><rect x="902.9" y="1765" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="905.88" y="1775.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1919.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (1 samples, 0.03%; 0.00%)</title><rect x="1157.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.35" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="239.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="1057.1" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1060.14" y="1759.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.06%; 0.00%)</title><rect x="536.6" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="539.57" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (76 samples, 2.42%; -0.13%)</title><rect x="350.4" y="1701" width="28.5" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="353.41" y="1711.5" >co..</text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="120.7" y="1541" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="123.72" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; 0.00%)</title><rect x="221.3" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.30" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1605" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1615.5" >[unknown]</text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.7" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="965" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="975.5" >[unknown]</text>
</g>
<g >
<title>query_result_builder::consume (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.23" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1557" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1567.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="501" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1631.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (4 samples, 0.13%; 0.00%)</title><rect x="189.8" y="1893" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="642.8" y="1781" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="645.79" y="1791.5" ></text>
</g>
<g >
<title>database::find_column_family (6 samples, 0.19%; -0.03%)</title><rect x="1047.4" y="1765" width="2.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1050.38" y="1775.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (1 samples, 0.03%; 0.00%)</title><rect x="1126.6" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1129.57" y="1935.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="645" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="655.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1791.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_890c8f4026fb5657cc774dcb869d5487d413f0d3] (1 samples, 0.03%; +0.03%)</title><rect x="244.2" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="247.20" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="67.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.05" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="1035.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1037.99" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="702.1" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="705.09" y="1871.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="980.9" y="1749" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="983.95" y="1759.5" ></text>
</g>
<g >
<title>streamed_mutation_freezer::consume_end_of_stream (2 samples, 0.06%; 0.00%)</title><rect x="189.8" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1711.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_890c8f4026fb5657cc774dcb869d5487d413f0d3] (1 samples, 0.03%; +0.03%)</title><rect x="360.2" y="1685" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="363.17" y="1695.5" ></text>
</g>
<g >
<title>database::has_keyspace (4 samples, 0.13%; -0.19%)</title><rect x="846.2" y="1813" width="1.5" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="849.21" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="56.2" y="197" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="59.16" y="207.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="68.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.55" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.06%)</title><rect x="1145.7" y="1909" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1148.71" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (20 samples, 0.64%; +0.19%)</title><rect x="491.9" y="1829" width="7.5" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="494.91" y="1839.5" ></text>
</g>
<g >
<title>create_partitions (21 samples, 0.67%; 0.00%)</title><rect x="103.8" y="1925" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.83" y="1935.5" ></text>
</g>
<g >
<title>free (4 samples, 0.13%; +0.03%)</title><rect x="445.0" y="1797" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="447.99" y="1807.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.03%)</title><rect x="928.4" y="1813" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="931.40" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (65 samples, 2.07%; 0.00%)</title><rect x="50.9" y="453" width="24.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="463.5" >c..</text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (157 samples, 4.99%; -0.03%)</title><rect x="978.7" y="1765" width="58.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="981.70" y="1775.5" >servic..</text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (21 samples, 0.67%; 0.00%)</title><rect x="103.8" y="1989" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.83" y="1999.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.41%; -0.13%)</title><rect x="971.6" y="1749" width="4.8" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="974.56" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (6 samples, 0.19%; -0.10%)</title><rect x="781.3" y="1877" width="2.2" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="784.28" y="1887.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%; 0.00%)</title><rect x="52.8" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (376 samples, 11.96%; 0.00%)</title><rect x="941.2" y="1829" width="141.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="944.16" y="1839.5" >service::storage_..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="1100.3" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.30" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; +0.03%)</title><rect x="871.4" y="1733" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="874.35" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.06%; 0.00%)</title><rect x="31.0" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.02" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.72" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="76.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.43" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.61" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="136.9" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.86" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="949.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="952.42" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; 0.00%)</title><rect x="397.7" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.70" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (46 samples, 1.46%; 0.00%)</title><rect x="23.1" y="421" width="17.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.14" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (1 samples, 0.03%; 0.00%)</title><rect x="91.8" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.82" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (3 samples, 0.10%; 0.00%)</title><rect x="686.7" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.70" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="76.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.43" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.10%)</title><rect x="616.1" y="1749" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="619.14" y="1759.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%; +0.10%)</title><rect x="192.8" y="1925" width="3.0" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="195.78" y="1935.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="521.6" y="1797" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="524.56" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="677" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.60" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (3 samples, 0.10%; 0.00%)</title><rect x="101.2" y="517" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.61" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (21 samples, 0.67%; 0.00%)</title><rect x="103.8" y="1973" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.83" y="1983.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; 0.00%)</title><rect x="1089.0" y="1813" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.04" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="78.3" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.31" y="479.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="2005" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="2015.5" >[unknown]</text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="45.7" y="421" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="48.66" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="348.5" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="351.54" y="1711.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="94.4" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="97.45" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="399.2" y="1797" width="2.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="402.20" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (23 samples, 0.73%; -0.06%)</title><rect x="709.6" y="1925" width="8.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="712.59" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.72" y="1695.5" ></text>
</g>
<g >
<title>mutation_querier::consume (80 samples, 2.54%; -0.19%)</title><rect x="452.9" y="1813" width="30.0" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="455.88" y="1823.5" >mu..</text>
</g>
<g >
<title>row::~row (2 samples, 0.06%; -0.06%)</title><rect x="392.8" y="1765" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="395.82" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="109.5" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.46" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="656.3" y="1877" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="659.30" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="415.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1061" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1071.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.95" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.06%)</title><rect x="181.1" y="1861" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="184.15" y="1871.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (3 samples, 0.10%; 0.00%)</title><rect x="149.6" y="1957" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.62" y="1967.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="495.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1525" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1535.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="86.6" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.56" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1423.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit_item (1 samples, 0.03%; 0.00%)</title><rect x="729.9" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.86" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%; +0.03%)</title><rect x="763.6" y="1877" width="1.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="766.64" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1647.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.03%; 0.00%)</title><rect x="1121.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1124.69" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; +0.03%)</title><rect x="50.5" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="53.53" y="415.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="869" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="879.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="527.5" ></text>
</g>
<g >
<title>[unknown] (351 samples, 11.16%; 0.00%)</title><rect x="10.0" y="2037" width="131.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" >[unknown]</text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (8 samples, 0.25%; +0.22%)</title><rect x="248.7" y="1861" width="3.0" height="15.0" fill="rgb(255,123,123)" rx="2" ry="2" />
<text  x="251.70" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.10%; +0.10%)</title><rect x="218.7" y="1861" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="221.68" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (7 samples, 0.22%; +0.03%)</title><rect x="123.0" y="1589" width="2.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="125.97" y="1599.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (2 samples, 0.06%; +0.03%)</title><rect x="91.1" y="501" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="94.07" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="431.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="394.7" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="397.70" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; 0.00%)</title><rect x="189.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.40" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.0" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.97" y="1519.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="621.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="624.39" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="85.8" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; -0.03%)</title><rect x="136.9" y="1525" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="139.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (21 samples, 0.67%; -0.10%)</title><rect x="503.5" y="1797" width="7.9" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="506.54" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="517" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="527.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1381" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1391.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.35" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.83" y="415.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="933" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; 0.00%)</title><rect x="19.8" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.76" y="255.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; -0.03%)</title><rect x="136.1" y="1717" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="139.11" y="1727.5" ></text>
</g>
<g >
<title>siglongjmp@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="103.8" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="106.83" y="1903.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="123.7" y="1557" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.83" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.7" y="1381" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1391.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1983.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="67.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.05" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; 0.00%)</title><rect x="607.9" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="610.88" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (67 samples, 2.13%; 0.00%)</title><rect x="16.8" y="437" width="25.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.76" y="447.5" >a..</text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="101.6" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (2 samples, 0.06%; +0.06%)</title><rect x="338.4" y="1701" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="341.40" y="1711.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="640.5" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="643.53" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="415.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.79" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="224.3" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="227.31" y="1903.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_or_view_to_schema_mutation (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.03%; -0.03%)</title><rect x="1189.2" y="2053" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1192.25" y="2063.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; 0.00%)</title><rect x="28.4" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.39" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.03%; +0.03%)</title><rect x="151.9" y="1749" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="154.87" y="1759.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (33 samples, 1.05%; +0.41%)</title><rect x="285.1" y="1797" width="12.4" height="15.0" fill="rgb(255,49,49)" rx="2" ry="2" />
<text  x="288.11" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="47.2" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.16" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="91.4" y="469" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="94.44" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="84.7" y="357" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="87.69" y="367.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="39.3" y="341" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="42.27" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.23" y="1679.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="303.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%; -0.06%)</title><rect x="1102.9" y="1845" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1105.93" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.16%; 0.00%)</title><rect x="43.8" y="469" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.78" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (3 samples, 0.10%; +0.03%)</title><rect x="62.2" y="421" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="65.17" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.16%; +0.03%)</title><rect x="736.2" y="1909" width="1.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="739.24" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%; +0.06%)</title><rect x="1030.9" y="1669" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1033.87" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="20.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.88" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="403.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="406.33" y="1823.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1919.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.23" y="1455.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (243 samples, 7.73%; +0.13%)</title><rect x="423.2" y="1845" width="91.2" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="426.23" y="1855.5" >seastar::d..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (31 samples, 0.99%; +0.03%)</title><rect x="731.4" y="1925" width="11.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="734.36" y="1935.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (13 samples, 0.41%; 0.00%)</title><rect x="868.4" y="1893" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.35" y="1903.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="936.3" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="939.28" y="1839.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="704.3" y="1909" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="707.34" y="1919.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; 0.00%)</title><rect x="743.7" y="1909" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.75" y="1919.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="151.1" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.12" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 7.86%; 0.00%)</title><rect x="10.4" y="853" width="92.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="863.5" >[unknown]</text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="431.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1413" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1423.5" >[unknown]</text>
</g>
<g >
<title>logalloc::region_impl::~region_impl (1 samples, 0.03%; +0.03%)</title><rect x="731.0" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="733.99" y="1775.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (11 samples, 0.35%; -0.03%)</title><rect x="122.2" y="1701" width="4.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="125.22" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (2 samples, 0.06%; 0.00%)</title><rect x="101.6" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="119.2" y="1397" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="122.22" y="1407.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="606.0" y="1781" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.01" y="1791.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="49.0" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1423.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1967.5" ></text>
</g>
<g >
<title>sstables::mc::writer::drain_tombstones (1 samples, 0.03%; 0.00%)</title><rect x="149.2" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.24" y="1967.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%; +0.03%)</title><rect x="546.7" y="1813" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="549.70" y="1823.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="189.0" y="1909" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="192.03" y="1919.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1855.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%; 0.00%)</title><rect x="1032.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.74" y="1711.5" ></text>
</g>
<g >
<title>generate_legacy_id (1 samples, 0.03%; +0.03%)</title><rect x="141.0" y="1669" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="143.99" y="1679.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (4 samples, 0.13%; 0.00%)</title><rect x="147.7" y="1989" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.74" y="1999.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.30" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="639.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%; +0.03%)</title><rect x="645.4" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="648.41" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="113.2" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.21" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%; +0.03%)</title><rect x="19.8" y="213" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="22.76" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%; 0.00%)</title><rect x="1054.1" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1057.13" y="1759.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="725.0" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.98" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (9 samples, 0.29%; -0.03%)</title><rect x="298.6" y="1781" width="3.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="301.62" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.06%; +0.03%)</title><rect x="1036.9" y="1733" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1039.87" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.38" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.2" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.22" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="351.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="12.3" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.25" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="147.4" y="2021" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.37" y="2031.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (27 samples, 0.86%; -0.25%)</title><rect x="502.0" y="1813" width="10.2" height="15.0" fill="rgb(111,111,255)" rx="2" ry="2" />
<text  x="505.04" y="1823.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="41.2" y="405" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="44.15" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="239.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::start (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.03%)</title><rect x="1125.8" y="1925" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1128.82" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="982.8" y="1749" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="985.82" y="1759.5" ></text>
</g>
<g >
<title>[[vdso]] (23 samples, 0.73%; +0.10%)</title><rect x="1162.6" y="2037" width="8.6" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1165.60" y="2047.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="91.8" y="501" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="94.82" y="511.5" ></text>
</g>
<g >
<title>utils::chunked_vector&lt;partition, 131072ul&gt;::do_reserve_for_push_back (1 samples, 0.03%; +0.03%)</title><rect x="190.5" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="193.53" y="1711.5" ></text>
</g>
<g >
<title>database::find_schema (11 samples, 0.35%; +0.13%)</title><rect x="796.7" y="1845" width="4.1" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="799.67" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="22.0" y="309" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="25.01" y="319.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; +0.06%)</title><rect x="253.6" y="1877" width="3.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="256.58" y="1887.5" ></text>
</g>
<g >
<title>abstract_type::is_native (1 samples, 0.03%; +0.03%)</title><rect x="90.7" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="93.69" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="138.4" y="1589" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="141.36" y="1599.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="148.5" y="1941" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.49" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.03%; 0.00%)</title><rect x="19.8" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.76" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; +0.03%)</title><rect x="43.0" y="469" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="46.03" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="94.8" y="533" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="97.82" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="693" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="703.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="134.6" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1775.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="677.3" y="1909" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="680.32" y="1919.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1839.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (1 samples, 0.03%; +0.03%)</title><rect x="139.5" y="1637" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="142.48" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.03%; 0.00%)</title><rect x="869.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.48" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.45%; 0.00%)</title><rect x="147.7" y="2005" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.74" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.30" y="255.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="762.5" y="1909" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="765.51" y="1919.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (200 samples, 6.36%; +0.03%)</title><rect x="308.0" y="1765" width="75.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="311.00" y="1775.5" >partitio..</text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (38 samples, 1.21%; 0.00%)</title><rect x="1017.7" y="1685" width="14.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1020.73" y="1695.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.03%; 0.00%)</title><rect x="491.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="494.53" y="1839.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; 0.00%)</title><rect x="869.9" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.85" y="1759.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1823.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1893" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1903.5" >c..</text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; 0.00%)</title><rect x="990.0" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="992.96" y="1743.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.03%; 0.00%)</title><rect x="46.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.78" y="463.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_890c8f4026fb5657cc774dcb869d5487d413f0d3] (1 samples, 0.03%; +0.03%)</title><rect x="905.5" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="908.51" y="1743.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; +0.03%)</title><rect x="927.3" y="1813" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="930.28" y="1823.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="671.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (70 samples, 2.23%; 0.00%)</title><rect x="16.4" y="453" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.38" y="463.5" >a..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (40 samples, 1.27%; 0.00%)</title><rect x="24.6" y="389" width="15.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.64" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (360 samples, 11.45%; -0.10%)</title><rect x="268.6" y="1829" width="135.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="271.59" y="1839.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%; +0.03%)</title><rect x="482.9" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="485.90" y="1823.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="120.3" y="1669" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="123.34" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="136.1" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="271.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="743.4" y="1909" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="746.37" y="1919.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="61.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.79" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="890.5" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="893.50" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_startIndex (1 samples, 0.03%; +0.03%)</title><rect x="100.1" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="103.08" y="431.5" ></text>
</g>
<g >
<title>schema_registry::learn (3 samples, 0.10%; 0.00%)</title><rect x="191.7" y="1893" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="66.7" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.67" y="303.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (33 samples, 1.05%; -0.54%)</title><rect x="470.5" y="1797" width="12.4" height="15.0" fill="rgb(0,0,255)" rx="2" ry="2" />
<text  x="473.52" y="1807.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.03%; -0.03%)</title><rect x="1112.3" y="1749" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1115.31" y="1759.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (26 samples, 0.83%; +0.06%)</title><rect x="747.5" y="1909" width="9.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="750.50" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="351.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1189" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1199.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="123.7" y="1461" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1471.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="56.2" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="431.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="1121.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1124.69" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.03%; 0.00%)</title><rect x="757.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="760.63" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="138.0" y="1589" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="140.98" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="191.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (261 samples, 8.30%; +0.06%)</title><rect x="765.5" y="1909" width="98.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="768.52" y="1919.5" >single_node..</text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="72.7" y="133" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="75.68" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="64.4" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="67.42" y="383.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="949" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="959.5" >[unknown]</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="137.6" y="1621" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="140.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; 0.00%)</title><rect x="136.1" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="83.2" y="277" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="86.19" y="287.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1589" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1599.5" >[unknown]</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="191.7" y="1781" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="194.65" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1093" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1103.5" >[unknown]</text>
</g>
<g >
<title>database::apply_in_memory (20 samples, 0.64%; 0.00%)</title><rect x="1108.9" y="1829" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.93" y="1839.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="131.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.23" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; +0.03%)</title><rect x="1017.4" y="1621" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1020.35" y="1631.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="901.4" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.38" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="133.9" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.85" y="1711.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="1156.6" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1159.60" y="1871.5" ></text>
</g>
<g >
<title>query::querier_base::close (2 samples, 0.06%; 0.00%)</title><rect x="1156.6" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.60" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.03%; -0.10%)</title><rect x="1027.5" y="1637" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1030.49" y="1647.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="806.8" y="1829" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="809.80" y="1839.5" ></text>
</g>
<g >
<title>query_result_builder::consume (82 samples, 2.61%; 0.00%)</title><rect x="452.9" y="1829" width="30.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="455.88" y="1839.5" >qu..</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="123.7" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.84" y="1551.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.03%; 0.00%)</title><rect x="91.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.44" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; -0.13%)</title><rect x="381.2" y="1749" width="0.7" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="384.19" y="1759.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; +0.03%)</title><rect x="111.3" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="114.34" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%; +0.03%)</title><rect x="225.8" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="228.81" y="1903.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%; +0.03%)</title><rect x="869.9" y="1717" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="872.85" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="22.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.01" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="112.1" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.09" y="1999.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.06%)</title><rect x="726.1" y="1909" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="729.11" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.06%)</title><rect x="248.0" y="1829" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="250.95" y="1839.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="616.9" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="619.89" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="63.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.30" y="319.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (2 samples, 0.06%; +0.06%)</title><rect x="257.0" y="1877" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="259.96" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="607.5" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="610.51" y="1807.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (14 samples, 0.45%; 0.00%)</title><rect x="1119.1" y="1797" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.06" y="1807.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.54%; +0.13%)</title><rect x="408.2" y="1861" width="6.4" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="411.21" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.6" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.59" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.03%; +0.03%)</title><rect x="24.6" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="27.64" y="383.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.13%; +0.13%)</title><rect x="854.5" y="1861" width="1.5" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="857.47" y="1871.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="87.7" y="453" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="90.69" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="82.1" y="453" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="85.06" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.13%; -0.03%)</title><rect x="640.9" y="1797" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="643.91" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="49.0" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.06%; 0.00%)</title><rect x="73.1" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.05" y="383.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="112.1" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.09" y="2015.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (9 samples, 0.29%; 0.00%)</title><rect x="767.8" y="1877" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="770.77" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.00" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="576.7" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="579.73" y="1807.5" ></text>
</g>
<g >
<title>std::locale::operator= (1 samples, 0.03%; +0.03%)</title><rect x="154.5" y="2037" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="157.50" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="102.0" y="341" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="104.95" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (46 samples, 1.46%; 0.00%)</title><rect x="58.0" y="437" width="17.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.04" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.10%; 0.00%)</title><rect x="43.8" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.78" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="136.1" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1759.5" ></text>
</g>
<g >
<title>memtable::~memtable (1 samples, 0.03%; 0.00%)</title><rect x="731.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.99" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="600.0" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="603.00" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (2 samples, 0.06%; +0.06%)</title><rect x="393.6" y="1765" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="396.58" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1877" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1887.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.22" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.10%; 0.00%)</title><rect x="30.6" y="357" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.64" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.06%)</title><rect x="259.6" y="1845" width="1.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="262.59" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.10%; 0.00%)</title><rect x="129.4" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1925" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1935.5" >[unknown]</text>
</g>
<g >
<title>seastar::file::close (1 samples, 0.03%; 0.00%)</title><rect x="729.9" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.86" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; -0.10%)</title><rect x="870.2" y="1733" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="873.23" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1695.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="62.9" y="277" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="65.92" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; +0.03%)</title><rect x="44.9" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="47.90" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.83" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="209.3" y="1893" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="212.29" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="78.3" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.31" y="463.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="535.4" y="1765" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="538.45" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="83.9" y="37" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="86.94" y="47.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="255.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (8 samples, 0.25%; 0.00%)</title><rect x="70.1" y="357" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.05" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.7" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (4 samples, 0.13%; 0.00%)</title><rect x="18.6" y="277" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.63" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.19%; 0.00%)</title><rect x="138.0" y="1749" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="44.2" y="277" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="47.15" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.22%; +0.13%)</title><rect x="825.9" y="1765" width="2.7" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="828.94" y="1775.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; +0.03%)</title><rect x="922.0" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="925.02" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (29 samples, 0.92%; 0.00%)</title><rect x="88.1" y="613" width="10.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.07" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; +0.06%)</title><rect x="124.8" y="1477" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="127.85" y="1487.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="71.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.93" y="335.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="997" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1007.5" >[unknown]</text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="73.4" y="325" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="76.43" y="335.5" ></text>
</g>
<g >
<title>memtable::evict_entry (1 samples, 0.03%; 0.00%)</title><rect x="112.5" y="1973" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.46" y="1983.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.30" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.10%; +0.06%)</title><rect x="681.1" y="1909" width="1.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="684.07" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="836.5" y="1781" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="839.45" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="543.3" y="1829" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="546.33" y="1839.5" ></text>
</g>
<g >
<title>table::set_hit_rate (3 samples, 0.10%; -0.13%)</title><rect x="756.1" y="1893" width="1.2" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="759.13" y="1903.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (4 samples, 0.13%; -0.03%)</title><rect x="869.1" y="1781" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="872.10" y="1791.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (27 samples, 0.86%; 0.00%)</title><rect x="786.5" y="1861" width="10.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="789.53" y="1871.5" ></text>
</g>
<g >
<title>database::parse_system_tables (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="21.6" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.63" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.19%; 0.00%)</title><rect x="118.1" y="1637" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.09" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.98" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="101.2" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.20" y="447.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (3 samples, 0.10%; 0.00%)</title><rect x="149.6" y="1925" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.62" y="1935.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (14 samples, 0.45%; 0.00%)</title><rect x="141.7" y="2037" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.74" y="2047.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (5 samples, 0.16%; +0.06%)</title><rect x="994.8" y="1717" width="1.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="997.83" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="11.5" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="14.50" y="415.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%; -0.03%)</title><rect x="469.0" y="1797" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="472.01" y="1807.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (7 samples, 0.22%; +0.03%)</title><rect x="863.5" y="1909" width="2.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="866.47" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.36" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.16%; 0.00%)</title><rect x="123.7" y="1541" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1551.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="342.9" y="1701" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="345.91" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.23" y="1615.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.38%; -0.03%)</title><rect x="944.5" y="1797" width="4.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="947.54" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_role_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="77.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.93" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.66" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; +0.03%)</title><rect x="127.8" y="1621" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="130.85" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (33 samples, 1.05%; +0.25%)</title><rect x="909.6" y="1829" width="12.4" height="15.0" fill="rgb(255,111,111)" rx="2" ry="2" />
<text  x="912.64" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="539.6" y="1813" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="542.57" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="319.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (13 samples, 0.41%; +0.10%)</title><rect x="791.8" y="1829" width="4.9" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="794.79" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1759.5" ></text>
</g>
<g >
<title>create_partitions (175 samples, 5.57%; 0.00%)</title><rect x="13.8" y="613" width="65.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.75" y="623.5" >create_..</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1 samples, 0.03%; +0.03%)</title><rect x="978.3" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="981.32" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="13.4" y="149" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="16.38" y="159.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1695.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (20 samples, 0.64%; -0.06%)</title><rect x="1073.7" y="1717" width="7.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1076.65" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="693" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="703.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="616.5" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="619.51" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1317" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1327.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1158.8" y="1941" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1161.85" y="1951.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (18 samples, 0.57%; +0.03%)</title><rect x="244.9" y="1877" width="6.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="247.95" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.06%; 0.00%)</title><rect x="99.3" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="191.7" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%; +0.06%)</title><rect x="513.7" y="1829" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="516.68" y="1839.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="575.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (3 samples, 0.10%; 0.00%)</title><rect x="40.8" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.78" y="431.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.03%; +0.03%)</title><rect x="55.0" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="58.04" y="447.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.03%; 0.00%)</title><rect x="1158.8" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.85" y="1983.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="94.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="447.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (13 samples, 0.41%; -0.03%)</title><rect x="868.4" y="1829" width="4.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="871.35" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1845" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1855.5" >[unknown]</text>
</g>
<g >
<title>service::shared_mutation::apply_locally (2 samples, 0.06%; +0.03%)</title><rect x="1122.8" y="1701" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1125.82" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.13%)</title><rect x="633.0" y="1813" width="0.4" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="636.03" y="1823.5" ></text>
</g>
<g >
<title>memtable::apply (17 samples, 0.54%; +0.06%)</title><rect x="1110.1" y="1797" width="6.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1113.06" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="59.2" y="405" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.17" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (21 samples, 0.67%; 0.00%)</title><rect x="103.8" y="1957" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.83" y="1967.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (13 samples, 0.41%; +0.03%)</title><rect x="766.6" y="1893" width="4.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="769.64" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="97.4" y="517" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="100.45" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1121.7" y="1557" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1124.69" y="1567.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.03%; -0.03%)</title><rect x="1123.2" y="1669" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1126.19" y="1679.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_890c8f4026fb5657cc774dcb869d5487d413f0d3] (1 samples, 0.03%; +0.03%)</title><rect x="127.5" y="1685" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="130.47" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%; +0.03%)</title><rect x="685.2" y="1909" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="688.20" y="1919.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (6 samples, 0.19%; +0.03%)</title><rect x="88.4" y="469" width="2.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="91.44" y="479.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; 0.00%)</title><rect x="1112.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.31" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (11 samples, 0.35%; 0.00%)</title><rect x="94.4" y="549" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (2 samples, 0.06%; 0.00%)</title><rect x="148.5" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.49" y="1919.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.13%)</title><rect x="677.7" y="1909" width="1.5" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="680.69" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (4 samples, 0.13%; +0.03%)</title><rect x="613.5" y="1781" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="616.51" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.2" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.22" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="119.6" y="1557" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="122.59" y="1567.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (119 samples, 3.78%; -0.13%)</title><rect x="1037.6" y="1781" width="44.7" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="1040.62" y="1791.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;1ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.7" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1343.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; +0.03%)</title><rect x="57.3" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="60.29" y="415.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.89%; 0.00%)</title><rect x="10.4" y="933" width="93.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="943.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="66.3" y="325" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="69.30" y="335.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.03%; +0.03%)</title><rect x="190.9" y="1845" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="193.90" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.06%; +0.03%)</title><rect x="328.3" y="1717" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="331.27" y="1727.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="67.0" y="197" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="70.05" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="129.4" y="1541" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="132.35" y="1551.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; +0.03%)</title><rect x="1061.6" y="1749" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1064.64" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.98" y="1647.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; +0.03%)</title><rect x="378.6" y="1669" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="381.56" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="431.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (5 samples, 0.16%; +0.16%)</title><rect x="37.0" y="357" width="1.9" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="40.02" y="367.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="14.9" y="597" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="17.88" y="607.5" ></text>
</g>
<g >
<title>do_cql_test (21 samples, 0.67%; 0.00%)</title><rect x="103.8" y="1941" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.83" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.81" y="255.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;char*&gt; (2 samples, 0.06%; +0.06%)</title><rect x="49.0" y="389" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="52.03" y="399.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="671.7" y="1909" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="674.69" y="1919.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.06%)</title><rect x="252.1" y="1877" width="1.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="255.08" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="62.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.54" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="133.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.48" y="1727.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; 0.00%)</title><rect x="780.5" y="1877" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.53" y="1887.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.10%; -0.03%)</title><rect x="905.9" y="1733" width="1.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="908.88" y="1743.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="112.5" y="1941" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="115.46" y="1951.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,676 samples, 85.11%; 0.00%)</title><rect x="154.9" y="2005" width="1004.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.87" y="2015.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.93" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1551.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (2 samples, 0.06%; +0.03%)</title><rect x="1027.9" y="1637" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1030.86" y="1647.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="105.0" y="1813" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="107.96" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.0" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.97" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (181 samples, 5.76%; 0.00%)</title><rect x="13.8" y="645" width="67.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.75" y="655.5" >std::_F..</text>
</g>
<g >
<title>mutation_partition::lower_bound (9 samples, 0.29%; +0.19%)</title><rect x="386.8" y="1749" width="3.4" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="389.82" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="99.3" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (18 samples, 0.57%; +0.13%)</title><rect x="541.5" y="1845" width="6.7" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="544.45" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1749" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1759.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1141" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1151.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (7 samples, 0.22%; +0.03%)</title><rect x="48.3" y="453" width="2.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="51.28" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.19" y="239.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (6 samples, 0.19%; 0.00%)</title><rect x="82.8" y="485" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (3 samples, 0.10%; -0.06%)</title><rect x="306.9" y="1765" width="1.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="309.88" y="1775.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (4 samples, 0.13%; 0.00%)</title><rect x="99.3" y="485" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.33" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.13" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="59.5" y="325" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="62.54" y="335.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.89%; 0.00%)</title><rect x="10.4" y="901" width="93.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="911.5" >[unknown]</text>
</g>
<g >
<title>cql3::raw_value::make_value (4 samples, 0.13%; +0.06%)</title><rect x="907.0" y="1733" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="910.01" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.06%; 0.00%)</title><rect x="148.5" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.49" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; 0.00%)</title><rect x="376.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="379.69" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; 0.00%)</title><rect x="111.7" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.71" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.60" y="1487.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="10.8" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.32" y="335.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (6 samples, 0.19%; +0.03%)</title><rect x="1113.4" y="1781" width="2.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1116.44" y="1791.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; +0.03%)</title><rect x="745.6" y="1909" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="748.62" y="1919.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (2 samples, 0.06%; +0.03%)</title><rect x="73.1" y="341" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="76.05" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.25%; 0.00%)</title><rect x="17.1" y="373" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.13" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; -0.06%)</title><rect x="1145.0" y="1909" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1147.96" y="1919.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.81" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%; 0.00%)</title><rect x="28.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.39" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="210.0" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="213.04" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (15 samples, 0.48%; 0.00%)</title><rect x="16.8" y="421" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.76" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="101.6" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="104.58" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="72.7" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.68" y="175.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (2 samples, 0.06%; +0.06%)</title><rect x="659.3" y="1877" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="662.30" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.10%; +0.06%)</title><rect x="450.2" y="1813" width="1.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="453.25" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (44 samples, 1.40%; +0.10%)</title><rect x="115.5" y="1733" width="16.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="118.46" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.03%)</title><rect x="835.7" y="1749" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="838.70" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1567.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="703.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (4 samples, 0.13%; +0.03%)</title><rect x="499.4" y="1829" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="502.41" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1957" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1967.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.03%; +0.03%)</title><rect x="43.4" y="469" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="46.40" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="287.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (1 samples, 0.03%; +0.03%)</title><rect x="167.3" y="1925" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="170.26" y="1935.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (6 samples, 0.19%; 0.00%)</title><rect x="46.0" y="469" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.03" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="113.6" y="1493" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="116.59" y="1503.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (3 samples, 0.10%; +0.03%)</title><rect x="148.1" y="1973" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="151.12" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.10%)</title><rect x="420.2" y="1829" width="1.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="423.22" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.35" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (17 samples, 0.54%; 0.00%)</title><rect x="81.7" y="533" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="543.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="113.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.59" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1717" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1727.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1119.4" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1122.44" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,675 samples, 85.08%; 0.00%)</title><rect x="154.9" y="1973" width="1003.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.87" y="1983.5" >seastar::reactor::run</text>
</g>
<g >
<title>cql3::expr::to_expression (1 samples, 0.03%; 0.00%)</title><rect x="105.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.33" y="1807.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; +0.03%)</title><rect x="928.8" y="1813" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="931.78" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1765" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1775.5" >[unknown]</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (7 samples, 0.22%; 0.00%)</title><rect x="117.7" y="1653" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.72" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; +0.03%)</title><rect x="379.3" y="1733" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="382.31" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%; +0.03%)</title><rect x="755.8" y="1893" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="758.76" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.48%; 0.00%)</title><rect x="1118.7" y="1877" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.69" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="79.4" y="613" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="82.43" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.03%; +0.03%)</title><rect x="730.2" y="1861" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="733.24" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="866.1" y="1925" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="869.10" y="1935.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.06%)</title><rect x="199.5" y="1909" width="1.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="202.54" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="98.2" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.20" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="59.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.92" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (16 samples, 0.51%; +0.10%)</title><rect x="902.9" y="1749" width="6.0" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="905.88" y="1759.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::bind_variable&gt; (1 samples, 0.03%; +0.03%)</title><rect x="191.3" y="1509" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="194.28" y="1519.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional&lt;cql3::expr::expression, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.24" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="130.9" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.85" y="1711.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="81.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.69" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1631.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="805" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="815.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="20.9" y="261" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="23.88" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (3 samples, 0.10%; 0.00%)</title><rect x="189.8" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.78" y="1839.5" ></text>
</g>
<g >
<title>query::querier&lt; (682 samples, 21.69%; +0.03%)</title><rect x="260.7" y="1877" width="256.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="263.71" y="1887.5" >query::querier&lt;</text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="86.2" y="213" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="89.19" y="223.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (24 samples, 0.76%; 0.00%)</title><rect x="1108.9" y="1845" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.93" y="1855.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (3 samples, 0.10%; 0.00%)</title><rect x="653.7" y="1861" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="656.67" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="117.3" y="1717" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="120.34" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.06" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="55.8" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="58.79" y="415.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="56.9" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.91" y="271.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1919.5" ></text>
</g>
<g >
<title>cdc::generation_service::make_new_generation (1 samples, 0.03%; 0.00%)</title><rect x="154.1" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.12" y="1871.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="1128.8" y="1925" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1131.82" y="1935.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (2 samples, 0.06%; 0.00%)</title><rect x="96.3" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.32" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1711.5" ></text>
</g>
<g >
<title>posix_memalign (16 samples, 0.51%; 0.00%)</title><rect x="370.7" y="1653" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="373.68" y="1663.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (75 samples, 2.39%; 0.00%)</title><rect x="112.8" y="1877" width="28.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.84" y="1887.5" >c..</text>
</g>
<g >
<title>[unknown] (246 samples, 7.82%; 0.00%)</title><rect x="10.4" y="757" width="92.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="767.5" >[unknown]</text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="78.7" y="581" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="81.68" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1887.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="141.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.99" y="1807.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (3 samples, 0.10%; 0.00%)</title><rect x="149.6" y="1941" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.62" y="1951.5" ></text>
</g>
<g >
<title>dht::tri_compare (7 samples, 0.22%; -0.03%)</title><rect x="595.9" y="1797" width="2.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="598.87" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="867.2" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.23" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::bind_variable&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1743.5" ></text>
</g>
<g >
<title>__start_context (10 samples, 0.32%; 0.00%)</title><rect x="99.0" y="741" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.95" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (76 samples, 2.42%; 0.00%)</title><rect x="112.5" y="2005" width="28.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.46" y="2015.5" >se..</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="703.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="107.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.58" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="72.7" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.68" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="485" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="495.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (2 samples, 0.06%; 0.00%)</title><rect x="151.1" y="1973" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.12" y="1983.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; +0.03%)</title><rect x="729.1" y="1893" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="732.11" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="68.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.55" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; +0.03%)</title><rect x="17.9" y="293" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="20.88" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (15 samples, 0.48%; 0.00%)</title><rect x="1118.7" y="1909" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.69" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (9 samples, 0.29%; 0.00%)</title><rect x="122.2" y="1685" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.22" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (7 samples, 0.22%; +0.03%)</title><rect x="52.4" y="405" width="2.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="55.41" y="415.5" ></text>
</g>
<g >
<title>database::query (10 samples, 0.32%; +0.06%)</title><rect x="185.6" y="1925" width="3.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="188.65" y="1935.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1823.5" ></text>
</g>
<g >
<title>v3_columns::from_v2_schema (1 samples, 0.03%; +0.03%)</title><rect x="192.4" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="195.40" y="1791.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="152.6" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.62" y="1999.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.16%)</title><rect x="807.6" y="1813" width="1.8" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="810.55" y="1823.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::bind_variable, void, void, cql3::expr::bind_variable, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.3" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.28" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (10 samples, 0.32%; 0.00%)</title><rect x="51.3" y="421" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.28" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (186 samples, 5.92%; +0.16%)</title><rect x="967.8" y="1781" width="69.8" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="970.81" y="1791.5" >service..</text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1909" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1919.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="735.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="50.2" y="405" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="53.16" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="129.7" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.73" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.65" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="22.8" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.76" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (3 samples, 0.10%; +0.10%)</title><rect x="156.0" y="1941" width="1.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="159.00" y="1951.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="103.5" y="901" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.45" y="911.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="138.4" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.36" y="1727.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="729.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.48" y="1727.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="418.7" y="1845" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="421.72" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (8 samples, 0.25%; 0.00%)</title><rect x="10.8" y="469" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (405 samples, 12.88%; +0.06%)</title><rect x="930.3" y="1845" width="152.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="933.28" y="1855.5" >cql3::statements::s..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (246 samples, 7.82%; +0.13%)</title><rect x="302.4" y="1781" width="92.3" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="305.37" y="1791.5" >partition_s..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="837" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.08" y="847.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, lister::done (1 samples, 0.03%; 0.00%)</title><rect x="729.9" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.86" y="1935.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; +0.03%)</title><rect x="340.3" y="1717" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="343.28" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.60" y="1583.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="56.2" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.16" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="102.7" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.70" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; -0.10%)</title><rect x="742.6" y="1893" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="745.62" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.48" y="1679.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1967.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; +0.03%)</title><rect x="92.2" y="565" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="95.19" y="575.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.03%; +0.03%)</title><rect x="297.5" y="1797" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="300.49" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="22.4" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.39" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="929.5" y="1813" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="932.53" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.92%; 0.00%)</title><rect x="10.4" y="1685" width="93.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1695.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.83" y="383.5" ></text>
</g>
<g >
<title>distributed_loader::init_non_system_keyspaces (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1973" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.87" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="136.1" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.11" y="1679.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.03%; 0.00%)</title><rect x="111.0" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.96" y="1823.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="730.6" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.61" y="1839.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="869.5" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.48" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="129.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.98" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%; 0.00%)</title><rect x="52.8" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.79" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%; +0.03%)</title><rect x="100.5" y="469" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="103.45" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (12 samples, 0.38%; 0.00%)</title><rect x="94.4" y="565" width="4.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.45" y="575.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="758.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.01" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="101.6" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.58" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.06%; +0.06%)</title><rect x="395.1" y="1781" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="398.08" y="1791.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; -0.06%)</title><rect x="1093.5" y="1829" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1096.54" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.63" y="543.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="100.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.83" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.03%; +0.03%)</title><rect x="302.0" y="1781" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="305.00" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.0" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.97" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="85.4" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="88.44" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (13 samples, 0.41%; +0.03%)</title><rect x="64.0" y="405" width="4.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="67.05" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="123.7" y="1493" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.72" y="1503.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (7 samples, 0.22%; -0.13%)</title><rect x="1151.0" y="1909" width="2.6" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="1153.97" y="1919.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (17 samples, 0.54%; +0.03%)</title><rect x="92.6" y="581" width="6.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="95.57" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="51.7" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.66" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (6 samples, 0.19%; 0.00%)</title><rect x="106.1" y="1797" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.08" y="1807.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="139.1" y="1685" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="142.11" y="1695.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;db::view::view_builder::view_builder_init_state, db::view::view_builder::start (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.25" y="1887.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="134.6" y="1525" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="137.61" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="139.9" y="1701" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="142.86" y="1711.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="191.7" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.65" y="1823.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (4 samples, 0.13%; +0.03%)</title><rect x="1116.4" y="1813" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1119.44" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="78.3" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="81.31" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; -0.03%)</title><rect x="246.1" y="1845" width="2.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="249.08" y="1855.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (2 samples, 0.06%; -0.03%)</title><rect x="1158.1" y="1909" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1161.10" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="306.5" y="1765" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="309.50" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.91" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (9 samples, 0.29%; 0.00%)</title><rect x="105.3" y="1861" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.33" y="1871.5" ></text>
</g>
</g>
</svg>
