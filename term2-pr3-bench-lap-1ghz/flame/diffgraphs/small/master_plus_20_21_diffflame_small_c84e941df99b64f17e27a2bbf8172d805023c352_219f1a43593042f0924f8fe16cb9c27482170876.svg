<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2118.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2101" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2101" > </text>
<g id="frames">
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="723.2" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="726.19" y="1887.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.6" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.56" y="399.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="62.3" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (5 samples, 0.16%; 0.00%)</title><rect x="81.6" y="437" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.62" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.03%; +0.03%)</title><rect x="126.1" y="1669" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="129.14" y="1679.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="136.2" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.16" y="1679.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (10 samples, 0.31%; -0.19%)</title><rect x="629.7" y="1797" width="3.7" height="15.0" fill="rgb(113,113,255)" rx="2" ry="2" />
<text  x="632.69" y="1807.5" ></text>
</g>
<g >
<title>cql3::functions::function_name::~function_name (1 samples, 0.03%; +0.03%)</title><rect x="73.8" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="76.82" y="399.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1029" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1039.5" >[unknown]</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="951.0" y="1749" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="954.03" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="672.4" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="675.36" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="142.5" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.47" y="1967.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.06%; +0.06%)</title><rect x="641.9" y="1749" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="644.93" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="113.9" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.90" y="1631.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%; +0.03%)</title><rect x="225.2" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="228.22" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (79 samples, 2.48%; -0.16%)</title><rect x="349.5" y="1685" width="29.3" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="352.53" y="1695.5" >co..</text>
</g>
<g >
<title>cql3_parser::CqlParser::value (5 samples, 0.16%; 0.00%)</title><rect x="74.2" y="389" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.42" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,694 samples, 84.72%; 0.00%)</title><rect x="157.3" y="1941" width="999.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.31" y="1951.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.14" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; -0.06%)</title><rect x="857.9" y="1909" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="860.89" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (69 samples, 2.17%; 0.00%)</title><rect x="18.2" y="453" width="25.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.16" y="463.5" >a..</text>
</g>
<g >
<title>row::external_memory_usage (19 samples, 0.60%; +0.06%)</title><rect x="342.5" y="1701" width="7.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="345.48" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.35%; +0.06%)</title><rect x="244.1" y="1829" width="4.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="247.14" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="135.4" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1647.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (85 samples, 2.67%; 0.00%)</title><rect x="110.9" y="1989" width="31.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.93" y="1999.5" >se..</text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::explode (1 samples, 0.03%; +0.03%)</title><rect x="1114.7" y="1605" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1117.67" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="96.1" y="421" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="99.09" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="82.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="112.8" y="1605" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="115.79" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (3 samples, 0.09%; 0.00%)</title><rect x="16.3" y="501" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (15 samples, 0.47%; 0.00%)</title><rect x="1112.4" y="1781" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.45" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (4 samples, 0.13%; 0.00%)</title><rect x="139.9" y="1733" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.87" y="1743.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (20 samples, 0.63%; 0.00%)</title><rect x="103.1" y="1893" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.14" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="113.9" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.90" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="703.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="129.5" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.48" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%; +0.03%)</title><rect x="27.4" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="30.44" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.09%; 0.00%)</title><rect x="50.4" y="261" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.45" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="112.0" y="1589" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="115.04" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="113.9" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.90" y="1583.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.41%; 0.00%)</title><rect x="1006.3" y="1669" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.32" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="49.0" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.96" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.65" y="1695.5" ></text>
</g>
<g >
<title>_dl_fini (1 samples, 0.03%; 0.00%)</title><rect x="1157.7" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.72" y="2031.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="495.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (1 samples, 0.03%; 0.00%)</title><rect x="1078.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.68" y="1743.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (700 samples, 22.01%; 0.00%)</title><rect x="858.6" y="1909" width="259.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.64" y="1919.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="11.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.48" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.09%; -0.03%)</title><rect x="113.5" y="1701" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="116.53" y="1711.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1153.6" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1156.64" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="59.0" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.98" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="1031.9" y="1605" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1034.92" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::prepared_statement (1 samples, 0.03%; +0.03%)</title><rect x="103.5" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="106.51" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="82.7" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="399.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.97" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="799.6" y="1797" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="802.64" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="607.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; -0.03%)</title><rect x="690.5" y="1877" width="1.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="693.54" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="303.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1445" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1455.5" >[unknown]</text>
</g>
<g >
<title>seastar::reactor::task_queue::task_queue (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.69" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::init_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="845.6" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="287.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.38%; 0.00%)</title><rect x="1172.6" y="2037" width="16.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.56" y="2047.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (3 samples, 0.09%; -0.03%)</title><rect x="861.2" y="1765" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="864.23" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.03%; +0.03%)</title><rect x="1189.3" y="2037" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1192.26" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (271 samples, 8.52%; 0.00%)</title><rect x="10.4" y="2005" width="100.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="2015.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="92.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.75" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.03%; +0.03%)</title><rect x="188.9" y="1717" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="191.86" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%; -0.06%)</title><rect x="652.3" y="1861" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="655.32" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (56 samples, 1.76%; +0.41%)</title><rect x="896.9" y="1813" width="20.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="899.86" y="1823.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="876.1" y="1829" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="879.08" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (7 samples, 0.22%; 0.00%)</title><rect x="27.4" y="341" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.44" y="351.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%; 0.00%)</title><rect x="1157.3" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.35" y="2047.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="399.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="112.4" y="1605" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="115.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; 0.00%)</title><rect x="120.6" y="1589" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.58" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1797" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1807.5" >[unknown]</text>
</g>
<g >
<title>query::querier_base::close (2 samples, 0.06%; 0.00%)</title><rect x="1154.0" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1157.01" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="255.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%; +0.03%)</title><rect x="837.9" y="1781" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="840.86" y="1791.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="127.6" y="1493" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="130.63" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1759.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.74" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (3 samples, 0.09%; 0.00%)</title><rect x="151.4" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.38" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (169 samples, 5.31%; 0.00%)</title><rect x="18.2" y="501" width="62.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.16" y="511.5" >cql3_p..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (128 samples, 4.03%; -0.09%)</title><rect x="878.3" y="1829" width="47.5" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="881.30" y="1839.5" >cql3..</text>
</g>
<g >
<title>seastar::thread_context::main (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="693" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="703.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="74.9" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="175.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%; +0.03%)</title><rect x="41.2" y="341" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="44.17" y="351.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (28 samples, 0.88%; +0.16%)</title><rect x="906.9" y="1797" width="10.4" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="909.87" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (2 samples, 0.06%; +0.03%)</title><rect x="151.7" y="1845" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="154.75" y="1855.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (4 samples, 0.13%; +0.03%)</title><rect x="988.5" y="1701" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="991.51" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="136.2" y="1653" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="139.16" y="1663.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.74" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="933" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="943.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="219.7" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="222.65" y="1855.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%; -0.13%)</title><rect x="348.0" y="1669" width="1.5" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="351.04" y="1679.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="114.3" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.27" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; -0.13%)</title><rect x="577.4" y="1765" width="1.8" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="580.36" y="1775.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; +0.06%)</title><rect x="334.7" y="1701" width="1.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="337.69" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.22%; 0.00%)</title><rect x="83.5" y="437" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.47" y="447.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="92.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.75" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.03%; +0.03%)</title><rect x="158.8" y="1925" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="161.80" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; 0.00%)</title><rect x="684.2" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.23" y="1887.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="139.9" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.87" y="1711.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (359 samples, 11.29%; +0.16%)</title><rect x="269.4" y="1813" width="133.2" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="272.38" y="1823.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; +0.03%)</title><rect x="40.1" y="341" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="43.06" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="113.9" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.90" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1221" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1231.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1951.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="51.6" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.56" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned int&gt;::_Rb_tree_iterator (1 samples, 0.03%; +0.03%)</title><rect x="43.4" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="46.40" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (11 samples, 0.35%; 0.00%)</title><rect x="116.1" y="1669" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.13" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.19%)</title><rect x="700.2" y="1893" width="0.7" height="15.0" fill="rgb(113,113,255)" rx="2" ry="2" />
<text  x="703.19" y="1903.5" ></text>
</g>
<g >
<title>sstables::mc::writer::writer (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1727.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%; +0.03%)</title><rect x="339.9" y="1685" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="342.88" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="975.2" y="1749" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="978.15" y="1759.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="728.8" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="731.76" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (6 samples, 0.19%; -0.06%)</title><rect x="709.5" y="1893" width="2.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="712.47" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (11 samples, 0.35%; +0.03%)</title><rect x="19.3" y="389" width="4.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="22.28" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; 0.00%)</title><rect x="741.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="744.75" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (8 samples, 0.25%; -0.03%)</title><rect x="105.4" y="1797" width="2.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="108.36" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="81.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.62" y="431.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; 0.00%)</title><rect x="151.7" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.75" y="1871.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.2" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.17" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (8 samples, 0.25%; 0.00%)</title><rect x="1113.2" y="1685" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.19" y="1695.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="10.0" y="2021" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="396.7" y="1765" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="399.65" y="1775.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; -0.03%)</title><rect x="577.4" y="1781" width="1.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="580.36" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1349" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1359.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="112.4" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.42" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="367.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (9 samples, 0.28%; +0.22%)</title><rect x="146.9" y="1989" width="3.4" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="149.92" y="1999.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="665.3" y="1893" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="668.31" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="129.5" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.48" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1503.5" ></text>
</g>
<g >
<title>sstables::sstable::filename (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.1" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.06" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (4 samples, 0.13%; 0.00%)</title><rect x="71.6" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.60" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (4 samples, 0.13%; 0.00%)</title><rect x="50.1" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="135.4" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (3 samples, 0.09%; 0.00%)</title><rect x="67.5" y="245" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.97" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.03%; 0.00%)</title><rect x="22.6" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.62" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="546.2" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="549.19" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="74.2" y="245" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="77.19" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="399.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; -0.03%)</title><rect x="415.9" y="1829" width="1.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="418.95" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1711.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (3 samples, 0.09%; +0.03%)</title><rect x="527.3" y="1797" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="530.27" y="1807.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="74.2" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="661" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="857.2" y="1909" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="860.15" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.03%; 0.00%)</title><rect x="106.5" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.48" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1775.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.06%; 0.00%)</title><rect x="152.9" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.86" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="59.0" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="61.98" y="271.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (8 samples, 0.25%; -0.06%)</title><rect x="1144.4" y="1877" width="2.9" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1147.36" y="1887.5" ></text>
</g>
<g >
<title>service::write_response_handler::waited_for (1 samples, 0.03%; 0.00%)</title><rect x="747.3" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.31" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (3 samples, 0.09%; 0.00%)</title><rect x="151.4" y="1893" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.38" y="1903.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.04" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="79.4" y="421" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="82.39" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="207.0" y="1877" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="210.04" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; 0.00%)</title><rect x="63.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.43" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (176 samples, 5.53%; 0.00%)</title><rect x="15.9" y="629" width="65.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="639.5" >std::_F..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="629" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (4 samples, 0.13%; -0.03%)</title><rect x="1116.5" y="1717" width="1.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1119.53" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="409.3" y="1845" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="412.27" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (78 samples, 2.45%; +0.06%)</title><rect x="519.8" y="1845" width="29.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="522.85" y="1855.5" >st..</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="613" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="623.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (3 samples, 0.09%; +0.09%)</title><rect x="1059.0" y="1733" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1062.01" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="383.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="1091.7" y="1829" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1094.67" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="87.2" y="405" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="90.18" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; -0.03%)</title><rect x="1113.9" y="1605" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1116.93" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.74%; 0.00%)</title><rect x="10.4" y="773" width="91.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="783.5" >[unknown]</text>
</g>
<g >
<title>partition_snapshot_row_cursor::advance (1 samples, 0.03%; 0.00%)</title><rect x="155.5" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="158.46" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.60" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="76.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.42" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (21 samples, 0.66%; 0.00%)</title><rect x="102.8" y="1957" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.77" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="113.2" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.16" y="1647.5" ></text>
</g>
<g >
<title>database::do_apply (20 samples, 0.63%; 0.00%)</title><rect x="1104.7" y="1845" width="7.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.65" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.74%; 0.00%)</title><rect x="10.4" y="869" width="91.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="879.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.06%)</title><rect x="398.1" y="1781" width="1.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="401.14" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="255.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (11 samples, 0.35%; +0.16%)</title><rect x="757.0" y="1861" width="4.0" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="759.96" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; +0.06%)</title><rect x="1008.9" y="1637" width="2.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1011.92" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="431.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.13%)</title><rect x="532.5" y="1781" width="1.4" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="535.47" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (11 samples, 0.35%; 0.00%)</title><rect x="19.3" y="405" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.28" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="395.9" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="398.91" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="833.0" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="836.03" y="1791.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::sstable_writer (1 samples, 0.03%; 0.00%)</title><rect x="1188.9" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.89" y="1983.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="699.8" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="702.82" y="1903.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (27 samples, 0.85%; +0.16%)</title><rect x="777.4" y="1829" width="10.0" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="780.37" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (17 samples, 0.53%; 0.00%)</title><rect x="92.0" y="549" width="6.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.01" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="81.2" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="84.25" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="126.1" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.14" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (69 samples, 2.17%; 0.00%)</title><rect x="18.2" y="469" width="25.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.16" y="479.5" >a..</text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (1 samples, 0.03%; +0.03%)</title><rect x="1091.3" y="1829" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1094.30" y="1839.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; -0.03%)</title><rect x="692.0" y="1877" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="695.03" y="1887.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;compaction_manager::submit (1 samples, 0.03%; 0.00%)</title><rect x="1118.4" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.38" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="96.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.09" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="1188.9" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.89" y="2015.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%; +0.03%)</title><rect x="746.2" y="1861" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="749.20" y="1871.5" ></text>
</g>
<g >
<title>database::flush (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1823.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (3 samples, 0.09%; +0.03%)</title><rect x="109.4" y="1813" width="1.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="112.45" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (69 samples, 2.17%; 0.00%)</title><rect x="18.2" y="437" width="25.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.16" y="447.5" >a..</text>
</g>
<g >
<title>db::system_distributed_keyspace::start (1 samples, 0.03%; 0.00%)</title><rect x="188.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.48" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.03%; 0.00%)</title><rect x="886.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="889.09" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1567.5" ></text>
</g>
<g >
<title>std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="17.8" y="469" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="20.79" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="53.0" y="421" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="56.04" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="575.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="538.8" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="541.77" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%; 0.00%)</title><rect x="138.8" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; 0.00%)</title><rect x="400.7" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="403.74" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.44%; +0.09%)</title><rect x="344.3" y="1685" width="5.2" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="347.33" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="71.6" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.60" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="46.4" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.36" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; +0.03%)</title><rect x="11.9" y="421" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="14.86" y="431.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="135.8" y="1557" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="138.79" y="1567.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1188.9" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.89" y="1999.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1155.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.12" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1269" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1279.5" >[unknown]</text>
</g>
<g >
<title>mutation_reader_merger::operator (10 samples, 0.31%; -0.13%)</title><rect x="286.1" y="1781" width="3.7" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="289.08" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (6 samples, 0.19%; 0.00%)</title><rect x="86.1" y="501" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="67.9" y="133" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.89" y="143.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1079.1" y="1797" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1082.05" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (3 samples, 0.09%; 0.00%)</title><rect x="16.3" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.19" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.06%)</title><rect x="671.2" y="1893" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="674.25" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (2 samples, 0.06%; 0.00%)</title><rect x="46.4" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.36" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1455.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%; 0.00%)</title><rect x="53.4" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.42" y="431.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="1088.7" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1091.70" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="100.5" y="597" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="103.54" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.09%; +0.09%)</title><rect x="33.4" y="277" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="36.38" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.33" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="69.7" y="197" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="72.74" y="207.5" ></text>
</g>
<g >
<title>__start_context (85 samples, 2.67%; 0.00%)</title><rect x="110.9" y="2005" width="31.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.93" y="2015.5" >__..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.03%; 0.00%)</title><rect x="862.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.35" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; 0.00%)</title><rect x="60.8" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.84" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="120.6" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.58" y="1631.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (5 samples, 0.16%; +0.16%)</title><rect x="394.1" y="1749" width="1.8" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="397.06" y="1759.5" ></text>
</g>
<g >
<title>database::apply_in_memory (20 samples, 0.63%; 0.00%)</title><rect x="1104.7" y="1813" width="7.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.65" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="224.8" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="227.85" y="1887.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="63.4" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="66.43" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="622.6" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="625.64" y="1791.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="271.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="886.5" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="889.47" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="64.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.55" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="95.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.97" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="581.8" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="584.82" y="1807.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="120.9" y="1541" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1551.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (25 samples, 0.79%; -0.22%)</title><rect x="702.4" y="1909" width="9.3" height="15.0" fill="rgb(96,96,255)" rx="2" ry="2" />
<text  x="705.42" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="123.5" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.55" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (343 samples, 10.79%; +0.06%)</title><rect x="951.8" y="1781" width="127.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="954.77" y="1791.5" >service::storag..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="116.5" y="1605" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="119.50" y="1615.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="656.8" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.77" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1957" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1967.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (2 samples, 0.06%; +0.06%)</title><rect x="743.2" y="1877" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="746.23" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.3" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.28" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (2 samples, 0.06%; +0.06%)</title><rect x="18.2" y="421" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="21.16" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.47%; 0.00%)</title><rect x="1112.4" y="1813" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.45" y="1823.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.03%)</title><rect x="535.4" y="1749" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="538.43" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="92.7" y="293" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="95.75" y="303.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%; +0.03%)</title><rect x="825.6" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="828.61" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (10 samples, 0.31%; 0.00%)</title><rect x="19.6" y="373" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="856.0" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="859.04" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="303.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; -0.03%)</title><rect x="251.9" y="1861" width="2.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="254.94" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.3" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.28" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="399.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartLine (1 samples, 0.03%; +0.03%)</title><rect x="31.5" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="34.52" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="208.5" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="211.52" y="1887.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (1 samples, 0.03%; +0.03%)</title><rect x="893.9" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="896.89" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="853" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="863.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="383.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (3 samples, 0.09%; 0.00%)</title><rect x="151.4" y="1877" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.38" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.16%)</title><rect x="717.3" y="1893" width="0.3" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="720.26" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="20.8" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.76" y="255.5" ></text>
</g>
<g >
<title>[unknown] (204 samples, 6.42%; 0.00%)</title><rect x="10.4" y="709" width="75.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="719.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="64.5" y="293" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.55" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="15.2" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="18.19" y="319.5" ></text>
</g>
<g >
<title>database::query (8 samples, 0.25%; -0.06%)</title><rect x="184.4" y="1909" width="3.0" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="187.40" y="1919.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; +0.06%)</title><rect x="208.9" y="1877" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="211.89" y="1887.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; 0.00%)</title><rect x="538.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="541.03" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (251 samples, 7.89%; +0.13%)</title><rect x="303.9" y="1781" width="93.1" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="306.89" y="1791.5" >partition_s..</text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (4 samples, 0.13%; 0.00%)</title><rect x="86.1" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="29.7" y="293" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="32.67" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (37 samples, 1.16%; 0.00%)</title><rect x="883.1" y="1813" width="13.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.13" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (19 samples, 0.60%; -0.16%)</title><rect x="657.1" y="1909" width="7.1" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="660.14" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="84.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.58" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (193 samples, 6.07%; +0.09%)</title><rect x="962.9" y="1765" width="71.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="965.91" y="1775.5" >service:..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="623.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::optional (1 samples, 0.03%; +0.03%)</title><rect x="93.9" y="453" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="96.86" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (67 samples, 2.11%; +0.03%)</title><rect x="18.9" y="421" width="24.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="21.91" y="431.5" >a..</text>
</g>
<g >
<title>operator new (9 samples, 0.28%; -0.03%)</title><rect x="750.7" y="1893" width="3.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="753.65" y="1903.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="684.6" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="687.60" y="1887.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.09%; 0.00%)</title><rect x="645.6" y="1813" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.64" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1583.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%; +0.19%)</title><rect x="413.0" y="1829" width="2.9" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="415.98" y="1839.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="22.2" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="25.25" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1477" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1487.5" ></text>
</g>
<g >
<title>__start_context (176 samples, 5.53%; 0.00%)</title><rect x="15.9" y="677" width="65.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="687.5" >__start..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="83.5" y="373" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="86.47" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.06%)</title><rect x="620.4" y="1749" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="623.41" y="1759.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; 0.00%)</title><rect x="667.2" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="670.16" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.03%)</title><rect x="550.6" y="1829" width="1.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="553.65" y="1839.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="479.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (16 samples, 0.50%; +0.03%)</title><rect x="1112.1" y="1829" width="5.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1115.08" y="1839.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.03%; 0.00%)</title><rect x="107.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.22" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (6 samples, 0.19%; 0.00%)</title><rect x="32.6" y="325" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.64" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="221.1" y="1829" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="224.14" y="1839.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; -0.03%)</title><rect x="135.4" y="1701" width="1.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="138.42" y="1711.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (8 samples, 0.25%; 0.00%)</title><rect x="780.3" y="1813" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.34" y="1823.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (32 samples, 1.01%; -0.03%)</title><rect x="775.5" y="1845" width="11.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="778.52" y="1855.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; +0.03%)</title><rect x="579.6" y="1797" width="2.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="582.59" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.09%; 0.00%)</title><rect x="126.5" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="138.8" y="1477" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="141.76" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.25%; +0.22%)</title><rect x="406.3" y="1829" width="3.0" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="409.30" y="1839.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.43" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (42 samples, 1.32%; -0.03%)</title><rect x="731.7" y="1909" width="15.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="734.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1317" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1327.5" >[unknown]</text>
</g>
<g >
<title>seastar::shared_ptr_count_base::shared_ptr_count_base (1 samples, 0.03%; +0.03%)</title><rect x="51.9" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="54.93" y="399.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (4 samples, 0.13%; -0.06%)</title><rect x="854.2" y="1893" width="1.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="857.18" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="262.3" y="1845" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="265.33" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%; 0.00%)</title><rect x="107.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.22" y="1727.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.09%; -0.06%)</title><rect x="846.8" y="1861" width="1.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="849.76" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="59.4" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="271.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (8 samples, 0.25%; 0.00%)</title><rect x="1144.4" y="1893" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1147.36" y="1903.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (3 samples, 0.09%; 0.00%)</title><rect x="16.3" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="479.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.06%; +0.03%)</title><rect x="150.3" y="2021" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="153.26" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.03%)</title><rect x="663.5" y="1893" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="666.45" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="199.6" y="1893" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="202.62" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="12.6" y="213" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="15.60" y="223.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (2 samples, 0.06%; +0.06%)</title><rect x="26.3" y="357" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="29.33" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (364 samples, 11.45%; +0.09%)</title><rect x="267.5" y="1829" width="135.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="270.52" y="1839.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>do_cql_test (21 samples, 0.66%; 0.00%)</title><rect x="102.8" y="1925" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.77" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1573" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1583.5" >[unknown]</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (34 samples, 1.07%; -0.09%)</title><rect x="1159.6" y="2037" width="12.6" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1162.57" y="2047.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="720.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.23" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="108.0" y="1765" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="110.96" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (1 samples, 0.03%; +0.03%)</title><rect x="17.4" y="501" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="20.42" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="56.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="303.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1829" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1839.5" >[unknown]</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="92.4" y="293" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="95.38" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="57.1" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="60.13" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="60.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.09" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1113.6" y="1637" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1116.56" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="316.5" y="1717" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="319.50" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1237" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1247.5" >[unknown]</text>
</g>
<g >
<title>std::_Bind_front&lt;bool  (1 samples, 0.03%; 0.00%)</title><rect x="860.9" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.86" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (2 samples, 0.06%; 0.00%)</title><rect x="863.1" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="866.09" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="629" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="639.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="655.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%; -0.09%)</title><rect x="640.8" y="1781" width="1.9" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="643.82" y="1791.5" ></text>
</g>
<g >
<title>row::compact_and_expire (43 samples, 1.35%; -0.03%)</title><rect x="498.0" y="1813" width="15.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="500.96" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.09%)</title><rect x="619.7" y="1733" width="0.3" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="622.67" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%; 0.00%)</title><rect x="686.1" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.09" y="1871.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; 0.00%)</title><rect x="341.7" y="1701" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="344.74" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.13%; 0.00%)</title><rect x="151.4" y="1925" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.38" y="1935.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="483.9" y="1797" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="486.86" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (5 samples, 0.16%; 0.00%)</title><rect x="1154.7" y="1925" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1157.75" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="74.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="64.9" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.92" y="271.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; -0.03%)</title><rect x="309.5" y="1733" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="312.45" y="1743.5" ></text>
</g>
<g >
<title>seastar::logger::do_log (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="1967.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="441.9" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="444.92" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="2047.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.06%; +0.06%)</title><rect x="644.2" y="1797" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="647.16" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="99.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.06" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="689.4" y="1861" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="692.43" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.33" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="629" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="639.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (17 samples, 0.53%; 0.00%)</title><rect x="125.4" y="1701" width="6.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.40" y="1711.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.03%; 0.00%)</title><rect x="645.3" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.27" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="54.9" y="405" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.90" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (6 samples, 0.19%; -0.03%)</title><rect x="144.0" y="1989" width="2.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="146.96" y="1999.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="479.5" ></text>
</g>
<g >
<title>free (4 samples, 0.13%; 0.00%)</title><rect x="442.3" y="1781" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="445.30" y="1791.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.03%; 0.00%)</title><rect x="82.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="58.6" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.61" y="335.5" ></text>
</g>
<g >
<title>partition_entry::make_evictable (1 samples, 0.03%; +0.03%)</title><rect x="110.9" y="1957" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="113.93" y="1967.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (1 samples, 0.03%; -0.03%)</title><rect x="863.5" y="1781" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="866.46" y="1791.5" ></text>
</g>
<g >
<title>hashing_partition_visitor&lt;hasher&gt;::accept_row_cell (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.74" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="111.7" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.67" y="1711.5" ></text>
</g>
<g >
<title>gms::gossiper::run (1 samples, 0.03%; 0.00%)</title><rect x="1155.1" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.12" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1855.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="155.5" y="1941" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="158.46" y="1951.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1110.6" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1113.59" y="1759.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (20 samples, 0.63%; 0.00%)</title><rect x="1104.7" y="1893" width="7.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.65" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="76.1" y="373" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="79.05" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="112.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.42" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="239.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="527.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="530.64" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="137.3" y="1637" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="140.28" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="661" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="639.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="24.8" y="373" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="27.84" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1903.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (10 samples, 0.31%; +0.06%)</title><rect x="178.5" y="1861" width="3.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="181.47" y="1871.5" ></text>
</g>
<g >
<title>database::find_keyspace (5 samples, 0.16%; -0.16%)</title><rect x="1046.8" y="1749" width="1.8" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="1049.77" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; +0.03%)</title><rect x="16.3" y="405" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="19.31" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="68.3" y="37" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="71.26" y="47.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="79.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.02" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; +0.06%)</title><rect x="1093.2" y="1813" width="3.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1096.15" y="1823.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; +0.03%)</title><rect x="842.7" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="845.68" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.09%; -0.03%)</title><rect x="128.4" y="1509" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="131.37" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="648.6" y="1813" width="1.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="651.61" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="62.3" y="389" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="219.3" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="222.28" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1247.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="76.8" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="79.79" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="132.8" y="1541" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="135.82" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (57 samples, 1.79%; 0.00%)</title><rect x="111.3" y="1781" width="21.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (8 samples, 0.25%; 0.00%)</title><rect x="67.5" y="341" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="188.9" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1775.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (10 samples, 0.31%; 0.00%)</title><rect x="1112.8" y="1733" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.82" y="1743.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="693" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="703.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="997" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1007.5" >[unknown]</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%; +0.06%)</title><rect x="640.1" y="1781" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="643.08" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="818.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="821.93" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="767.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.06%)</title><rect x="708.0" y="1893" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="710.98" y="1903.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; -0.06%)</title><rect x="959.2" y="1765" width="2.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="962.19" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="528.0" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="531.01" y="1791.5" ></text>
</g>
<g >
<title>partition_key::partition_key (1 samples, 0.03%; +0.03%)</title><rect x="189.2" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="192.23" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (1 samples, 0.03%; 0.00%)</title><rect x="720.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.60" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="171.4" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="174.42" y="1887.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (2 samples, 0.06%; +0.06%)</title><rect x="1108.0" y="1701" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1110.99" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.79" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="21.1" y="229" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="24.13" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1813" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1823.5" >cq..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="120.9" y="1397" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="123.95" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1024.9" y="1637" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1027.87" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.4" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="159.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1871.5" ></text>
</g>
<g >
<title>db::schema_tables::read_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.11" y="1903.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1519.5" ></text>
</g>
<g >
<title>partition_entry::read (5 samples, 0.16%; 0.00%)</title><rect x="624.9" y="1797" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="627.86" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.09%; 0.00%)</title><rect x="12.2" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (2,695 samples, 84.75%; 0.00%)</title><rect x="157.3" y="2037" width="1000.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.31" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="93.1" y="469" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="96.12" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.09%)</title><rect x="1030.8" y="1653" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1033.81" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="57.5" y="373" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="60.50" y="383.5" ></text>
</g>
<g >
<title>schema_registry::learn (4 samples, 0.13%; 0.00%)</title><rect x="188.9" y="1877" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.36" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="107.2" y="1685" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="110.22" y="1695.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (2 samples, 0.06%; 0.00%)</title><rect x="860.5" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.49" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%; +0.03%)</title><rect x="10.4" y="229" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="13.37" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (4 samples, 0.13%; 0.00%)</title><rect x="90.2" y="549" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.15" y="559.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; +0.03%)</title><rect x="119.5" y="1653" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="122.47" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (1 samples, 0.03%; +0.03%)</title><rect x="56.4" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="59.38" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (23 samples, 0.72%; +0.03%)</title><rect x="530.6" y="1797" width="8.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="533.61" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="501" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.09%; 0.00%)</title><rect x="129.5" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.48" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="67.5" y="213" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="223.5" ></text>
</g>
<g >
<title>db::block_for (3 samples, 0.09%; +0.06%)</title><rect x="1049.7" y="1749" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1052.74" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (10 samples, 0.31%; +0.13%)</title><rect x="921.7" y="1813" width="3.7" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="924.72" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.03%; +0.03%)</title><rect x="34.5" y="293" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="37.49" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="718.4" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.37" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1142.5" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1145.50" y="1903.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="580.3" y="1781" width="1.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="583.33" y="1791.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="22.6" y="325" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="25.62" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; 0.00%)</title><rect x="834.5" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="837.52" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.33" y="335.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="64.9" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.92" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.04" y="1663.5" ></text>
</g>
<g >
<title>row::row (79 samples, 2.48%; 0.00%)</title><rect x="349.5" y="1701" width="29.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="352.53" y="1711.5" >ro..</text>
</g>
<g >
<title>__strlen_avx2 (4 samples, 0.13%; 0.00%)</title><rect x="1004.8" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1007.84" y="1679.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="618.2" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="621.18" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="82.7" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="579.2" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="582.22" y="1791.5" ></text>
</g>
<g >
<title>schema::get_partitioner (2 samples, 0.06%; +0.03%)</title><rect x="921.0" y="1813" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="923.97" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1525" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1535.5" >[unknown]</text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="702.0" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="705.04" y="1903.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.06%; +0.03%)</title><rect x="852.7" y="1861" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="855.70" y="1871.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; +0.03%)</title><rect x="11.1" y="421" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="14.11" y="431.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (2 samples, 0.06%; +0.06%)</title><rect x="1155.9" y="1845" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1158.86" y="1855.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="129.9" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1567.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="862.7" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="865.72" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="129.5" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.48" y="1599.5" ></text>
</g>
<g >
<title>gms::gossiper::run (1 samples, 0.03%; 0.00%)</title><rect x="1155.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.12" y="1807.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.13%; +0.06%)</title><rect x="42.3" y="389" width="1.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="45.28" y="399.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="102.0" y="325" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="105.03" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.03%; +0.03%)</title><rect x="41.9" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="44.91" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; -0.06%)</title><rect x="708.4" y="1893" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="711.35" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="138.0" y="1541" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="141.02" y="1551.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (1 samples, 0.03%; +0.03%)</title><rect x="1078.3" y="1717" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1081.31" y="1727.5" ></text>
</g>
<g >
<title>schema::get_sharder (3 samples, 0.09%; +0.09%)</title><rect x="1000.0" y="1701" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1003.01" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1599.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.06%)</title><rect x="789.2" y="1829" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="792.25" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="73.5" y="325" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="76.45" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1615.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.97" y="1647.5" ></text>
</g>
<g >
<title>do_cql_test (176 samples, 5.53%; 0.00%)</title><rect x="15.9" y="613" width="65.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="623.5" >do_cql_..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="607.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (8 samples, 0.25%; -0.09%)</title><rect x="298.7" y="1765" width="3.0" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="301.69" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_move_assign (1 samples, 0.03%; 0.00%)</title><rect x="95.0" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.97" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (147 samples, 4.62%; 0.00%)</title><rect x="980.0" y="1733" width="54.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="982.97" y="1743.5" >servi..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="67.9" y="101" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.89" y="111.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.1" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.09" y="1615.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (2 samples, 0.06%; 0.00%)</title><rect x="1120.6" y="1909" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1123.61" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="92.4" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (11 samples, 0.35%; +0.06%)</title><rect x="104.3" y="1813" width="4.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="107.25" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="719.9" y="1717" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="722.86" y="1727.5" ></text>
</g>
<g >
<title>row::compact_and_expire (2 samples, 0.06%; +0.06%)</title><rect x="418.2" y="1829" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="421.18" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="128.7" y="1477" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="131.74" y="1487.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="645" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="399.5" ></text>
</g>
<g >
<title>sstables::regular_compaction::create_compaction_writer (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1791.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.25%; 0.00%)</title><rect x="19.6" y="357" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1535.5" ></text>
</g>
<g >
<title>seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1727.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (6 samples, 0.19%; +0.09%)</title><rect x="1089.1" y="1813" width="2.2" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1092.07" y="1823.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (6 samples, 0.19%; 0.00%)</title><rect x="387.7" y="1733" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="390.75" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="53.8" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.79" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; 0.00%)</title><rect x="72.0" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.97" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="56.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="319.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (2 samples, 0.06%; 0.00%)</title><rect x="542.1" y="1813" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="545.11" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="14.5" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.45" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="661" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="671.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%; +0.06%)</title><rect x="306.5" y="1765" width="1.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="309.48" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="120.6" y="1573" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.58" y="1583.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (5 samples, 0.16%; -0.13%)</title><rect x="618.6" y="1765" width="1.8" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="621.55" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (2 samples, 0.06%; 0.00%)</title><rect x="76.4" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.42" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="85.3" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="88.33" y="271.5" ></text>
</g>
<g >
<title>seastar::api_v3::and_newer::make_file_output_stream (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; 0.00%)</title><rect x="1031.9" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1034.92" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%; +0.03%)</title><rect x="75.7" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="78.68" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="119.1" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.09" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (6 samples, 0.19%; +0.03%)</title><rect x="32.6" y="309" width="2.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="35.64" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; 0.00%)</title><rect x="608.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.53" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%; -0.03%)</title><rect x="1112.1" y="1861" width="5.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1115.08" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="673.1" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="676.10" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1631.5" ></text>
</g>
<g >
<title>sstables::sstable::get_writer (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1775.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.03%; +0.03%)</title><rect x="843.4" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="846.42" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.60%; +0.06%)</title><rect x="967.7" y="1733" width="7.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="970.73" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%; 0.00%)</title><rect x="58.2" y="357" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.24" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.19%; 0.00%)</title><rect x="98.3" y="565" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="575.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (3 samples, 0.09%; 0.00%)</title><rect x="76.1" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.05" y="415.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (6 samples, 0.19%; 0.00%)</title><rect x="98.3" y="581" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="591.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (57 samples, 1.79%; 0.00%)</title><rect x="111.3" y="1749" width="21.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1759.5" ></text>
</g>
<g >
<title>__start_context (21 samples, 0.66%; 0.00%)</title><rect x="102.8" y="1989" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.77" y="1999.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.16%; +0.13%)</title><rect x="1080.5" y="1797" width="1.9" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="1083.53" y="1807.5" ></text>
</g>
<g >
<title>query::result_set::result_set (2 samples, 0.06%; 0.00%)</title><rect x="188.9" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (25 samples, 0.79%; 0.00%)</title><rect x="174.4" y="1893" width="9.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="177.38" y="1903.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (2 samples, 0.06%; +0.06%)</title><rect x="911.7" y="1781" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="914.70" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="721.3" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="724.34" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.65" y="1727.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="885" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="895.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (17 samples, 0.53%; 0.00%)</title><rect x="92.0" y="533" width="6.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.01" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (176 samples, 5.53%; 0.00%)</title><rect x="15.9" y="661" width="65.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="671.5" >seastar..</text>
</g>
<g >
<title>std::operator+ (3 samples, 0.09%; 0.00%)</title><rect x="128.4" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.37" y="1535.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.85%; -0.03%)</title><rect x="990.0" y="1701" width="10.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="992.99" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (8 samples, 0.25%; 0.00%)</title><rect x="92.4" y="501" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="511.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; +0.06%)</title><rect x="61.6" y="405" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="64.58" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="114.3" y="1541" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="117.27" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="192.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.19" y="1919.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="827.8" y="1765" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="830.84" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="951.4" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="954.40" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (2 samples, 0.06%; 0.00%)</title><rect x="863.1" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="866.09" y="1823.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (10 samples, 0.31%; +0.09%)</title><rect x="839.7" y="1829" width="3.7" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="842.71" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.19" y="335.5" ></text>
</g>
<g >
<title>sstables::sstable::component_basename (1 samples, 0.03%; +0.03%)</title><rect x="154.7" y="1669" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="157.72" y="1679.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (5 samples, 0.16%; +0.06%)</title><rect x="1148.4" y="1909" width="1.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1151.44" y="1919.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.57%; +0.13%)</title><rect x="402.6" y="1845" width="6.7" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="405.59" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (57 samples, 1.79%; 0.00%)</title><rect x="111.3" y="1733" width="21.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (7 samples, 0.22%; +0.09%)</title><rect x="693.1" y="1877" width="2.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="696.14" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="613" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="623.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; 0.00%)</title><rect x="833.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="836.40" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1647.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (75 samples, 2.36%; +0.09%)</title><rect x="805.6" y="1797" width="27.8" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="808.57" y="1807.5" >s..</text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1759.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.97" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.30" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="925.1" y="1797" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="928.06" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.03%; +0.03%)</title><rect x="866.4" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="869.43" y="1887.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (7 samples, 0.22%; +0.13%)</title><rect x="784.8" y="1797" width="2.6" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="787.79" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (42 samples, 1.32%; 0.00%)</title><rect x="498.3" y="1797" width="15.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="501.33" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="50.1" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (4 samples, 0.13%; -0.09%)</title><rect x="492.4" y="1813" width="1.5" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="495.39" y="1823.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.06%)</title><rect x="556.2" y="1829" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="559.21" y="1839.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (45 samples, 1.42%; +0.22%)</title><rect x="810.4" y="1765" width="16.7" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="813.40" y="1775.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.6" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.56" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="351.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%; 0.00%)</title><rect x="1158.1" y="2037" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.09" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.74%; 0.00%)</title><rect x="10.4" y="837" width="91.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="847.5" >[unknown]</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Storage&lt;cql3::expr::expression, false&gt;::_Storage&lt;cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1631.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; -0.03%)</title><rect x="662.3" y="1893" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="665.34" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="869" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="879.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="11.5" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="14.48" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="91.6" y="549" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="94.64" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (4 samples, 0.13%; 0.00%)</title><rect x="90.2" y="533" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.15" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (69 samples, 2.17%; +0.03%)</title><rect x="52.7" y="437" width="25.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="55.67" y="447.5" >c..</text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; 0.00%)</title><rect x="396.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.28" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="55.6" y="229" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="58.64" y="239.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (174 samples, 5.47%; 0.00%)</title><rect x="16.3" y="549" width="64.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="559.5" >cql3::q..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1535.5" ></text>
</g>
<g >
<title>dht::shard_of (3 samples, 0.09%; +0.03%)</title><rect x="981.1" y="1717" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="984.09" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (3 samples, 0.09%; 0.00%)</title><rect x="112.4" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.42" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (5 samples, 0.16%; +0.03%)</title><rect x="45.3" y="453" width="1.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="48.25" y="463.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (22 samples, 0.69%; -0.06%)</title><rect x="242.7" y="1861" width="8.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="245.66" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (8 samples, 0.25%; -0.09%)</title><rect x="686.5" y="1861" width="2.9" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="689.46" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.19" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.03%)</title><rect x="182.2" y="1877" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="185.18" y="1887.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (2 samples, 0.06%; 0.00%)</title><rect x="1117.3" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.27" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="123.9" y="1621" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="126.92" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.25%; 0.00%)</title><rect x="19.6" y="341" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="351.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="107.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.22" y="1775.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.09%; 0.00%)</title><rect x="1098.3" y="1829" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.35" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.13%)</title><rect x="919.9" y="1797" width="1.1" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="922.86" y="1807.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="190.3" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="193.34" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.09%; +0.09%)</title><rect x="198.5" y="1893" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="201.50" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (4 samples, 0.13%; +0.03%)</title><rect x="672.0" y="1877" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="674.99" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (62 samples, 1.95%; +0.06%)</title><rect x="1056.0" y="1749" width="23.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1059.04" y="1759.5" >s..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="112.4" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.42" y="1679.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; 0.00%)</title><rect x="93.9" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.86" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="140.6" y="1493" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="143.62" y="1503.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (2 samples, 0.06%; +0.06%)</title><rect x="1106.9" y="1733" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1109.88" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (21 samples, 0.66%; 0.00%)</title><rect x="102.8" y="1973" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.77" y="1983.5" ></text>
</g>
<g >
<title>fmt::v7::vformat_to&lt;seastar::internal::log_buf::inserter_iterator, fmt::v7::basic_string_view&lt;char&gt;, char, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1189.6" y="1941" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1192.63" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1605" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1615.5" >[unknown]</text>
</g>
<g >
<title>mutation_fragment::destroy_data (26 samples, 0.82%; +0.06%)</title><rect x="434.1" y="1813" width="9.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="437.13" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.09%)</title><rect x="313.9" y="1685" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="316.91" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::signal (2 samples, 0.06%; +0.03%)</title><rect x="382.2" y="1733" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="385.18" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 0.22%; 0.00%)</title><rect x="98.3" y="693" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;seastar::shared_ptr&lt;cql3::relation&gt;*, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt; &gt;::base (1 samples, 0.03%; +0.03%)</title><rect x="141.4" y="1733" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="144.36" y="1743.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (36 samples, 1.13%; 0.00%)</title><rect x="170.3" y="1909" width="13.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="173.30" y="1919.5" ></text>
</g>
<g >
<title>table::apply (20 samples, 0.63%; +0.03%)</title><rect x="1104.7" y="1797" width="7.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1107.65" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (49 samples, 1.54%; 0.00%)</title><rect x="23.4" y="405" width="18.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.36" y="415.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="831.9" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="834.92" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="351.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.13%; 0.00%)</title><rect x="1033.0" y="1701" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1036.04" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="690.5" y="1861" width="1.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="693.54" y="1871.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="982.2" y="1717" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="985.20" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (12 samples, 0.38%; +0.03%)</title><rect x="67.1" y="373" width="4.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="70.14" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="1106.1" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1109.14" y="1775.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="1093.2" y="1829" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1096.15" y="1839.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="861.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.23" y="1727.5" ></text>
</g>
<g >
<title>schema::position (1 samples, 0.03%; +0.03%)</title><rect x="1099.5" y="1829" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1102.46" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.03%; +0.03%)</title><rect x="35.6" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="38.60" y="367.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.01%; 0.00%)</title><rect x="10.4" y="693" width="70.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="703.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="136.5" y="1685" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="139.53" y="1695.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (36 samples, 1.13%; +0.28%)</title><rect x="289.8" y="1781" width="13.3" height="15.0" fill="rgb(255,64,64)" rx="2" ry="2" />
<text  x="292.79" y="1791.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (19 samples, 0.60%; 0.00%)</title><rect x="143.2" y="2021" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.21" y="2031.5" ></text>
</g>
<g >
<title>database::query_mutations (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.11" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="79.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.39" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="829.7" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="832.69" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (5 samples, 0.16%; 0.00%)</title><rect x="81.6" y="453" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.62" y="463.5" ></text>
</g>
<g >
<title>seastar::with_semaphore&lt;seastar::semaphore_default_exception_factory, gms::gossiper::run (1 samples, 0.03%; 0.00%)</title><rect x="1155.1" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.12" y="1887.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::column_identifier_raw (1 samples, 0.03%; +0.03%)</title><rect x="52.3" y="373" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="55.30" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="677" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.06" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::clear (1 samples, 0.03%; 0.00%)</title><rect x="91.3" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.26" y="527.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="136.9" y="1605" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="139.91" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.03%; 0.00%)</title><rect x="1157.0" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.97" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (12 samples, 0.38%; -0.13%)</title><rect x="337.3" y="1701" width="4.4" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="340.28" y="1711.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (3 samples, 0.09%; 0.00%)</title><rect x="861.2" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.23" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (9 samples, 0.28%; +0.03%)</title><rect x="1112.8" y="1717" width="3.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1115.82" y="1727.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (13 samples, 0.41%; 0.00%)</title><rect x="912.4" y="1781" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="915.44" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="50.4" y="293" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.45" y="303.5" ></text>
</g>
<g >
<title>seastar::api_v3::and_newer::make_file_data_sink (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.03%; 0.00%)</title><rect x="103.1" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.14" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1829" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1839.5" >cq..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="79.0" y="373" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="82.02" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="92.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.75" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="979.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="982.60" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="100.9" y="453" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="103.91" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.09%; +0.03%)</title><rect x="603.3" y="1797" width="1.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="606.34" y="1807.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%; +0.03%)</title><rect x="861.6" y="1701" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="864.60" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="135.4" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (130 samples, 4.09%; -0.22%)</title><rect x="330.6" y="1717" width="48.2" height="15.0" fill="rgb(96,96,255)" rx="2" ry="2" />
<text  x="333.60" y="1727.5" >part..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="180.7" y="1829" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="183.69" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1013" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1023.5" >[unknown]</text>
</g>
<g >
<title>__start_context (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="709" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="719.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.03%; 0.00%)</title><rect x="1119.5" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.50" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="83.8" y="213" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="86.84" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.09%; 0.00%)</title><rect x="641.6" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="644.56" y="1775.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1695.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (2 samples, 0.06%; -0.03%)</title><rect x="1024.9" y="1653" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1027.87" y="1663.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.06%; +0.03%)</title><rect x="372.2" y="1653" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="375.16" y="1663.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1903.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="862.3" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="865.35" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="44.1" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.14" y="447.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1333" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1343.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="14.5" y="357" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="17.45" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (120 samples, 3.77%; -0.09%)</title><rect x="1034.5" y="1765" width="44.6" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1037.52" y="1775.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="190.0" y="1749" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="192.97" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (389 samples, 12.23%; +0.03%)</title><rect x="938.0" y="1829" width="144.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="941.04" y="1839.5" >cql3::statements::..</text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="70.1" y="229" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="73.11" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11 samples, 0.35%; 0.00%)</title><rect x="859.7" y="1877" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="862.75" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="90.5" y="405" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="93.52" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.65" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (5 samples, 0.16%; 0.00%)</title><rect x="16.3" y="517" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="603.0" y="1797" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="605.97" y="1807.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (2 samples, 0.06%; 0.00%)</title><rect x="98.7" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.69" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="645" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="134.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.68" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.19" y="1695.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; +0.03%)</title><rect x="838.6" y="1797" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="841.60" y="1807.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="122.1" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.06" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1615.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; +0.03%)</title><rect x="316.9" y="1733" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="319.87" y="1743.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.19%; -0.09%)</title><rect x="594.8" y="1781" width="2.2" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="597.81" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.68" y="1711.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; 0.00%)</title><rect x="861.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.60" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="1032.3" y="1701" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1035.30" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (31 samples, 0.97%; +0.09%)</title><rect x="883.5" y="1765" width="11.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="886.50" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="96.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.09" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6 samples, 0.19%; 0.00%)</title><rect x="20.0" y="293" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.02" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; -0.03%)</title><rect x="135.4" y="1669" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="138.42" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="747.7" y="1589" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="750.69" y="1599.5" ></text>
</g>
<g >
<title>query::querier_base::close (81 samples, 2.55%; +0.06%)</title><rect x="518.7" y="1861" width="30.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="521.74" y="1871.5" >qu..</text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.85%; +0.09%)</title><rect x="990.0" y="1685" width="10.0" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="992.99" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (9 samples, 0.28%; -0.06%)</title><rect x="374.0" y="1621" width="3.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="377.02" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1589" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1599.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; -0.03%)</title><rect x="856.8" y="1909" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="859.78" y="1919.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="113.9" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.90" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%; +0.03%)</title><rect x="151.0" y="1957" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="154.01" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="123.5" y="1685" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.55" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.04" y="1615.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; +0.03%)</title><rect x="550.3" y="1845" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="553.28" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="85.0" y="357" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="87.96" y="367.5" ></text>
</g>
<g >
<title>_dl_sort_maps (1 samples, 0.03%; +0.03%)</title><rect x="1157.7" y="2005" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1160.72" y="2015.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1 samples, 0.03%; +0.03%)</title><rect x="157.7" y="1925" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="160.69" y="1935.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="706.5" y="1877" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="709.50" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="565" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; -0.06%)</title><rect x="307.6" y="1749" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="310.60" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="741" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="751.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (1 samples, 0.03%; 0.00%)</title><rect x="1119.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1122.50" y="1919.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="54.9" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.90" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (2 samples, 0.06%; +0.03%)</title><rect x="497.2" y="1813" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="500.21" y="1823.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; -0.03%)</title><rect x="861.6" y="1717" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="864.60" y="1727.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (8 samples, 0.25%; +0.13%)</title><rect x="390.7" y="1733" width="3.0" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="393.72" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="74.9" y="149" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="77.94" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="67.9" y="149" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.89" y="159.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="642.7" y="1765" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="645.67" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1343.5" ></text>
</g>
<g >
<title>mutation::consume&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="190.0" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.97" y="1775.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (7 samples, 0.22%; 0.00%)</title><rect x="98.3" y="629" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="639.5" ></text>
</g>
<g >
<title>make_combined_reader (2 samples, 0.06%; +0.06%)</title><rect x="557.0" y="1829" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="559.96" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="64.5" y="341" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.55" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="111.3" y="1717" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="114.30" y="1727.5" ></text>
</g>
<g >
<title>query_state::query_state (10 samples, 0.31%; -0.03%)</title><rect x="646.8" y="1861" width="3.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="649.75" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; 0.00%)</title><rect x="63.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.43" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="118.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.98" y="1663.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1 samples, 0.03%; 0.00%)</title><rect x="720.2" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.23" y="1871.5" ></text>
</g>
<g >
<title>auth::get_permissions (58 samples, 1.82%; +0.09%)</title><rect x="808.9" y="1781" width="21.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="811.91" y="1791.5" >a..</text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (14 samples, 0.44%; 0.00%)</title><rect x="1112.8" y="1749" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.82" y="1759.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; -0.03%)</title><rect x="1153.3" y="1909" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1156.26" y="1919.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="843.1" y="1813" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="846.05" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="118.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.35" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (4 samples, 0.13%; 0.00%)</title><rect x="50.1" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="399.5" ></text>
</g>
<g >
<title>do_cql_test (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1941" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1951.5" >do..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (9 samples, 0.28%; 0.00%)</title><rect x="57.5" y="405" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.50" y="415.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="2031.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%; +0.06%)</title><rect x="444.2" y="1813" width="2.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="447.15" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="70.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.48" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="40.1" y="357" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.06" y="367.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="68.6" y="181" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (27 samples, 0.85%; +0.03%)</title><rect x="132.5" y="1765" width="10.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="135.45" y="1775.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.03%; -0.22%)</title><rect x="642.7" y="1781" width="0.3" height="15.0" fill="rgb(96,96,255)" rx="2" ry="2" />
<text  x="645.67" y="1791.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="46.0" y="421" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="48.99" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (238 samples, 7.48%; -0.03%)</title><rect x="308.3" y="1765" width="88.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="311.34" y="1775.5" >partition_..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (16 samples, 0.50%; 0.00%)</title><rect x="667.5" y="1909" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="670.53" y="1919.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; 0.00%)</title><rect x="852.3" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.33" y="1839.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="74.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (45 samples, 1.42%; +0.28%)</title><rect x="522.8" y="1813" width="16.7" height="15.0" fill="rgb(255,64,64)" rx="2" ry="2" />
<text  x="525.82" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::register_stats (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1647.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (3 samples, 0.09%; +0.09%)</title><rect x="160.3" y="1925" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="163.28" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="917" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="927.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1781" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1791.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%; 0.00%)</title><rect x="107.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.22" y="1743.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="63.1" y="245" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="66.06" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (289 samples, 9.09%; -0.06%)</title><rect x="748.4" y="1909" width="107.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="751.43" y="1919.5" >seastar::inte..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; 0.00%)</title><rect x="124.7" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.66" y="1695.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%; +0.03%)</title><rect x="616.3" y="1765" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="619.33" y="1775.5" ></text>
</g>
<g >
<title>from_hex (4 samples, 0.13%; +0.09%)</title><rect x="86.1" y="437" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="89.07" y="447.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="82.7" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="287.5" ></text>
</g>
<g >
<title>schema_mutations::partitioner (1 samples, 0.03%; 0.00%)</title><rect x="190.0" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.97" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="335.5" ></text>
</g>
<g >
<title>sstables::sstable::write_toc (1 samples, 0.03%; +0.03%)</title><rect x="1188.9" y="1925" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1191.89" y="1935.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1861" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1871.5" >cq..</text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; -0.06%)</title><rect x="826.4" y="1733" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="829.35" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="447.1" y="1797" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="450.12" y="1807.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;sstables::compaction_result&gt;::apply&lt;sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.84" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="81.6" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="84.62" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="136.9" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.91" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.16%; 0.00%)</title><rect x="127.6" y="1605" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.79" y="303.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%; +0.03%)</title><rect x="1112.4" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1115.45" y="1775.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%; -0.03%)</title><rect x="183.7" y="1909" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="186.66" y="1919.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="116.5" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.50" y="1647.5" ></text>
</g>
<g >
<title>clustering_key_prefix::clustering_key_prefix (1 samples, 0.03%; +0.03%)</title><rect x="1110.2" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1113.22" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="102.4" y="1189" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="105.40" y="1199.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (3 samples, 0.09%; 0.00%)</title><rect x="47.8" y="421" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.85" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; -0.06%)</title><rect x="943.6" y="1781" width="1.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="946.61" y="1791.5" ></text>
</g>
<g >
<title>seastar::async&lt;sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (639 samples, 20.09%; +0.03%)</title><rect x="867.5" y="1877" width="237.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="870.54" y="1887.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1727.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="693" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="703.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1839.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="15.6" y="405" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="18.57" y="415.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.74%; 0.00%)</title><rect x="10.4" y="853" width="91.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="863.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="114.3" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.27" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="100.2" y="421" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="103.17" y="431.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1541" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1551.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%; 0.00%)</title><rect x="1112.1" y="1845" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.08" y="1855.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.03%; -0.03%)</title><rect x="103.1" y="1829" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="106.14" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.09%; +0.09%)</title><rect x="28.2" y="277" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="31.18" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.03%)</title><rect x="831.9" y="1765" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="834.92" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="431.5" ></text>
</g>
<g >
<title>table::flush (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="129.9" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.86" y="1567.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, db::system_keyspace::update_tokens (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%; 0.00%)</title><rect x="1112.1" y="1877" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.08" y="1887.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; +0.03%)</title><rect x="47.5" y="437" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="50.48" y="447.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="1188.9" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.89" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="125.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.03" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.13%; 0.00%)</title><rect x="64.2" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.18" y="383.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (1 samples, 0.03%; 0.00%)</title><rect x="156.6" y="2021" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.57" y="2031.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%; +0.03%)</title><rect x="110.2" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="113.19" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::signal (4 samples, 0.13%; +0.09%)</title><rect x="401.1" y="1797" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="404.11" y="1807.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.3" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.28" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::index (1 samples, 0.03%; +0.03%)</title><rect x="59.7" y="229" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="62.72" y="239.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 7.77%; 0.00%)</title><rect x="10.4" y="901" width="91.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="911.5" >[unknown]</text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (47 samples, 1.48%; +0.13%)</title><rect x="1060.9" y="1717" width="17.4" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="1063.87" y="1727.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (2 samples, 0.06%; -0.09%)</title><rect x="1110.2" y="1765" width="0.8" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1113.22" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="67.9" y="165" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.89" y="175.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="44.1" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.14" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="67.9" y="117" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.89" y="127.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (71 samples, 2.23%; -0.22%)</title><rect x="1122.1" y="1909" width="26.3" height="15.0" fill="rgb(96,96,255)" rx="2" ry="2" />
<text  x="1125.09" y="1919.5" >s..</text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="513.5" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="516.54" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="134.3" y="1493" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="137.31" y="1503.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="15.9" y="581" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="18.94" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="253.8" y="1845" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="256.79" y="1855.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (7 samples, 0.22%; -0.16%)</title><rect x="1020.1" y="1637" width="2.5" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="1023.05" y="1647.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (1 samples, 0.03%; +0.03%)</title><rect x="460.1" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="463.11" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base&lt;cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1647.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.03%; +0.03%)</title><rect x="846.4" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="849.39" y="1855.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.60" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="548.4" y="1829" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="551.42" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%; 0.00%)</title><rect x="83.5" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.47" y="399.5" ></text>
</g>
<g >
<title>row_cache::make_reader (29 samples, 0.91%; +0.03%)</title><rect x="634.5" y="1813" width="10.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="637.51" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="77.2" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.16" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="581" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="591.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; +0.03%)</title><rect x="862.0" y="1733" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="864.97" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1583.5" ></text>
</g>
<g >
<title>sstables::mc::writer::init_file_writers (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (9 samples, 0.28%; -0.09%)</title><rect x="664.2" y="1909" width="3.3" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="667.19" y="1919.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="661" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="671.5" ></text>
</g>
<g >
<title>sstables::compact_sstables (1 samples, 0.03%; +0.03%)</title><rect x="1118.4" y="1861" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1121.38" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="287.5" ></text>
</g>
<g >
<title>sstables::mc::make_writer (1 samples, 0.03%; 0.00%)</title><rect x="1188.9" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.89" y="1967.5" ></text>
</g>
<g >
<title>create_partitions (176 samples, 5.53%; 0.00%)</title><rect x="15.9" y="597" width="65.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="607.5" >create_..</text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.06%; 0.00%)</title><rect x="315.4" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="318.39" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (16 samples, 0.50%; 0.00%)</title><rect x="133.9" y="1749" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.94" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.06%; 0.00%)</title><rect x="99.8" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.80" y="511.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="68.6" y="229" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="239.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.03%; +0.03%)</title><rect x="1119.5" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1122.50" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (4 samples, 0.13%; +0.09%)</title><rect x="301.7" y="1765" width="1.4" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="304.66" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.06%; +0.06%)</title><rect x="336.5" y="1701" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="339.54" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1125" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1135.5" >[unknown]</text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.03%; +0.03%)</title><rect x="155.8" y="2021" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="158.83" y="2031.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (2 samples, 0.06%; 0.00%)</title><rect x="66.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.40" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.05" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="69.4" y="149" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="72.37" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="711.3" y="1861" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="714.32" y="1871.5" ></text>
</g>
<g >
<title>main (2,695 samples, 84.75%; 0.00%)</title><rect x="157.3" y="2021" width="1000.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.31" y="2031.5" >main</text>
</g>
<g >
<title>do_cql_test (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="645" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="655.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="597" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="717.6" y="1893" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="720.63" y="1903.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="271.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; -0.03%)</title><rect x="390.0" y="1733" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="392.97" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (4 samples, 0.13%; 0.00%)</title><rect x="71.6" y="357" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.60" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (1 samples, 0.03%; +0.03%)</title><rect x="853.4" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="856.44" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.68" y="1727.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.79" y="319.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; -0.09%)</title><rect x="852.3" y="1845" width="0.4" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="855.33" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (2 samples, 0.06%; +0.03%)</title><rect x="1115.4" y="1669" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1118.42" y="1679.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::reactor::task_queue, unsigned int&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, float&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="303.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.03%; 0.00%)</title><rect x="188.9" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1791.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (174 samples, 5.47%; 0.00%)</title><rect x="16.3" y="533" width="64.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="543.5" >cql3::u..</text>
</g>
<g >
<title>memtable::find_or_create_partition (4 samples, 0.13%; 0.00%)</title><rect x="1107.6" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.62" y="1759.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="186.3" y="1893" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="189.26" y="1903.5" ></text>
</g>
<g >
<title>__start_context (7 samples, 0.22%; 0.00%)</title><rect x="98.3" y="725" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.09%)</title><rect x="670.1" y="1877" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="673.13" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="74.9" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="191.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.03%; 0.00%)</title><rect x="519.5" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="522.48" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="54.9" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.90" y="383.5" ></text>
</g>
<g >
<title>validation::validate_column_family (16 samples, 0.50%; -0.03%)</title><rect x="833.8" y="1813" width="5.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="836.77" y="1823.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (3 samples, 0.09%; 0.00%)</title><rect x="1155.5" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.49" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="317.6" y="1717" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="320.62" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="16.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.68" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="116.9" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.87" y="1599.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; +0.03%)</title><rect x="12.2" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="15.23" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1551.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (6 samples, 0.19%; +0.09%)</title><rect x="534.3" y="1765" width="2.2" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="537.32" y="1775.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="308.7" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="311.71" y="1759.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (12 samples, 0.38%; -0.06%)</title><rect x="311.7" y="1733" width="4.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="314.68" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="431.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="967.4" y="1749" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="970.36" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; +0.03%)</title><rect x="67.5" y="197" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="70.52" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="84.2" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="87.21" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (4 samples, 0.13%; 0.00%)</title><rect x="50.1" y="309" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="1113.9" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.93" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="50.1" y="245" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="53.08" y="255.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="597" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="607.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="99.1" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="102.06" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="118.0" y="1637" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="120.98" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.96" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (10 samples, 0.31%; -0.03%)</title><rect x="1074.6" y="1685" width="3.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1077.60" y="1695.5" ></text>
</g>
<g >
<title>do_cql_test (7 samples, 0.22%; 0.00%)</title><rect x="98.3" y="661" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="849.4" y="1829" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="852.36" y="1839.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.03%)</title><rect x="734.0" y="1893" width="1.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="736.96" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.68" y="1743.5" ></text>
</g>
<g >
<title>std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="94.2" y="437" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="97.23" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; 0.00%)</title><rect x="112.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.42" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1813" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1823.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.03%)</title><rect x="1015.2" y="1637" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1018.23" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (207 samples, 6.51%; +0.22%)</title><rect x="769.9" y="1861" width="76.9" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="772.95" y="1871.5" >cql3::qu..</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (12 samples, 0.38%; +0.03%)</title><rect x="103.9" y="1845" width="4.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="106.88" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="949" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="959.5" >[unknown]</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (7 samples, 0.22%; -0.03%)</title><rect x="533.9" y="1781" width="2.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="536.95" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="399.5" ></text>
</g>
<g >
<title>unsigned_vint::serialize (1 samples, 0.03%; +0.03%)</title><rect x="152.9" y="1861" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="155.86" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1679.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="720.2" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.23" y="1887.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (5 samples, 0.16%; +0.16%)</title><rect x="1096.5" y="1829" width="1.8" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="1099.49" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="14.1" y="197" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="17.08" y="207.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.16%; 0.00%)</title><rect x="127.6" y="1589" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1599.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="190.3" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.34" y="1919.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%; 0.00%)</title><rect x="1028.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1031.58" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (11 samples, 0.35%; 0.00%)</title><rect x="104.3" y="1829" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.25" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.9" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1423.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1743.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1105.4" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1108.40" y="1775.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1 samples, 0.03%; +0.03%)</title><rect x="720.2" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="723.23" y="1855.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="863.5" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="866.46" y="1775.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="661.6" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="664.60" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; -0.06%)</title><rect x="827.8" y="1749" width="1.9" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="830.84" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.74%; 0.00%)</title><rect x="10.4" y="821" width="91.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="831.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="129.9" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="14.8" y="325" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="17.82" y="335.5" ></text>
</g>
<g >
<title>utils::array_search_gt (2 samples, 0.06%; +0.06%)</title><rect x="628.9" y="1797" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="631.94" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="187.7" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="190.74" y="1823.5" ></text>
</g>
<g >
<title>table::compact_sstables (1 samples, 0.03%; 0.00%)</title><rect x="1118.4" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.38" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="443.4" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="446.41" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (636 samples, 20.00%; 0.00%)</title><rect x="868.3" y="1845" width="236.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.28" y="1855.5" >cql3::statements::select_statem..</text>
</g>
<g >
<title>timerfd_settime (1 samples, 0.03%; +0.03%)</title><rect x="1156.6" y="1925" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1159.60" y="1935.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="1105.8" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.77" y="1775.5" ></text>
</g>
<g >
<title>sstables::sstables_manager::configure_writer (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="118.4" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.35" y="1663.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (2 samples, 0.06%; +0.06%)</title><rect x="562.9" y="1813" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="565.89" y="1823.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (43 samples, 1.35%; -0.06%)</title><rect x="606.3" y="1797" width="16.0" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="609.31" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="96.8" y="517" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="99.83" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (8 samples, 0.25%; 0.00%)</title><rect x="67.5" y="277" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="287.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.03%)</title><rect x="710.6" y="1877" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="713.58" y="1887.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (3 samples, 0.09%; -0.25%)</title><rect x="1147.3" y="1893" width="1.1" height="15.0" fill="rgb(80,80,255)" rx="2" ry="2" />
<text  x="1150.33" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (9 samples, 0.28%; 0.00%)</title><rect x="120.2" y="1701" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.21" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.36" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.03%)</title><rect x="575.9" y="1781" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="578.88" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="415.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.31%; 0.00%)</title><rect x="1136.9" y="1893" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1139.94" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="400.0" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="402.99" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="57.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.50" y="399.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (9 samples, 0.28%; +0.03%)</title><rect x="27.1" y="357" width="3.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="30.07" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="128.4" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.37" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%; +0.06%)</title><rect x="223.0" y="1861" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="225.99" y="1871.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.06%; +0.03%)</title><rect x="1121.4" y="1909" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1124.35" y="1919.5" ></text>
</g>
<g >
<title>hwloc_x86_add_cpuinfos.lto_priv.0 (1 samples, 0.03%; +0.03%)</title><rect x="110.6" y="1989" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="113.56" y="1999.5" ></text>
</g>
<g >
<title>row::~row (22 samples, 0.69%; -0.06%)</title><rect x="435.6" y="1797" width="8.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="438.62" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="533.6" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="536.58" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::~_Optional_payload (1 samples, 0.03%; +0.03%)</title><rect x="139.9" y="1669" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="142.87" y="1679.5" ></text>
</g>
<g >
<title>abstract_type::get_string (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.60" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="463.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.41%; 0.00%)</title><rect x="151.0" y="2005" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.01" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.60%; 0.00%)</title><rect x="143.2" y="2005" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.21" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="141.4" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.36" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="330.2" y="1717" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="333.23" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (27 samples, 0.85%; 0.00%)</title><rect x="132.5" y="1781" width="10.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.45" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1205" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1215.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="98.7" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.69" y="511.5" ></text>
</g>
<g >
<title>create_partitions (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="613" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="515.0" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="518.03" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.03%; +0.03%)</title><rect x="225.6" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="228.59" y="1887.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="12.6" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="54.5" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="57.53" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="539.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="542.52" y="1823.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (8 samples, 0.25%; 0.00%)</title><rect x="67.5" y="325" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.03%; +0.03%)</title><rect x="63.8" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="66.81" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="62.3" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (24 samples, 0.75%; -0.09%)</title><rect x="1082.4" y="1829" width="8.9" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1085.39" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1263.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="123.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.92" y="1647.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.03%; -0.03%)</title><rect x="378.8" y="1717" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="381.84" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (9 samples, 0.28%; 0.00%)</title><rect x="493.9" y="1813" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="496.87" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; -0.03%)</title><rect x="306.1" y="1765" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="309.11" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%; 0.00%)</title><rect x="127.6" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (2 samples, 0.06%; 0.00%)</title><rect x="82.7" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::constants::setter&gt;::~shared_ptr_count_for (2 samples, 0.06%; 0.00%)</title><rect x="672.7" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="675.73" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="59.4" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="127.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1999.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="645" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="94.2" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.23" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.06%)</title><rect x="761.8" y="1861" width="1.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="764.79" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (3 samples, 0.09%; 0.00%)</title><rect x="62.3" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="119.1" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.09" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="1155.1" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.12" y="1871.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="40.8" y="341" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="43.80" y="351.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1903.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; +0.06%)</title><rect x="176.2" y="1877" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="179.24" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="453" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="463.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="761.4" y="1877" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="764.42" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1669" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1679.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="303.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1599.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; +0.03%)</title><rect x="516.9" y="1845" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="519.88" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.2" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.16" y="1631.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.03%; 0.00%)</title><rect x="152.9" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.86" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.42" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="70.5" y="325" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="73.48" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_end (1 samples, 0.03%; +0.03%)</title><rect x="41.5" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="44.54" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%; +0.03%)</title><rect x="742.5" y="1861" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="745.49" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1551.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%; 0.00%)</title><rect x="152.9" y="1957" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.86" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="117.2" y="1509" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="120.24" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.03%; +0.03%)</title><rect x="19.6" y="293" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="22.65" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="84.6" y="373" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="87.58" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="71.2" y="181" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="74.23" y="191.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%; 0.00%)</title><rect x="127.6" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1535.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="79.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.39" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="64.5" y="325" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.55" y="335.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.9" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (6 samples, 0.19%; 0.00%)</title><rect x="98.3" y="549" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%; +0.13%)</title><rect x="1054.2" y="1717" width="1.8" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="1057.19" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="64.2" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="67.18" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.09%; +0.09%)</title><rect x="50.4" y="245" width="1.2" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="53.45" y="255.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="1155.1" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.12" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="88.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.30" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.06%; +0.03%)</title><rect x="146.2" y="1989" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="149.18" y="1999.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.13%; +0.13%)</title><rect x="515.4" y="1829" width="1.5" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="518.40" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; -0.06%)</title><rect x="541.7" y="1813" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="544.74" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="735.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1551.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flush_permit, table::seal_active_memtable (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="30.0" y="341" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="33.04" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (169 samples, 5.31%; 0.00%)</title><rect x="18.2" y="517" width="62.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.16" y="527.5" >seasta..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.09%; +0.03%)</title><rect x="700.9" y="1893" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="703.93" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1989" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1999.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.09%)</title><rect x="122.1" y="1653" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="125.06" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="527.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (15 samples, 0.47%; -0.22%)</title><rect x="486.8" y="1813" width="5.6" height="15.0" fill="rgb(96,96,255)" rx="2" ry="2" />
<text  x="489.82" y="1823.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (11 samples, 0.35%; +0.03%)</title><rect x="783.3" y="1813" width="4.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="786.31" y="1823.5" ></text>
</g>
<g >
<title>std::addressof&lt;__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="75.3" y="181" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="78.31" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="44.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.14" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="126.5" y="1461" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="129.52" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 11.26%; 0.00%)</title><rect x="10.4" y="2021" width="132.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="2031.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1391.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; +0.03%)</title><rect x="803.3" y="1797" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="806.35" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="797.0" y="1813" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="800.04" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.16%; 0.00%)</title><rect x="127.6" y="1653" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%; +0.03%)</title><rect x="72.3" y="309" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="75.34" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (49 samples, 1.54%; 0.00%)</title><rect x="521.7" y="1829" width="18.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="524.70" y="1839.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (78 samples, 2.45%; -0.13%)</title><rect x="673.5" y="1909" width="28.9" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="676.47" y="1919.5" >se..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (649 samples, 20.41%; -0.13%)</title><rect x="863.8" y="1893" width="240.9" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="866.83" y="1903.5" >seastar::concrete_execution_stag..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="93.5" y="277" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="96.49" y="287.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (2 samples, 0.06%; 0.00%)</title><rect x="1106.9" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.88" y="1759.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.16%; +0.09%)</title><rect x="1140.6" y="1893" width="1.9" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1143.65" y="1903.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="383.5" ></text>
</g>
<g >
<title>auth::resource::parent (5 samples, 0.16%; +0.06%)</title><rect x="803.7" y="1797" width="1.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="806.72" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.06%; +0.03%)</title><rect x="1154.0" y="1877" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1157.01" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (7 samples, 0.22%; 0.00%)</title><rect x="19.6" y="309" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (7 samples, 0.22%; -0.06%)</title><rect x="860.5" y="1813" width="2.6" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="863.49" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (1 samples, 0.03%; 0.00%)</title><rect x="161.8" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="164.77" y="1935.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (23 samples, 0.72%; +0.03%)</title><rect x="89.8" y="565" width="8.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="92.78" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="335.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="709.1" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="712.09" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; +0.03%)</title><rect x="192.6" y="1909" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="195.57" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="1086.1" y="1781" width="2.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1089.10" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="13.0" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="15.97" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (361 samples, 11.35%; -0.09%)</title><rect x="945.5" y="1813" width="133.9" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="948.47" y="1823.5" >service::storage..</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.03%; +0.03%)</title><rect x="101.7" y="565" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="104.65" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.79" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="485" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (3 samples, 0.09%; +0.06%)</title><rect x="936.6" y="1813" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="939.56" y="1823.5" ></text>
</g>
<g >
<title>utils::utf8::validate_with_error_position (1 samples, 0.03%; +0.03%)</title><rect x="189.6" y="1685" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="192.60" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="71.6" y="293" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="74.60" y="303.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="719.5" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="722.48" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="551.8" y="1845" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="554.76" y="1855.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.03%; -0.06%)</title><rect x="1022.3" y="1621" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1025.28" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; 0.00%)</title><rect x="123.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.55" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (397 samples, 12.48%; 0.00%)</title><rect x="10.0" y="2037" width="147.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" >[unknown]</text>
</g>
<g >
<title>db::schema_tables::read_schema_partition_for_table (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.11" y="1887.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; +0.06%)</title><rect x="263.4" y="1861" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="266.44" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="1088.3" y="1765" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1091.33" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.47%; 0.00%)</title><rect x="10.4" y="677" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="687.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="23.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.99" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; 0.00%)</title><rect x="604.5" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="607.45" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%; +0.03%)</title><rect x="962.5" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="965.53" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="96.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.09" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; 0.00%)</title><rect x="124.7" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.66" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.16%; 0.00%)</title><rect x="127.6" y="1573" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1583.5" ></text>
</g>
<g >
<title>auth::get_permissions (2 samples, 0.06%; 0.00%)</title><rect x="109.8" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.82" y="1807.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.11" y="1919.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="77.2" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.16" y="399.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="981" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="991.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (20 samples, 0.63%; 0.00%)</title><rect x="1104.7" y="1861" width="7.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.65" y="1871.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.03%; +0.03%)</title><rect x="133.9" y="1717" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="136.94" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="44.5" y="421" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="47.51" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (5 samples, 0.16%; 0.00%)</title><rect x="138.0" y="1717" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="723.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.94" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="60.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.09" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="57.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.13" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="62.7" y="229" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="65.69" y="239.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,695 samples, 84.75%; 0.00%)</title><rect x="157.3" y="1989" width="1000.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.31" y="1999.5" >seastar::app_template::run</text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1925" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1935.5" >[unknown]</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="367.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1301" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1311.5" >[unknown]</text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (2 samples, 0.06%; +0.06%)</title><rect x="141.7" y="1733" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="144.73" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (9 samples, 0.28%; +0.06%)</title><rect x="1085.4" y="1813" width="3.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1088.36" y="1823.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="136.9" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.91" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="609.6" y="1765" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="612.65" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.03%)</title><rect x="977.0" y="1717" width="2.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="980.01" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="46.4" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.36" y="415.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="87.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.18" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (2 samples, 0.06%; 0.00%)</title><rect x="82.7" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="383.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (4 samples, 0.13%; 0.00%)</title><rect x="188.9" y="1845" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.05" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.09%; 0.00%)</title><rect x="126.5" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="944.7" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="947.72" y="1823.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1887.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="479.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (2 samples, 0.06%; 0.00%)</title><rect x="1108.0" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.99" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (7 samples, 0.22%; 0.00%)</title><rect x="98.3" y="709" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="719.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.06%; +0.06%)</title><rect x="387.0" y="1733" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="390.01" y="1743.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="90.2" y="469" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="93.15" y="479.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (14 samples, 0.44%; +0.03%)</title><rect x="821.9" y="1749" width="5.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="824.90" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (8 samples, 0.25%; +0.16%)</title><rect x="1150.3" y="1909" width="3.0" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="1153.30" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1147.0" y="1861" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1149.96" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.59" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_index_statement*, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="95.7" y="453" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="98.72" y="463.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="901" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="911.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="945.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="948.09" y="1823.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.09%; +0.09%)</title><rect x="207.4" y="1877" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="210.41" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="799.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="802.64" y="1823.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (30 samples, 0.94%; +0.03%)</title><rect x="735.8" y="1893" width="11.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="738.81" y="1903.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (19 samples, 0.60%; +0.22%)</title><rect x="754.0" y="1877" width="7.0" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="756.99" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (10 samples, 0.31%; 0.00%)</title><rect x="86.1" y="565" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="575.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (4 samples, 0.13%; +0.13%)</title><rect x="626.7" y="1797" width="1.5" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="629.72" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.74%; 0.00%)</title><rect x="10.4" y="789" width="91.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="799.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1647.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.03%; -0.03%)</title><rect x="826.7" y="1733" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="829.72" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="335.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;basic_single_fragmented_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.60" y="1711.5" ></text>
</g>
<g >
<title>mutation_querier::consume (97 samples, 3.05%; +0.06%)</title><rect x="447.9" y="1797" width="36.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="450.86" y="1807.5" >mut..</text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.06%; +0.03%)</title><rect x="339.1" y="1685" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="342.14" y="1695.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="821" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="831.5" ></text>
</g>
<g >
<title>memtable::apply (18 samples, 0.57%; 0.00%)</title><rect x="1105.4" y="1781" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.40" y="1791.5" ></text>
</g>
<g >
<title>cache_tracker::touch (1 samples, 0.03%; +0.03%)</title><rect x="155.1" y="1957" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="158.09" y="1967.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="136.9" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.91" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="114.3" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.27" y="1583.5" ></text>
</g>
<g >
<title>create_partitions (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1925" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1935.5" >cr..</text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.03%; 0.00%)</title><rect x="958.8" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="961.82" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.09%; -0.09%)</title><rect x="381.1" y="1733" width="1.1" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="384.07" y="1743.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.03%; +0.03%)</title><rect x="856.4" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="859.41" y="1903.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (4 samples, 0.13%; 0.00%)</title><rect x="139.9" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.87" y="1727.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (174 samples, 5.47%; 0.00%)</title><rect x="16.3" y="565" width="64.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="575.5" >cql3::q..</text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; +0.03%)</title><rect x="1109.1" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1112.11" y="1759.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.03%)</title><rect x="669.8" y="1893" width="1.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="672.76" y="1903.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (288 samples, 9.06%; +0.03%)</title><rect x="410.0" y="1845" width="106.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="413.01" y="1855.5" >query::consum..</text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1557" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1567.5" >[unknown]</text>
</g>
<g >
<title>service::client_state::has_access (3 samples, 0.09%; 0.00%)</title><rect x="109.4" y="1829" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.45" y="1839.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (309 samples, 9.72%; +0.09%)</title><rect x="282.4" y="1797" width="114.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="285.36" y="1807.5" >mutation_reade..</text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (4 samples, 0.13%; +0.13%)</title><rect x="876.4" y="1829" width="1.5" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="879.45" y="1839.5" ></text>
</g>
<g >
<title>schema_registry::get (3 samples, 0.09%; -0.25%)</title><rect x="961.4" y="1765" width="1.1" height="15.0" fill="rgb(80,80,255)" rx="2" ry="2" />
<text  x="964.42" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, std::function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; 0.00%)</title><rect x="529.9" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="532.87" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="652.7" y="1861" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="655.69" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="495.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1775.5" ></text>
</g>
<g >
<title>get_scheduling_groups (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%; 0.00%)</title><rect x="16.3" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="495.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; 0.00%)</title><rect x="826.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="828.98" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="111.7" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.67" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (11 samples, 0.35%; 0.00%)</title><rect x="11.9" y="437" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.03%; 0.00%)</title><rect x="98.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.69" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="518.4" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="521.36" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; 0.00%)</title><rect x="707.6" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.61" y="1903.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (260 samples, 8.18%; +0.19%)</title><rect x="418.9" y="1829" width="96.5" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="421.92" y="1839.5" >seastar::do..</text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; +0.03%)</title><rect x="1106.5" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1109.51" y="1775.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.06%; +0.03%)</title><rect x="531.7" y="1781" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="534.72" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; +0.03%)</title><rect x="99.8" y="453" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="102.80" y="463.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1253" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1263.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.13%; 0.00%)</title><rect x="71.6" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.60" y="383.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (9 samples, 0.28%; -0.03%)</title><rect x="1168.8" y="2021" width="3.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1171.85" y="2031.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.03%; +0.03%)</title><rect x="114.6" y="1701" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="117.64" y="1711.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1115.0" y="1653" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1118.04" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.05" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%; +0.06%)</title><rect x="894.3" y="1749" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="897.26" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="305.7" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="308.74" y="1775.5" ></text>
</g>
<g >
<title>ser::qr_partition_view::key (1 samples, 0.03%; 0.00%)</title><rect x="189.2" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.23" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (13 samples, 0.41%; +0.03%)</title><rect x="135.1" y="1733" width="4.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="138.05" y="1743.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="829.3" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="832.32" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1493" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1503.5" >[unknown]</text>
</g>
<g >
<title>flush_reader::fill_buffer (5 samples, 0.16%; -0.03%)</title><rect x="151.0" y="1973" width="1.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="154.01" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="843.8" y="1829" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.79" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="64.9" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.92" y="287.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (4 samples, 0.13%; +0.13%)</title><rect x="340.3" y="1685" width="1.4" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="343.25" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="687.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (168 samples, 5.28%; 0.00%)</title><rect x="18.2" y="485" width="62.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.16" y="495.5" >cql3_p..</text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.36" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="139.5" y="1477" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="142.50" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="79.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.02" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="129.9" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.86" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1105.0" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1108.03" y="1791.5" ></text>
</g>
<g >
<title>create_partitions (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="629" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="639.5" ></text>
</g>
<g >
<title>table::make_reader (239 samples, 7.52%; -0.09%)</title><rect x="558.1" y="1829" width="88.7" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="561.07" y="1839.5" >table::mak..</text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="142.5" y="1973" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.47" y="1983.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="869" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="879.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="136.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.91" y="1647.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="107.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.22" y="1759.5" ></text>
</g>
<g >
<title>service::client_state::has_access (90 samples, 2.83%; +0.13%)</title><rect x="800.0" y="1813" width="33.4" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="803.01" y="1823.5" >se..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.4" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="191.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; -0.09%)</title><rect x="695.7" y="1893" width="2.6" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="698.74" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (6 samples, 0.19%; 0.00%)</title><rect x="98.3" y="613" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="623.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="177.7" y="1861" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="180.72" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.41%; -0.03%)</title><rect x="151.0" y="1989" width="4.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="154.01" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.04" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1893" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1903.5" >cq..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="64.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.55" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_impl_data::_Deque_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="17.1" y="373" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="20.05" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="82.7" y="229" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="85.73" y="239.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%; 0.00%)</title><rect x="189.2" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.23" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.36" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="120.6" y="1605" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.58" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1711.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="821" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="831.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="136.9" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.91" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1807.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="97.2" y="517" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="100.20" y="527.5" ></text>
</g>
<g >
<title>database::query (72 samples, 2.26%; -0.13%)</title><rect x="1001.9" y="1685" width="26.7" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="1004.87" y="1695.5" >d..</text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.03%; 0.00%)</title><rect x="720.6" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.60" y="1903.5" ></text>
</g>
<g >
<title>query::querier&lt; (686 samples, 21.57%; -0.19%)</title><rect x="264.2" y="1861" width="254.5" height="15.0" fill="rgb(113,113,255)" rx="2" ry="2" />
<text  x="267.18" y="1871.5" >query::querier&lt;</text>
</g>
<g >
<title>operator new (9 samples, 0.28%; -0.03%)</title><rect x="1029.0" y="1685" width="3.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1031.96" y="1695.5" ></text>
</g>
<g >
<title>compaction_manager::submit (1 samples, 0.03%; 0.00%)</title><rect x="1118.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.38" y="1903.5" ></text>
</g>
<g >
<title>schema::column_at (7 samples, 0.22%; +0.03%)</title><rect x="464.6" y="1781" width="2.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="467.56" y="1791.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; 0.00%)</title><rect x="417.8" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="420.81" y="1839.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.06%; +0.06%)</title><rect x="310.2" y="1733" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="313.19" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1429" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1439.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1583.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; 0.00%)</title><rect x="890.9" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="893.92" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="138.4" y="1541" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="141.39" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="111.7" y="1669" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="114.67" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; -0.16%)</title><rect x="1052.7" y="1733" width="3.3" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="1055.70" y="1743.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="735.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="620.4" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="623.41" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="123.2" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.18" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.16%; 0.00%)</title><rect x="820.0" y="1749" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="823.04" y="1759.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; +0.03%)</title><rect x="863.1" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="866.09" y="1791.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="78.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.65" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="866.8" y="1877" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="869.80" y="1887.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (1 samples, 0.03%; +0.03%)</title><rect x="158.1" y="1925" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="161.06" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="1136.6" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1139.57" y="1887.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (7 samples, 0.22%; 0.00%)</title><rect x="86.1" y="517" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (9 samples, 0.28%; +0.06%)</title><rect x="36.3" y="357" width="3.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="39.35" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="625.2" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="628.23" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::attributes::raw&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="79.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.02" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.06%)</title><rect x="64.9" y="229" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="67.92" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="1104.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.28" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="753.6" y="1861" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="756.62" y="1871.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%; +0.03%)</title><rect x="651.9" y="1861" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="654.95" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1797" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1807.5" >cq..</text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; -0.03%)</title><rect x="173.6" y="1893" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="176.64" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="111.7" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.67" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="82.7" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="853.8" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="856.81" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="44.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.14" y="431.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="961.1" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="964.05" y="1743.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (6 samples, 0.19%; +0.19%)</title><rect x="248.2" y="1845" width="2.3" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="251.23" y="1855.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (21 samples, 0.66%; -0.13%)</title><rect x="1070.5" y="1701" width="7.8" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="1073.52" y="1711.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (268 samples, 8.43%; -0.19%)</title><rect x="754.0" y="1893" width="99.4" height="15.0" fill="rgb(113,113,255)" rx="2" ry="2" />
<text  x="756.99" y="1903.5" >single_node_..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; +0.03%)</title><rect x="61.2" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="64.21" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.41%; 0.00%)</title><rect x="1006.3" y="1653" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.32" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1109" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1119.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="59.0" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.98" y="303.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (2 samples, 0.06%; 0.00%)</title><rect x="109.8" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.82" y="1791.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (50 samples, 1.57%; +0.03%)</title><rect x="1060.1" y="1733" width="18.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1063.13" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="44.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.14" y="383.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="99.4" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="102.43" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="101.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.28" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.13%; +0.09%)</title><rect x="687.9" y="1829" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="690.94" y="1839.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="622.3" y="1797" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="625.26" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="95.0" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.97" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.13%; +0.09%)</title><rect x="597.4" y="1765" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="600.40" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="446.7" y="1797" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="449.75" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="96.5" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.46" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="79.8" y="469" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="82.76" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="78.6" y="421" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="81.65" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; -0.19%)</title><rect x="925.4" y="1813" width="0.4" height="15.0" fill="rgb(113,113,255)" rx="2" ry="2" />
<text  x="928.43" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="46.4" y="389" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="49.36" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.03%)</title><rect x="766.6" y="1861" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="769.61" y="1871.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.25%; 0.00%)</title><rect x="19.6" y="325" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="335.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1791.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="45.6" y="405" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="48.62" y="415.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,695 samples, 84.75%; 0.00%)</title><rect x="157.3" y="2005" width="1000.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.31" y="2015.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; -0.09%)</title><rect x="1119.9" y="1909" width="0.7" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1122.87" y="1919.5" ></text>
</g>
<g >
<title>db::filter_for_query (4 samples, 0.13%; +0.06%)</title><rect x="1050.8" y="1749" width="1.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1053.85" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1733" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1743.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;int&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (13 samples, 0.41%; 0.00%)</title><rect x="103.5" y="1861" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.51" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1423.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (3 samples, 0.09%; -0.03%)</title><rect x="742.1" y="1877" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="745.12" y="1887.5" ></text>
</g>
<g >
<title>all (3,180 samples, 100%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (4 samples, 0.13%; +0.13%)</title><rect x="379.2" y="1717" width="1.5" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="382.21" y="1727.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.4" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="262.7" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="265.70" y="1855.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="805" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; +0.06%)</title><rect x="131.7" y="1701" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="134.71" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (3 samples, 0.09%; 0.00%)</title><rect x="67.5" y="229" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="239.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (4 samples, 0.13%; 0.00%)</title><rect x="139.9" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.87" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (13 samples, 0.41%; +0.06%)</title><rect x="115.4" y="1701" width="4.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="118.38" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="128.7" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.74" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="56.0" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="59.01" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.06%; +0.06%)</title><rect x="895.0" y="1765" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="898.00" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="44.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.14" y="367.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (2 samples, 0.06%; -0.06%)</title><rect x="378.1" y="1669" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="381.10" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; +0.03%)</title><rect x="839.0" y="1797" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="841.97" y="1807.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="50.1" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="73.5" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.45" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="74.2" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%; 0.00%)</title><rect x="138.8" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1711.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (1 samples, 0.03%; +0.03%)</title><rect x="796.7" y="1813" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="799.67" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.03%; 0.00%)</title><rect x="672.4" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="675.36" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.09%; +0.03%)</title><rect x="98.3" y="517" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="101.31" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (138 samples, 4.34%; +0.16%)</title><rect x="983.3" y="1717" width="51.2" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="986.31" y="1727.5" >servi..</text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (5 samples, 0.16%; 0.00%)</title><rect x="62.3" y="405" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (2 samples, 0.06%; 0.00%)</title><rect x="862.3" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.35" y="1807.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="68.6" y="213" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (23 samples, 0.72%; +0.03%)</title><rect x="928.0" y="1813" width="8.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="931.03" y="1823.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (16 samples, 0.50%; +0.03%)</title><rect x="597.0" y="1781" width="6.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="600.03" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="60.8" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.84" y="383.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (20 samples, 0.63%; 0.00%)</title><rect x="1104.7" y="1829" width="7.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.65" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="127.3" y="1605" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="130.26" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1061" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1071.5" >[unknown]</text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (2 samples, 0.06%; 0.00%)</title><rect x="1155.9" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.86" y="1871.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="1116.5" y="1733" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.53" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (21 samples, 0.66%; 0.00%)</title><rect x="102.8" y="1941" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.77" y="1951.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; 0.00%)</title><rect x="44.9" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.88" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="49.0" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.96" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (5 samples, 0.16%; 0.00%)</title><rect x="120.2" y="1653" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.21" y="1663.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (13 samples, 0.41%; +0.06%)</title><rect x="859.0" y="1893" width="4.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="862.01" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="142.5" y="1941" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.47" y="1951.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.09%; -0.03%)</title><rect x="221.5" y="1829" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="224.51" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_index_statement, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="95.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.72" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="77.2" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.16" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="250.5" y="1845" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="253.45" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.03%; +0.03%)</title><rect x="36.0" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="38.97" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1663.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%; 0.00%)</title><rect x="1058.3" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.27" y="1727.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (3 samples, 0.09%; +0.06%)</title><rect x="521.7" y="1813" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="524.70" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (8 samples, 0.25%; 0.00%)</title><rect x="67.5" y="261" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.33" y="303.5" ></text>
</g>
<g >
<title>database::find_schema (4 samples, 0.13%; -0.31%)</title><rect x="790.0" y="1829" width="1.5" height="15.0" fill="rgb(48,48,255)" rx="2" ry="2" />
<text  x="792.99" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (85 samples, 2.67%; 0.00%)</title><rect x="110.9" y="1973" width="31.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.93" y="1983.5" >se..</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1567.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.03%; 0.00%)</title><rect x="46.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.99" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="367.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (5 samples, 0.16%; 0.00%)</title><rect x="485.0" y="1813" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="487.97" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.09%; +0.03%)</title><rect x="47.8" y="405" width="1.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="50.85" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="501" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="113.9" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.90" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1567.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="827.1" y="1765" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="830.09" y="1775.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.97" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="303.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (7 samples, 0.22%; +0.22%)</title><rect x="37.1" y="341" width="2.6" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="40.09" y="351.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.60%; 0.00%)</title><rect x="967.7" y="1749" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.73" y="1759.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::operator delete (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.15" y="511.5" ></text>
</g>
<g >
<title>free (3 samples, 0.09%; 0.00%)</title><rect x="179.9" y="1845" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.95" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.03%; 0.00%)</title><rect x="159.9" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="162.91" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="68.6" y="197" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="207.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (9 samples, 0.28%; +0.03%)</title><rect x="1100.9" y="1813" width="3.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1103.94" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="74.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="335.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="74.2" y="357" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="367.5" ></text>
</g>
<g >
<title>sstables::mc::make_writer (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%; +0.06%)</title><rect x="1136.9" y="1877" width="3.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1139.94" y="1887.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1327.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1957" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1967.5" >st..</text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="123.2" y="1653" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="126.18" y="1663.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; -0.03%)</title><rect x="982.9" y="1717" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="985.94" y="1727.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.03%)</title><rect x="576.6" y="1781" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="579.62" y="1791.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (4 samples, 0.13%; 0.00%)</title><rect x="188.9" y="1861" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (2 samples, 0.06%; 0.00%)</title><rect x="76.4" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.42" y="351.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="830.4" y="1781" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="833.43" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.9" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1455.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="80.5" y="485" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="83.50" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_12prepare_termERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_0ZNS5_12prepare_termESA_SC_SH_SK_E3$_1ZNS5_12prepare_termESA_SC_SH_SK_E3$_2ZNS5_12prepare_termESA_SC_SH_SK_E3$_3ZNS5_12prepare_termESA_SC_SH_SK_E3$_4ZNS5_12prepare_termESA_SC_SH_SK_E3$_5ZNS5_12prepare_termESA_SC_SH_SK_E3$_6ZNS5_12prepare_termESA_SC_SH_SK_E3$_7ZNS5_12prepare_termESA_SC_SH_SK_E3$_8ZNS5_12prepare_termESA_SC_SH_SK_E3$_9ZNS5_12prepare_termESA_SC_SH_SK_E4$_10ZNS5_12prepare_termESA_SC_SH_SK_E4$_11ZNS5_12prepare_termESA_SC_SH_SK_E4$_12ZNS5_12prepare_termESA_SC_SH_SK_E4$_13ZNS5_12prepare_termESA_SC_SH_SK_E4$_14ZNS5_12prepare_termESA_SC_SH_SK_E4$_15EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (5 samples, 0.16%; 0.00%)</title><rect x="86.1" y="485" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="517" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="94.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.60" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="101.3" y="485" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="104.28" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.09%)</title><rect x="706.9" y="1893" width="0.7" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="709.87" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (3 samples, 0.09%; 0.00%)</title><rect x="123.5" y="1701" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.55" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="97.9" y="517" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="100.94" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.06%; -0.16%)</title><rect x="378.1" y="1637" width="0.7" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="381.10" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (3 samples, 0.09%; 0.00%)</title><rect x="99.4" y="517" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="95.3" y="501" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="98.35" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::~_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="139.9" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.87" y="1695.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%; 0.00%)</title><rect x="656.8" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.77" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="759.6" y="1829" width="1.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="762.56" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (10 samples, 0.31%; 0.00%)</title><rect x="860.1" y="1829" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.12" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1685" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1695.5" >[unknown]</text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (7 samples, 0.22%; -0.06%)</title><rect x="767.4" y="1861" width="2.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="770.35" y="1871.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; -0.03%)</title><rect x="784.4" y="1797" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="787.42" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%; +0.03%)</title><rect x="937.7" y="1829" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="940.67" y="1839.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,695 samples, 84.75%; 0.00%)</title><rect x="157.3" y="1973" width="1000.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.31" y="1983.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>table::query (1,155 samples, 36.32%; +0.16%)</title><rect x="226.0" y="1877" width="428.5" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="228.96" y="1887.5" >table::query</text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (4 samples, 0.13%; 0.00%)</title><rect x="188.9" y="1829" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1839.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.09%; -0.03%)</title><rect x="135.4" y="1685" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="138.42" y="1695.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1535.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (2 samples, 0.06%; 0.00%)</title><rect x="78.6" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.65" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="783.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="197.4" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="200.39" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="351.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="1113.2" y="1669" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1116.19" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="271.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.03%; +0.03%)</title><rect x="1111.3" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1114.33" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="133.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.94" y="1743.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1807.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (3 samples, 0.09%; +0.03%)</title><rect x="1107.6" y="1733" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1110.62" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (3 samples, 0.09%; +0.09%)</title><rect x="895.7" y="1781" width="1.2" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="898.74" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="50.1" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="1016.3" y="1621" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1019.34" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (32 samples, 1.01%; +0.09%)</title><rect x="610.4" y="1781" width="11.9" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="613.39" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (364 samples, 11.45%; -0.03%)</title><rect x="267.5" y="1845" width="135.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="270.52" y="1855.5" >flat_mutation_rea..</text>
</g>
<g >
<title>service::storage_proxy::do_mutate (14 samples, 0.44%; 0.00%)</title><rect x="1112.8" y="1765" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.82" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="123.5" y="1669" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.55" y="1679.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="133.2" y="1621" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="136.19" y="1631.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (6 samples, 0.19%; 0.00%)</title><rect x="32.6" y="357" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.64" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (16 samples, 0.50%; 0.00%)</title><rect x="1112.1" y="1893" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.08" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="113.9" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.90" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1871.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="608.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.91" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (197 samples, 6.19%; -0.25%)</title><rect x="310.9" y="1749" width="73.1" height="15.0" fill="rgb(80,80,255)" rx="2" ry="2" />
<text  x="313.94" y="1759.5" >partitio..</text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (3 samples, 0.09%; 0.00%)</title><rect x="106.1" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.11" y="1759.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (3 samples, 0.09%; -0.03%)</title><rect x="1133.6" y="1893" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1136.60" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (2 samples, 0.06%; +0.06%)</title><rect x="34.9" y="357" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="37.86" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="431.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1663.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (2 samples, 0.06%; 0.00%)</title><rect x="62.7" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.69" y="271.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1679.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (13 samples, 0.41%; +0.09%)</title><rect x="258.6" y="1861" width="4.8" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="261.62" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="67.9" y="69" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="70.89" y="79.5" ></text>
</g>
<g >
<title>mutation_partition::accept (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.74" y="1871.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; -0.03%)</title><rect x="518.0" y="1845" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="520.99" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.03%; +0.03%)</title><rect x="133.6" y="1749" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="136.57" y="1759.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="677" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="687.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="17.8" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.79" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="60.1" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="63.09" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.19%; 0.00%)</title><rect x="49.3" y="421" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.33" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::truncate_statement*, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="96.5" y="469" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="99.46" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="69.0" y="149" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="72.00" y="159.5" ></text>
</g>
<g >
<title>[unknown] (237 samples, 7.45%; 0.00%)</title><rect x="10.4" y="725" width="87.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="735.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="53.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.79" y="351.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.06%)</title><rect x="732.8" y="1893" width="1.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="735.84" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.9" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1439.5" ></text>
</g>
<g >
<title>utils::make_random_uuid (1 samples, 0.03%; +0.03%)</title><rect x="721.0" y="1685" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="723.97" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="85.7" y="405" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="88.70" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (2 samples, 0.06%; 0.00%)</title><rect x="90.2" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.15" y="527.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1189" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1199.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; +0.03%)</title><rect x="49.3" y="373" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="52.33" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="134.7" y="1637" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="137.68" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="12.2" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="96.5" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.46" y="511.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="941.4" y="1813" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="944.38" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.03%)</title><rect x="181.1" y="1845" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="184.06" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="76.4" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.42" y="383.5" ></text>
</g>
<g >
<title>partition_entry::apply_to_incomplete (1 samples, 0.03%; +0.03%)</title><rect x="154.3" y="1973" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="157.35" y="1983.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.16%; 0.00%)</title><rect x="74.2" y="373" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; 0.00%)</title><rect x="72.3" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.34" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.19%; 0.00%)</title><rect x="49.3" y="405" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.33" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (244 samples, 7.67%; +0.13%)</title><rect x="762.9" y="1877" width="90.5" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="765.90" y="1887.5" >single_nod..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier&gt;::shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="78.3" y="437" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="81.28" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="135.4" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (11 samples, 0.35%; 0.00%)</title><rect x="116.1" y="1685" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.13" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="303.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1877" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1887.5" >[unknown]</text>
</g>
<g >
<title>operator new (5 samples, 0.16%; +0.03%)</title><rect x="623.0" y="1797" width="1.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="626.01" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="157.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.31" y="1935.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (7 samples, 0.22%; +0.09%)</title><rect x="850.1" y="1861" width="2.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="853.10" y="1871.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.03%; +0.03%)</title><rect x="1109.8" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1112.85" y="1775.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1111.7" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1114.70" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1381" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1391.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="650.5" y="1861" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="653.47" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.09" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (7 samples, 0.22%; 0.00%)</title><rect x="83.5" y="469" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.47" y="479.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (3 samples, 0.09%; 0.00%)</title><rect x="93.9" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.86" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10 samples, 0.31%; 0.00%)</title><rect x="860.1" y="1861" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.12" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="62.3" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.09%)</title><rect x="623.7" y="1781" width="1.2" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="626.75" y="1791.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (27 samples, 0.85%; -0.03%)</title><rect x="721.7" y="1909" width="10.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="724.71" y="1919.5" ></text>
</g>
<g >
<title>sstables::compacting_sstable_writer::consume_new_partition (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1807.5" ></text>
</g>
<g >
<title>std::locale::operator= (1 samples, 0.03%; +0.03%)</title><rect x="142.8" y="2005" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="145.84" y="2015.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (11 samples, 0.35%; 0.00%)</title><rect x="67.5" y="357" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="56.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%; 0.00%)</title><rect x="113.5" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.53" y="1695.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.13%)</title><rect x="205.2" y="1877" width="1.8" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="208.18" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (2 samples, 0.06%; 0.00%)</title><rect x="99.8" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.80" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_view_statement*, std::default_delete&lt;cql3::statements::create_view_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="80.1" y="437" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="83.13" y="447.5" ></text>
</g>
<g >
<title>mutation::mutation (1 samples, 0.03%; 0.00%)</title><rect x="188.9" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1807.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (7 samples, 0.22%; +0.16%)</title><rect x="327.6" y="1701" width="2.6" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="330.64" y="1711.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="853" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="863.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.06%; +0.06%)</title><rect x="143.2" y="1989" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="146.21" y="1999.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="751.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (141 samples, 4.43%; +0.06%)</title><rect x="787.4" y="1845" width="52.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="790.39" y="1855.5" >cql3:..</text>
</g>
<g >
<title>v3_columns::from_v2_schema (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.60" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="22.6" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.62" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="54.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.53" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="134.3" y="1717" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="137.31" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator bool (1 samples, 0.03%; +0.03%)</title><rect x="97.6" y="517" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="100.57" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="59.4" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; +0.03%)</title><rect x="73.1" y="373" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="76.08" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="191.5" y="1893" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="194.45" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.19" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.3" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.28" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.68" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; 0.00%)</title><rect x="1144.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1146.99" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="16.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.68" y="399.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; 0.00%)</title><rect x="105.4" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.36" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="53.8" y="325" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="56.79" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="135.4" y="1525" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="138.42" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (6 samples, 0.19%; 0.00%)</title><rect x="27.8" y="309" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.81" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (3 samples, 0.09%; 0.00%)</title><rect x="14.5" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.45" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1099.8" y="1829" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1102.83" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="45.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.62" y="447.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="83.1" y="293" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="86.10" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1839.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (2 samples, 0.06%; +0.06%)</title><rect x="731.0" y="1893" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="733.99" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (6 samples, 0.19%; 0.00%)</title><rect x="108.3" y="1861" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.33" y="1871.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_deallocate (1 samples, 0.03%; +0.03%)</title><rect x="66.8" y="341" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="69.77" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1311.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="10.7" y="277" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="13.74" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.9" y="373" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="80.91" y="383.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (264 samples, 8.30%; 0.00%)</title><rect x="548.8" y="1861" width="98.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="551.79" y="1871.5" >query::quer..</text>
</g>
<g >
<title>make_combined_reader (50 samples, 1.57%; 0.00%)</title><rect x="564.0" y="1813" width="18.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="567.01" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="59.4" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.93" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="546.6" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="549.57" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (2 samples, 0.06%; 0.00%)</title><rect x="98.7" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.69" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; 0.00%)</title><rect x="605.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="608.94" y="1791.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="351.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="949.2" y="1781" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="952.18" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (10 samples, 0.31%; 0.00%)</title><rect x="86.1" y="549" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.59" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="565" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="575.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1215.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (13 samples, 0.41%; +0.03%)</title><rect x="92.0" y="517" width="4.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="95.01" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,694 samples, 84.72%; 0.00%)</title><rect x="157.3" y="1957" width="999.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.31" y="1967.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="645" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="655.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="72.7" y="293" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="75.71" y="303.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.28%; +0.16%)</title><rect x="510.2" y="1765" width="3.3" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="513.20" y="1775.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="1105.8" y="1749" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1108.77" y="1759.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="319.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (3 samples, 0.09%; 0.00%)</title><rect x="16.3" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="171.4" y="1893" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="174.42" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (97 samples, 3.05%; 0.00%)</title><rect x="43.8" y="469" width="36.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="479.5" >cql..</text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (45 samples, 1.42%; +0.19%)</title><rect x="467.2" y="1781" width="16.7" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="470.16" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.06%; +0.06%)</title><rect x="819.3" y="1749" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="822.30" y="1759.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.03%; +0.03%)</title><rect x="917.3" y="1797" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="920.26" y="1807.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (2 samples, 0.06%; +0.03%)</title><rect x="303.1" y="1781" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="306.14" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1631.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; +0.03%)</title><rect x="1024.5" y="1637" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1027.50" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.09%)</title><rect x="262.3" y="1829" width="0.4" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="265.33" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.13%; +0.09%)</title><rect x="617.1" y="1765" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="620.07" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%; +0.03%)</title><rect x="27.8" y="277" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="30.81" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="469" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="479.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.06%; 0.00%)</title><rect x="152.9" y="1941" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.86" y="1951.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="114.3" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.27" y="1535.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="805" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="815.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (6 samples, 0.19%; -0.03%)</title><rect x="891.3" y="1717" width="2.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="894.29" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; 0.00%)</title><rect x="73.1" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.08" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="773" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="783.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="837" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="847.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; -0.09%)</title><rect x="542.9" y="1813" width="2.6" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="545.86" y="1823.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.03%; +0.03%)</title><rect x="443.8" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="446.78" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; +0.03%)</title><rect x="151.4" y="1861" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="154.38" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.13%; 0.00%)</title><rect x="151.4" y="1941" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.38" y="1951.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="513.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="516.91" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="96.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.09" y="447.5" ></text>
</g>
<g >
<title>cql3::column_identifier::column_identifier (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.60" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="415.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="843.8" y="1845" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.79" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.13%; +0.03%)</title><rect x="33.0" y="293" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="36.01" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (2 samples, 0.06%; 0.00%)</title><rect x="155.1" y="1973" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="158.09" y="1983.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="58.6" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="61.61" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.03%; 0.00%)</title><rect x="16.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.68" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (57 samples, 1.79%; 0.00%)</title><rect x="111.3" y="1765" width="21.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1775.5" ></text>
</g>
<g >
<title>schema::registry_entry (1 samples, 0.03%; +0.03%)</title><rect x="1117.6" y="1653" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1120.64" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (9 samples, 0.28%; 0.00%)</title><rect x="86.1" y="533" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="543.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.41%; 0.00%)</title><rect x="151.0" y="2021" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.01" y="2031.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="115.0" y="1701" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="118.01" y="1711.5" ></text>
</g>
<g >
<title>database::find_column_family (5 samples, 0.16%; +0.03%)</title><rect x="1044.9" y="1749" width="1.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1047.91" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (21 samples, 0.66%; +0.16%)</title><rect x="322.4" y="1717" width="7.8" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="325.44" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (4 samples, 0.13%; 0.00%)</title><rect x="672.0" y="1893" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="674.99" y="1903.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::sstable_writer (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1759.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.13%; 0.00%)</title><rect x="648.6" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="651.61" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="849.7" y="1861" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="852.73" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="893.5" y="1717" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="896.52" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (3 samples, 0.09%; 0.00%)</title><rect x="861.2" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.23" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (5 samples, 0.16%; 0.00%)</title><rect x="81.6" y="469" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.62" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (51 samples, 1.60%; -0.03%)</title><rect x="113.5" y="1717" width="19.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="116.53" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="54.2" y="341" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="57.16" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; +0.03%)</title><rect x="60.8" y="341" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="63.84" y="351.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="1052.7" y="1749" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1055.70" y="1759.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; +0.03%)</title><rect x="797.8" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="800.78" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1637" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1647.5" >[unknown]</text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%; 0.00%)</title><rect x="188.9" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; 0.00%)</title><rect x="112.8" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.79" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.13%; 0.00%)</title><rect x="50.1" y="357" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.16%; +0.09%)</title><rect x="696.5" y="1877" width="1.8" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="699.48" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; 0.00%)</title><rect x="64.5" y="357" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.55" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="533" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="543.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="80.9" y="565" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="83.87" y="575.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1909" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1919.5" >[unknown]</text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (3 samples, 0.09%; -0.03%)</title><rect x="1113.9" y="1637" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1116.93" y="1647.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%; 0.00%)</title><rect x="190.0" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.97" y="1807.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (3 samples, 0.09%; -0.03%)</title><rect x="1113.9" y="1621" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1116.93" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.19" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="557.7" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="560.70" y="1839.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="118.7" y="1653" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="121.72" y="1663.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (137 samples, 4.31%; -0.03%)</title><rect x="582.6" y="1813" width="50.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="585.56" y="1823.5" >memta..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="53.8" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.79" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="124.7" y="1653" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="127.66" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.04" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="117.6" y="1509" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="120.61" y="1519.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (1 samples, 0.03%; +0.03%)</title><rect x="21.9" y="277" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="24.87" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7 samples, 0.22%; 0.00%)</title><rect x="98.3" y="677" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="687.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1157" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1167.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.09%)</title><rect x="949.2" y="1765" width="2.2" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="952.18" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="1188.9" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.89" y="2047.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7 samples, 0.22%; 0.00%)</title><rect x="27.4" y="325" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.44" y="335.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; +0.03%)</title><rect x="633.4" y="1813" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="636.40" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.87" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1461" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1471.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_map_allocator (1 samples, 0.03%; +0.03%)</title><rect x="16.7" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="19.68" y="367.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="129.5" y="1525" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="132.48" y="1535.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (1 samples, 0.03%; +0.03%)</title><rect x="188.1" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="191.11" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="377.0" y="1605" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="379.99" y="1615.5" ></text>
</g>
<g >
<title>query_mutation (1 samples, 0.03%; 0.00%)</title><rect x="190.0" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.97" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.36" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="94.6" y="437" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="97.60" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%; +0.09%)</title><rect x="311.7" y="1701" width="3.7" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="314.68" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="135.4" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.06%)</title><rect x="1142.9" y="1893" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1145.87" y="1903.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (25 samples, 0.79%; -0.06%)</title><rect x="593.7" y="1797" width="9.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="596.69" y="1807.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::free (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.15" y="495.5" ></text>
</g>
<g >
<title>database::find_schema (5 samples, 0.16%; -0.31%)</title><rect x="835.3" y="1797" width="1.8" height="15.0" fill="rgb(48,48,255)" rx="2" ry="2" />
<text  x="838.26" y="1807.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="132.8" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="79.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.02" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="117.2" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1551.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="720.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.23" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1397" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1407.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; -0.03%)</title><rect x="1048.3" y="1733" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1051.25" y="1743.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.11" y="1807.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.13%; +0.09%)</title><rect x="653.1" y="1861" width="1.4" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="656.06" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1551.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (2 samples, 0.06%; 0.00%)</title><rect x="76.4" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.42" y="399.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.96" y="383.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1861" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1871.5" >[unknown]</text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="113.9" y="1557" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="116.90" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="94.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.60" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; +0.03%)</title><rect x="39.7" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="42.69" y="367.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="128.0" y="1509" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="131.00" y="1519.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (1 samples, 0.03%; +0.03%)</title><rect x="131.3" y="1685" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="134.34" y="1695.5" ></text>
</g>
<g >
<title>database::has_keyspace (4 samples, 0.13%; -0.09%)</title><rect x="837.1" y="1797" width="1.5" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="840.11" y="1807.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1359.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (11 samples, 0.35%; 0.00%)</title><rect x="126.5" y="1685" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1695.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="698.3" y="1893" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="701.33" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (18 samples, 0.57%; +0.16%)</title><rect x="929.9" y="1797" width="6.7" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="932.88" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="112.4" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.42" y="1695.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.13%; -0.19%)</title><rect x="495.7" y="1797" width="1.5" height="15.0" fill="rgb(113,113,255)" rx="2" ry="2" />
<text  x="498.73" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="161.4" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="164.40" y="1935.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="725" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="107.6" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="110.59" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="135.4" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="136.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.91" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="485" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.13%)</title><rect x="172.2" y="1893" width="1.4" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="175.16" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; +0.03%)</title><rect x="13.7" y="213" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="16.71" y="223.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (157 samples, 4.94%; -0.16%)</title><rect x="976.3" y="1749" width="58.2" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="979.26" y="1759.5" >servic..</text>
</g>
<g >
<title>row_cache::do_make_reader (23 samples, 0.72%; +0.03%)</title><rect x="635.6" y="1797" width="8.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="638.62" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (11 samples, 0.35%; 0.00%)</title><rect x="126.5" y="1669" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="83.8" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="663.1" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="666.08" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.68" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (8 samples, 0.25%; 0.00%)</title><rect x="1113.2" y="1701" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.19" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="70.9" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.86" y="351.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (4 samples, 0.13%; +0.06%)</title><rect x="485.3" y="1797" width="1.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="488.34" y="1807.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1791.5" ></text>
</g>
<g >
<title>hwloc_bitmap_set (1 samples, 0.03%; +0.03%)</title><rect x="156.2" y="2021" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="159.20" y="2031.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (2 samples, 0.06%; +0.03%)</title><rect x="689.8" y="1861" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="692.80" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="514.3" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="517.28" y="1823.5" ></text>
</g>
<g >
<title>sstables::sstable::write_components (1 samples, 0.03%; 0.00%)</title><rect x="142.5" y="2005" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.47" y="2015.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.06%; 0.00%)</title><rect x="392.9" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="395.94" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="14.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.82" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="83.8" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.3" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.28" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="213" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload_base&lt;cql3::expr::expression&gt; (2 samples, 0.06%; 0.00%)</title><rect x="140.6" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1663.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="1157.3" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.35" y="2031.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="51.6" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="54.56" y="367.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (12 samples, 0.38%; +0.03%)</title><rect x="372.9" y="1653" width="4.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="375.91" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restriction&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="672.4" y="1813" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="675.36" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1077" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1087.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="88.3" y="485" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="91.30" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (2 samples, 0.06%; +0.03%)</title><rect x="43.0" y="373" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="46.03" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.13%; -0.09%)</title><rect x="729.5" y="1877" width="1.5" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="732.50" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.09%)</title><rect x="547.3" y="1813" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="550.31" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="399.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="546.9" y="1829" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="549.94" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1487.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="863.5" y="1749" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="866.46" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="533" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="132.8" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="415.6" y="1813" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="418.58" y="1823.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.06%; +0.06%)</title><rect x="911.0" y="1781" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="913.96" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (2 samples, 0.06%; 0.00%)</title><rect x="124.7" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.66" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.16%; 0.00%)</title><rect x="127.6" y="1637" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%; +0.03%)</title><rect x="29.3" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="32.30" y="271.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="1157.3" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.35" y="2015.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.06%)</title><rect x="666.1" y="1893" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="669.05" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="608.2" y="1749" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="611.16" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="23.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.99" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.19" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (3 samples, 0.09%; 0.00%)</title><rect x="20.8" y="261" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.76" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="721.3" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="724.34" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (7 samples, 0.22%; +0.06%)</title><rect x="686.8" y="1845" width="2.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="689.83" y="1855.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::index (1 samples, 0.03%; +0.03%)</title><rect x="82.0" y="277" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="84.99" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="447.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="56.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="287.5" ></text>
</g>
<g >
<title>create_partitions (7 samples, 0.22%; 0.00%)</title><rect x="98.3" y="645" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="49.0" y="389" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="51.96" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="114.3" y="1509" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="117.27" y="1519.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,674 samples, 84.09%; +0.22%)</title><rect x="162.5" y="1925" width="992.2" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="165.51" y="1935.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>posix_memalign (2 samples, 0.06%; -0.03%)</title><rect x="378.1" y="1653" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="381.10" y="1663.5" ></text>
</g>
<g >
<title>__run_exit_handlers (1 samples, 0.03%; 0.00%)</title><rect x="1157.7" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.72" y="2047.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="59.4" y="101" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="62.35" y="111.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (3 samples, 0.09%; +0.03%)</title><rect x="1057.9" y="1733" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1060.90" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="129.5" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.48" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.06%; 0.00%)</title><rect x="1117.3" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.27" y="1679.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.35%; 0.00%)</title><rect x="244.1" y="1845" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="247.14" y="1855.5" ></text>
</g>
<g >
<title>[[vdso]] (23 samples, 0.72%; +0.06%)</title><rect x="1160.3" y="2021" width="8.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1163.31" y="2031.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (3 samples, 0.09%; -0.09%)</title><rect x="1048.6" y="1749" width="1.1" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1051.62" y="1759.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="64.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.55" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (7 samples, 0.22%; 0.00%)</title><rect x="13.3" y="421" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.03%; +0.03%)</title><rect x="1109.5" y="1765" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1112.48" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.03%; 0.00%)</title><rect x="735.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.44" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="44.9" y="437" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="47.88" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%; +0.03%)</title><rect x="882.4" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="885.38" y="1823.5" ></text>
</g>
<g >
<title>seastar::async&lt;sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="154.7" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.72" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="171.8" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="174.79" y="1903.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (6 samples, 0.19%; 0.00%)</title><rect x="41.5" y="405" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.54" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="759.6" y="1845" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="762.56" y="1855.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%; +0.03%)</title><rect x="53.4" y="405" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="56.42" y="415.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="965" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="975.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; 0.00%)</title><rect x="538.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="541.40" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="139.5" y="1653" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="142.50" y="1663.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (1 samples, 0.03%; +0.03%)</title><rect x="1052.3" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1055.33" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.03%; 0.00%)</title><rect x="1157.0" y="1941" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.97" y="1951.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.36" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="367.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_failed (1 samples, 0.03%; +0.03%)</title><rect x="32.3" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="35.26" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.03%)</title><rect x="335.4" y="1685" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="338.43" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.03%; +0.03%)</title><rect x="152.5" y="1909" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="155.49" y="1919.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::~_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="95.0" y="437" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="97.97" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="621.9" y="1765" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="624.89" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="72.0" y="309" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="74.97" y="319.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="45.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.62" y="431.5" ></text>
</g>
<g >
<title>cql3::cql3_type::get_kind (1 samples, 0.03%; +0.03%)</title><rect x="87.6" y="469" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="90.55" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (3 samples, 0.09%; 0.00%)</title><rect x="62.3" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; 0.00%)</title><rect x="126.5" y="1621" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="48.6" y="341" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="51.59" y="351.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="82.7" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="319.5" ></text>
</g>
<g >
<title>query_result_builder::consume (101 samples, 3.18%; 0.00%)</title><rect x="447.5" y="1813" width="37.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="450.49" y="1823.5" >que..</text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (2 samples, 0.06%; 0.00%)</title><rect x="88.7" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.67" y="527.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="142.5" y="1989" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.47" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base&lt;cql3::expr::expression, false&gt; (2 samples, 0.06%; 0.00%)</title><rect x="140.6" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1695.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="316.1" y="1733" width="0.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="319.13" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="117.2" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1567.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1583.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="549" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="138.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.02" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; +0.03%)</title><rect x="545.5" y="1813" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="548.45" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="309.1" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="312.08" y="1759.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.06%)</title><rect x="1134.7" y="1893" width="2.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1137.71" y="1903.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.31%; 0.00%)</title><rect x="311.7" y="1717" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.68" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="818.9" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="821.93" y="1759.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="113.5" y="1669" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="116.53" y="1679.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="1155.1" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.12" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1653" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1663.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%; +0.03%)</title><rect x="610.0" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="613.02" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.06%)</title><rect x="848.2" y="1845" width="1.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="851.25" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="431.5" ></text>
</g>
<g >
<title>cql3::cf_name::set_column_family (1 samples, 0.03%; +0.03%)</title><rect x="46.7" y="421" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="49.74" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="44.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.14" y="415.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (2 samples, 0.06%; 0.00%)</title><rect x="1155.9" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.86" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1509" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1519.5" >[unknown]</text>
</g>
<g >
<title>sstables::sstable::write_statistics (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1893" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1903.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.09%)</title><rect x="1140.3" y="1861" width="0.3" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1143.28" y="1871.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="517.6" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="520.62" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1519.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="54.9" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.90" y="399.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.67%; 0.00%)</title><rect x="10.4" y="757" width="90.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="767.5" >[unknown]</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="74.6" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.57" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (8 samples, 0.25%; +0.03%)</title><rect x="57.9" y="389" width="2.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="60.87" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (7 samples, 0.22%; +0.03%)</title><rect x="105.7" y="1781" width="2.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="108.74" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="581" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="591.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;mutation_fragment*&gt;, flat_mutation_reader::peek (1 samples, 0.03%; +0.03%)</title><rect x="158.4" y="1925" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="161.43" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="175.9" y="1861" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="178.87" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="81.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1116.2" y="1717" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1119.16" y="1727.5" ></text>
</g>
<g >
<title>sstables::metadata_collector::update_min_max_components (1 samples, 0.03%; +0.03%)</title><rect x="153.2" y="1909" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="156.23" y="1919.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (4 samples, 0.13%; +0.06%)</title><rect x="463.1" y="1781" width="1.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="466.08" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1375.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_type (1 samples, 0.03%; +0.03%)</title><rect x="31.9" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="34.89" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.5" y="357" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="80.53" y="367.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; 0.00%)</title><rect x="1153.6" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.64" y="1903.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (3 samples, 0.09%; +0.03%)</title><rect x="1116.9" y="1701" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1119.90" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="83.8" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="74.6" y="309" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="77.57" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (17 samples, 0.53%; +0.03%)</title><rect x="887.6" y="1733" width="6.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="890.58" y="1743.5" ></text>
</g>
<g >
<title>perf_simple_que (3,180 samples, 100.00%; 0.00%)</title><rect x="10.0" y="2053" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >perf_simple_que</text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.06%; +0.03%)</title><rect x="109.8" y="1765" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="112.82" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1092.8" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1095.78" y="1823.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.06%; +0.06%)</title><rect x="592.9" y="1797" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="595.95" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="393.7" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="396.69" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="113.2" y="1605" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="116.16" y="1615.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="650.1" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="653.09" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.47%; 0.00%)</title><rect x="1112.4" y="1797" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.45" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (1 samples, 0.03%; +0.03%)</title><rect x="859.7" y="1861" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="862.75" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="608.2" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.16" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1877" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1887.5" >cq..</text>
</g>
<g >
<title>free (8 samples, 0.25%; -0.03%)</title><rect x="439.0" y="1765" width="2.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="441.96" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="247.9" y="1813" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="250.86" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_destroy_data&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="91.3" y="501" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="94.26" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="1025.2" y="1637" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1028.25" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.25%)</title><rect x="959.2" y="1749" width="2.2" height="15.0" fill="rgb(80,80,255)" rx="2" ry="2" />
<text  x="962.19" y="1759.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1154.4" y="1845" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1157.38" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="319.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_delete_visitor&gt; (1 samples, 0.03%; +0.03%)</title><rect x="656.8" y="1845" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="659.77" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.19" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.13%; 0.00%)</title><rect x="71.6" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.60" y="351.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.16%)</title><rect x="917.6" y="1813" width="2.3" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="920.64" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="222.6" y="1861" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="225.62" y="1871.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;sstables::compaction_result&gt;::apply&lt;sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (6 samples, 0.19%; 0.00%)</title><rect x="98.3" y="533" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="543.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="417.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="420.43" y="1839.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; +0.03%)</title><rect x="492.0" y="1797" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="495.02" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="741.0" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="744.01" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%; +0.06%)</title><rect x="740.3" y="1877" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="743.26" y="1887.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="129.9" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.86" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (2 samples, 0.06%; 0.00%)</title><rect x="98.7" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.69" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%; +0.03%)</title><rect x="1022.6" y="1637" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1025.65" y="1647.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (6 samples, 0.19%; 0.00%)</title><rect x="108.3" y="1845" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.33" y="1855.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (10 samples, 0.31%; 0.00%)</title><rect x="860.1" y="1845" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.12" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5 samples, 0.16%; 0.00%)</title><rect x="27.8" y="293" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.81" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="96.1" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.09" y="511.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (18 samples, 0.57%; -0.03%)</title><rect x="724.3" y="1893" width="6.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="727.31" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1157.0" y="1909" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1159.97" y="1919.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.28%; +0.03%)</title><rect x="360.3" y="1669" width="3.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="363.29" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; +0.03%)</title><rect x="186.6" y="1893" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="189.63" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1285" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1295.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (7 samples, 0.22%; 0.00%)</title><rect x="83.5" y="421" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.47" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="1031.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1034.92" y="1647.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_ruleMemo (1 samples, 0.03%; +0.03%)</title><rect x="90.9" y="517" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="93.89" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; +0.03%)</title><rect x="1157.3" y="1973" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1160.35" y="1983.5" ></text>
</g>
<g >
<title>freeze (5 samples, 0.16%; 0.00%)</title><rect x="1113.6" y="1669" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.56" y="1679.5" ></text>
</g>
<g >
<title>do_cql_test (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="629" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="639.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; +0.03%)</title><rect x="68.6" y="165" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="71.63" y="175.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.03%; 0.00%)</title><rect x="608.2" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.16" y="1791.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (22 samples, 0.69%; -0.06%)</title><rect x="711.7" y="1909" width="8.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="714.69" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (4 samples, 0.13%; 0.00%)</title><rect x="209.6" y="1877" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="212.64" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="447.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="450.12" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (10 samples, 0.31%; -0.03%)</title><rect x="839.7" y="1845" width="3.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="842.71" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="130.2" y="1637" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="133.23" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="23.0" y="309" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="25.99" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="129.5" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.48" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="255.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; 0.00%)</title><rect x="847.5" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="850.50" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (20 samples, 0.63%; 0.00%)</title><rect x="103.1" y="1877" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.14" y="1887.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (6 samples, 0.19%; 0.00%)</title><rect x="220.4" y="1845" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="223.40" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.13%; 0.00%)</title><rect x="64.2" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.18" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (1 samples, 0.03%; +0.03%)</title><rect x="20.0" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="23.02" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1845" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1855.5" >[unknown]</text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.36" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%; +0.13%)</title><rect x="440.4" y="1749" width="1.5" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="443.44" y="1759.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%; -0.03%)</title><rect x="484.2" y="1797" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="487.23" y="1807.5" ></text>
</g>
<g >
<title>utils::filter::bloom_filter::add (2 samples, 0.06%; +0.06%)</title><rect x="153.6" y="1941" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="156.60" y="1951.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.13%; +0.03%)</title><rect x="604.8" y="1797" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="607.82" y="1807.5" ></text>
</g>
<g >
<title>partition_entry::apply (2 samples, 0.06%; +0.03%)</title><rect x="1111.0" y="1765" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1113.96" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%; 0.00%)</title><rect x="29.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.30" y="287.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (175 samples, 5.50%; 0.00%)</title><rect x="16.3" y="581" width="64.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="591.5" >single_..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; +0.03%)</title><rect x="124.3" y="1653" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="127.29" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.41%; 0.00%)</title><rect x="81.2" y="677" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.25" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; +0.16%)</title><rect x="941.4" y="1797" width="3.3" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="944.38" y="1807.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="60.5" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="63.47" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; +0.03%)</title><rect x="125.4" y="1685" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="128.40" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.4" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="175.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.74%; 0.00%)</title><rect x="10.4" y="805" width="91.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="815.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.09%)</title><rect x="845.3" y="1813" width="0.3" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="848.28" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1599.5" ></text>
</g>
<g >
<title>is_system_keyspace (2 samples, 0.06%; +0.06%)</title><rect x="88.7" y="501" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="91.67" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="48.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.59" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_view_statement, std::default_delete&lt;cql3::statements::create_view_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_view_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="80.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.13" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%; +0.03%)</title><rect x="563.6" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="566.64" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.09%; +0.09%)</title><rect x="250.8" y="1861" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="253.82" y="1871.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (4 samples, 0.13%; -0.03%)</title><rect x="1113.6" y="1653" width="1.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1116.56" y="1663.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.60" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;sstables::file_writer&gt;, sstables::sstable::make_component_file_writer (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1919.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (2 samples, 0.06%; +0.06%)</title><rect x="946.9" y="1797" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="949.95" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.16%; 0.00%)</title><rect x="54.5" y="421" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.53" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="239.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="58.6" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.61" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (6 samples, 0.19%; +0.13%)</title><rect x="781.1" y="1797" width="2.2" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="784.08" y="1807.5" ></text>
</g>
<g >
<title>database::add_column_family (4 samples, 0.13%; 0.00%)</title><rect x="188.9" y="1893" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="129.5" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.48" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (13 samples, 0.41%; 0.00%)</title><rect x="47.8" y="437" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.85" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%; -0.03%)</title><rect x="120.2" y="1669" width="1.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="123.21" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="979.2" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="982.23" y="1743.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.06%; +0.06%)</title><rect x="343.6" y="1685" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="346.59" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="747.3" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.31" y="1919.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="625.2" y="1781" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="628.23" y="1791.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="1015.2" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1018.23" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (49 samples, 1.54%; +0.13%)</title><rect x="23.4" y="389" width="18.1" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="26.36" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="137.6" y="1669" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="140.65" y="1679.5" ></text>
</g>
<g >
<title>create_partitions (21 samples, 0.66%; +0.03%)</title><rect x="102.8" y="1909" width="7.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="105.77" y="1919.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="398.1" y="1797" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="401.14" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="58.2" y="341" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="61.24" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="709" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="719.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="106.8" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="109.85" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (59 samples, 1.86%; 0.00%)</title><rect x="56.4" y="421" width="21.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.38" y="431.5" >c..</text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.06%; +0.06%)</title><rect x="383.3" y="1733" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="386.30" y="1743.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%; -0.13%)</title><rect x="377.4" y="1669" width="0.7" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="380.36" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (4 samples, 0.13%; 0.00%)</title><rect x="50.1" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%; +0.13%)</title><rect x="254.9" y="1845" width="3.7" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="257.91" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::lowres_timer_pollfn::poll (1 samples, 0.03%; +0.03%)</title><rect x="162.1" y="1925" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="165.14" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="197.8" y="1893" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="200.76" y="1903.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="64.5" y="229" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="67.55" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="858.3" y="1909" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="861.26" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (27 samples, 0.85%; -0.03%)</title><rect x="384.0" y="1749" width="10.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="387.04" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; +0.03%)</title><rect x="830.1" y="1765" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="833.06" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; +0.03%)</title><rect x="48.2" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="51.22" y="399.5" ></text>
</g>
<g >
<title>table::set_hit_rate (8 samples, 0.25%; 0.00%)</title><rect x="744.0" y="1877" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.97" y="1887.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (4 samples, 0.13%; +0.03%)</title><rect x="536.5" y="1781" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="539.55" y="1791.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; 0.00%)</title><rect x="174.8" y="1877" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="177.75" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; +0.03%)</title><rect x="748.1" y="1909" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="751.06" y="1919.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="108.3" y="1829" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="111.33" y="1839.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_failed (1 samples, 0.03%; +0.03%)</title><rect x="25.2" y="373" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="28.21" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (47 samples, 1.48%; +0.19%)</title><rect x="678.3" y="1893" width="17.4" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="681.30" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (85 samples, 2.67%; +0.03%)</title><rect x="47.1" y="453" width="31.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="50.11" y="463.5" >cq..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="255.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1717" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1727.5" >[unknown]</text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="16.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.68" y="431.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="118.4" y="1621" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="121.35" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (33 samples, 1.04%; 0.00%)</title><rect x="86.1" y="581" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (18 samples, 0.57%; +0.06%)</title><rect x="435.6" y="1781" width="6.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="438.62" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.03%)</title><rect x="978.1" y="1701" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="981.12" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="651.2" y="1861" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="654.21" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="351.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%; +0.03%)</title><rect x="70.9" y="325" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="73.86" y="335.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="117.2" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; -0.03%)</title><rect x="220.0" y="1845" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="223.03" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="723.9" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="726.94" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="55.3" y="197" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="58.27" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (42 samples, 1.32%; +0.03%)</title><rect x="26.0" y="373" width="15.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="28.96" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="127.6" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,250 samples, 39.31%; -0.16%)</title><rect x="192.9" y="1909" width="463.9" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="195.94" y="1919.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_index_statement, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="95.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.72" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="846.0" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="849.02" y="1855.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="82.7" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="351.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_tokenStartLine (1 samples, 0.03%; +0.03%)</title><rect x="25.6" y="373" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="28.58" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="382.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="385.92" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.33" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1845" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1855.5" >se..</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; +0.03%)</title><rect x="120.6" y="1557" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="123.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (8 samples, 0.25%; +0.03%)</title><rect x="1079.4" y="1813" width="3.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1082.42" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (8 samples, 0.25%; 0.00%)</title><rect x="67.5" y="293" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="303.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%; +0.03%)</title><rect x="982.6" y="1717" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="985.57" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (9 samples, 0.28%; +0.19%)</title><rect x="933.2" y="1781" width="3.4" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="936.22" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (32 samples, 1.01%; +0.09%)</title><rect x="925.8" y="1829" width="11.9" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="928.80" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.09%; 0.00%)</title><rect x="20.8" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.76" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.03%)</title><rect x="882.8" y="1813" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="885.75" y="1823.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; -0.03%)</title><rect x="1070.1" y="1701" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1073.14" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1173" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1183.5" >[unknown]</text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (22 samples, 0.69%; +0.03%)</title><rect x="1016.7" y="1653" width="8.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1019.71" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.77" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="197.0" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="200.02" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="131.0" y="1605" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="133.97" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; +0.03%)</title><rect x="56.8" y="325" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="59.75" y="335.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (4 samples, 0.13%; 0.00%)</title><rect x="151.4" y="1957" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.38" y="1967.5" ></text>
</g>
<g >
<title>memtable_list::flush (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1791.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%; +0.03%)</title><rect x="89.4" y="533" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="92.41" y="543.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; +0.03%)</title><rect x="803.0" y="1797" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="805.97" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (7 samples, 0.22%; 0.00%)</title><rect x="83.5" y="453" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.47" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;reconcilable_result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.11" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (3 samples, 0.09%; 0.00%)</title><rect x="62.3" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="82.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.99" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="117.2" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1583.5" ></text>
</g>
<g >
<title>sstables::metadata_base&lt;sstables::stats_metadata&gt;::serialized_size (1 samples, 0.03%; +0.03%)</title><rect x="142.5" y="1909" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="145.47" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="92.4" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="127.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1903.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="858.6" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="861.64" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.7" y="389" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="101.69" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.06%)</title><rect x="666.4" y="1893" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="669.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="351.5" ></text>
</g>
<g >
<title>schema::~schema (1 samples, 0.03%; +0.03%)</title><rect x="188.5" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="191.48" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (2 samples, 0.06%; 0.00%)</title><rect x="76.4" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.42" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="59.4" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="53.8" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.79" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="609.3" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="612.28" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (254 samples, 7.99%; -0.06%)</title><rect x="552.5" y="1845" width="94.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="555.50" y="1855.5" >std::_Funct..</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_view_statement, std::default_delete&lt;cql3::statements::create_view_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="80.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.13" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="135.4" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1727.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (26 samples, 0.82%; +0.38%)</title><rect x="213.0" y="1861" width="9.6" height="15.0" fill="rgb(255,16,16)" rx="2" ry="2" />
<text  x="215.97" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="68.3" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.26" y="63.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.03%; 0.00%)</title><rect x="1154.4" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1157.38" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::has_unrestricted_clustering_columns (1 samples, 0.03%; +0.03%)</title><rect x="105.0" y="1797" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="107.99" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (6 samples, 0.19%; 0.00%)</title><rect x="98.3" y="597" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.31" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (2 samples, 0.06%; 0.00%)</title><rect x="82.7" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="367.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="757" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="767.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="49.3" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.33" y="399.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; -0.03%)</title><rect x="977.0" y="1733" width="2.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="980.01" y="1743.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="121.3" y="1445" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="124.32" y="1455.5" ></text>
</g>
<g >
<title>abstract_type::from_string (4 samples, 0.13%; 0.00%)</title><rect x="86.1" y="469" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.07" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="43.8" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.77" y="383.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharIndex (3 samples, 0.09%; +0.09%)</title><rect x="30.4" y="357" width="1.1" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="33.41" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.06%)</title><rect x="698.7" y="1893" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="701.70" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.13%; -0.06%)</title><rect x="1023.0" y="1637" width="1.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1026.02" y="1647.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="62.3" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="65.32" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.19" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (1 samples, 0.03%; 0.00%)</title><rect x="1155.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.12" y="1919.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.93" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (36 samples, 1.13%; +0.31%)</title><rect x="500.2" y="1781" width="13.3" height="15.0" fill="rgb(255,48,48)" rx="2" ry="2" />
<text  x="503.18" y="1791.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; 0.00%)</title><rect x="722.5" y="1893" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="725.45" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%; 0.00%)</title><rect x="59.0" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.98" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="132.8" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.16%)</title><rect x="415.9" y="1813" width="1.5" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="418.95" y="1823.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.71" y="383.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.03%; +0.03%)</title><rect x="644.9" y="1797" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="647.90" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="633.8" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="636.77" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="665.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.68" y="1887.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (15 samples, 0.47%; +0.09%)</title><rect x="685.0" y="1877" width="5.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="687.97" y="1887.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; -0.09%)</title><rect x="263.1" y="1845" width="0.3" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="266.07" y="1855.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.03%)</title><rect x="1118.8" y="1909" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1121.75" y="1919.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1093" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1103.5" >[unknown]</text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.36" y="399.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1765" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1775.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.2" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.17" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="431.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="798.2" y="1813" width="1.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="801.15" y="1823.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="83.8" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (638 samples, 20.06%; -0.03%)</title><rect x="867.9" y="1861" width="236.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="870.91" y="1871.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1157.3" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.35" y="1999.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.74" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::~_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="1118.0" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1121.01" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.22%; +0.16%)</title><rect x="1026.0" y="1669" width="2.6" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="1028.99" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.6" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.64" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (11 samples, 0.35%; +0.06%)</title><rect x="1100.2" y="1829" width="4.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1103.20" y="1839.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (84 samples, 2.64%; 0.00%)</title><rect x="111.3" y="1909" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.30" y="1919.5" >si..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; -0.03%)</title><rect x="618.2" y="1749" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="621.18" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (1 samples, 0.03%; +0.03%)</title><rect x="761.0" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="764.04" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_index_statement*, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.72" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1471.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (7 samples, 0.22%; 0.00%)</title><rect x="1106.9" y="1765" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.88" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; -0.03%)</title><rect x="116.5" y="1653" width="1.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="119.50" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="129.9" y="1477" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="132.86" y="1487.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="661" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="671.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1749" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1759.5" >[unknown]</text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; 0.00%)</title><rect x="620.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="623.04" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="67.9" y="85" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.89" y="95.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%; 0.00%)</title><rect x="188.5" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.48" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="591.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="82.7" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.73" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.44%; -0.13%)</title><rect x="177.0" y="1877" width="5.2" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="179.98" y="1887.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (20 samples, 0.63%; 0.00%)</title><rect x="1104.7" y="1877" width="7.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.65" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.74%; 0.00%)</title><rect x="10.4" y="885" width="91.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="895.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (1 samples, 0.03%; +0.03%)</title><rect x="929.5" y="1797" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="932.51" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="552.1" y="1845" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="555.13" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::waiting_task (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="2031.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (16 samples, 0.50%; +0.06%)</title><rect x="65.7" y="389" width="5.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="68.66" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (168 samples, 5.28%; -0.06%)</title><rect x="318.4" y="1733" width="62.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="321.36" y="1743.5" >partit..</text>
</g>
<g >
<title>db::system_keyspace_make (4 samples, 0.13%; 0.00%)</title><rect x="188.9" y="1909" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.86" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="92.4" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;seastar::posix_file_impl::list_directory (3 samples, 0.09%; +0.03%)</title><rect x="855.7" y="1909" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="858.67" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (6 samples, 0.19%; 0.00%)</title><rect x="32.6" y="341" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.64" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (176 samples, 5.53%; 0.00%)</title><rect x="15.9" y="645" width="65.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="655.5" >seastar..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.22%; -0.13%)</title><rect x="460.5" y="1781" width="2.6" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="463.48" y="1791.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (6 samples, 0.19%; 0.00%)</title><rect x="83.5" y="405" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.47" y="415.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1855.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.05" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.19" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="271.5" ></text>
</g>
<g >
<title>db::view::view_update_generator::start (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="1983.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.03%; -0.25%)</title><rect x="210.7" y="1861" width="0.4" height="15.0" fill="rgb(80,80,255)" rx="2" ry="2" />
<text  x="213.75" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (2 samples, 0.06%; 0.00%)</title><rect x="93.1" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.12" y="495.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::entry, std::function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1855.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, seastar::smp::invoke_on_all&lt;seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1711.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="135.4" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.42" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="183.3" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="186.29" y="1887.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1567.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="919.9" y="1813" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="922.86" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1477" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1487.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="136.9" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.91" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1477" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1141" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1151.5" >[unknown]</text>
</g>
<g >
<title>service::client_state::has_column_family_access (130 samples, 4.09%; +0.13%)</title><rect x="791.5" y="1829" width="48.2" height="15.0" fill="rgb(255,145,145)" rx="2" ry="2" />
<text  x="794.47" y="1839.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.06%; -0.06%)</title><rect x="695.0" y="1861" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="697.99" y="1871.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (9 samples, 0.28%; 0.00%)</title><rect x="120.2" y="1685" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.21" y="1695.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (7 samples, 0.22%; 0.00%)</title><rect x="58.2" y="373" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.24" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%; +0.03%)</title><rect x="539.1" y="1797" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="542.14" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="642.7" y="1749" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="645.67" y="1759.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%; +0.03%)</title><rect x="1172.2" y="2037" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1175.19" y="2047.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.03%)</title><rect x="718.7" y="1893" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="721.74" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (3 samples, 0.09%; 0.00%)</title><rect x="62.3" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.32" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; 0.00%)</title><rect x="751.0" y="1877" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.03" y="1887.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="49.7" y="213" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="52.70" y="223.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.03%; 0.00%)</title><rect x="656.8" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.77" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.67%; 0.00%)</title><rect x="10.4" y="741" width="90.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="751.5" >[unknown]</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (36 samples, 1.13%; -0.03%)</title><rect x="883.5" y="1797" width="13.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="886.50" y="1807.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (5 samples, 0.16%; -0.03%)</title><rect x="648.2" y="1845" width="1.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="651.24" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="799.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.13%; 0.00%)</title><rect x="50.1" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.08" y="335.5" ></text>
</g>
<g >
<title>sstables::regular_compaction::stop_sstable_writer (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1759.5" ></text>
</g>
<g >
<title>sstables::mc::writer::writer (1 samples, 0.03%; 0.00%)</title><rect x="1188.9" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.89" y="1951.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="100.5" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.54" y="623.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="130.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.60" y="1695.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="720.6" y="1877" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="723.60" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="116.5" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.50" y="1631.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (19 samples, 0.60%; +0.06%)</title><rect x="539.9" y="1829" width="7.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="542.89" y="1839.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.13%)</title><rect x="190.7" y="1909" width="1.5" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="193.71" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="68.6" y="245" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="99.8" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.80" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.4" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.35" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="74.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.19" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1615.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.03%; 0.00%)</title><rect x="672.4" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="675.36" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.82" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1413" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1423.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.08" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.21" y="1647.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.27" y="255.5" ></text>
</g>
<g >
<title>posix_memalign (11 samples, 0.35%; -0.03%)</title><rect x="373.3" y="1637" width="4.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="376.28" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1519.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (354 samples, 11.13%; -0.06%)</title><rect x="947.7" y="1797" width="131.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="950.69" y="1807.5" >service::storage..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.09" y="1663.5" ></text>
</g>
<g >
<title>make_combined_reader (37 samples, 1.16%; +0.25%)</title><rect x="565.9" y="1797" width="13.7" height="15.0" fill="rgb(255,80,80)" rx="2" ry="2" />
<text  x="568.86" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="14.5" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.45" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="60.8" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.84" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="68.3" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.26" y="79.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (3 samples, 0.09%; 0.00%)</title><rect x="16.3" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.31" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1407.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="76.4" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="79.42" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="40.4" y="325" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="43.43" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.03%; +0.03%)</title><rect x="156.9" y="1669" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="159.94" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.06%; 0.00%)</title><rect x="975.5" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="978.52" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="120.6" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.58" y="1647.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="789" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (2 samples, 0.06%; +0.03%)</title><rect x="66.4" y="357" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="69.40" y="367.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (3 samples, 0.09%; 0.00%)</title><rect x="223.7" y="1877" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="226.74" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="549" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::constant::constant (1 samples, 0.03%; +0.03%)</title><rect x="87.9" y="485" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="90.92" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="129.5" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.48" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="877.9" y="1829" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="880.93" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="1116.5" y="1701" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1119.53" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%; -0.03%)</title><rect x="621.5" y="1765" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="624.52" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (1 samples, 0.03%; +0.03%)</title><rect x="159.5" y="1925" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="162.54" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="119.1" y="1589" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="122.09" y="1599.5" ></text>
</g>
<g >
<title>table::query (3 samples, 0.09%; 0.00%)</title><rect x="1153.6" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.64" y="1919.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (9 samples, 0.28%; -0.03%)</title><rect x="703.5" y="1893" width="3.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="706.53" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.2" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="80.16" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,225 samples, 38.52%; +0.06%)</title><rect x="200.0" y="1893" width="454.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="202.99" y="1903.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.03%; 0.00%)</title><rect x="152.9" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.86" y="1919.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="94.2" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.23" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="98.7" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.69" y="495.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="818.6" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="821.56" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="43.8" y="261" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="46.77" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.03%; +0.03%)</title><rect x="159.2" y="1925" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="162.17" y="1935.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Storage&lt;cql3::expr::expression, false&gt;::_Storage&lt;cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="141.0" y="1637" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="143.99" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="82.4" y="293" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="85.36" y="303.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::file_data_sink_impl (1 samples, 0.03%; 0.00%)</title><rect x="719.9" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.86" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="335.5" ></text>
</g>
<g >
<title>table::seal_active_memtable (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="138.8" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.76" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="138.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.39" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.06%; -0.06%)</title><rect x="628.2" y="1797" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="631.20" y="1807.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (37 samples, 1.16%; -0.22%)</title><rect x="363.6" y="1669" width="13.8" height="15.0" fill="rgb(96,96,255)" rx="2" ry="2" />
<text  x="366.63" y="1679.5" ></text>
</g>
<g >
<title>do_cql_test (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="597" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="607.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.35%; -0.03%)</title><rect x="254.5" y="1861" width="4.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="257.53" y="1871.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base&lt;cql3::expr::expression&gt; (2 samples, 0.06%; 0.00%)</title><rect x="140.6" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="723.6" y="1893" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="726.57" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1973" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1983.5" >[unknown]</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="837" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="847.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="81.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.62" y="415.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="721.0" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.97" y="1855.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.03%; 0.00%)</title><rect x="1117.3" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.27" y="1663.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="134.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.68" y="1663.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.11" y="1871.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="125.8" y="1509" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="128.77" y="1519.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (11 samples, 0.35%; +0.22%)</title><rect x="598.9" y="1765" width="4.1" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="601.89" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="17.8" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.79" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="390.0" y="1717" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="392.97" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.95" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; -0.03%)</title><rect x="544.7" y="1797" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="547.71" y="1807.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; -0.13%)</title><rect x="528.4" y="1797" width="2.2" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="531.38" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1621" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1631.5" >[unknown]</text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.42" y="1631.5" ></text>
</g>
<g >
<title>create_partitions (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="581" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="116.9" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.87" y="1615.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (33 samples, 1.04%; 0.00%)</title><rect x="883.5" y="1781" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.50" y="1791.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="102.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.40" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1045" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1055.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.16%; 0.00%)</title><rect x="127.6" y="1621" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.63" y="1631.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (39 samples, 1.23%; +0.22%)</title><rect x="1011.1" y="1669" width="14.5" height="15.0" fill="rgb(255,96,96)" rx="2" ry="2" />
<text  x="1014.14" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="49.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.70" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; +0.03%)</title><rect x="44.1" y="341" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="47.14" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="67.9" y="181" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.89" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; +0.03%)</title><rect x="21.5" y="245" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="24.50" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (3 samples, 0.09%; +0.03%)</title><rect x="1155.5" y="1893" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1158.49" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (4 samples, 0.13%; -0.13%)</title><rect x="309.5" y="1749" width="1.4" height="15.0" fill="rgb(145,145,255)" rx="2" ry="2" />
<text  x="312.45" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="64.5" y="309" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.55" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (32 samples, 1.01%; 0.00%)</title><rect x="64.2" y="405" width="11.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.18" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="99.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.43" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.03%; +0.03%)</title><rect x="380.7" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="383.70" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (11 samples, 0.35%; +0.06%)</title><rect x="995.9" y="1669" width="4.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="998.93" y="1679.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="121.7" y="1525" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="124.69" y="1535.5" ></text>
</g>
<g >
<title>schema::get_sharder (1 samples, 0.03%; +0.03%)</title><rect x="1117.3" y="1637" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1120.27" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="50.4" y="277" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.45" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::back (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.03%)</title><rect x="619.3" y="1749" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="622.30" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="1096.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1099.12" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.03%)</title><rect x="397.0" y="1781" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="400.03" y="1791.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (2 samples, 0.06%; +0.06%)</title><rect x="833.8" y="1797" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="836.77" y="1807.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="747.7" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.69" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.25%; -0.03%)</title><rect x="971.8" y="1717" width="3.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="974.81" y="1727.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.09%; +0.03%)</title><rect x="643.0" y="1781" width="1.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="646.04" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="93.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.49" y="415.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (2 samples, 0.06%; 0.00%)</title><rect x="153.6" y="1957" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.60" y="1967.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.03%; 0.00%)</title><rect x="861.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.23" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="152.9" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.86" y="1903.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.03%; +0.03%)</title><rect x="746.9" y="1893" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="749.94" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="126.5" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.52" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.65" y="719.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="100.9" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.91" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~deque (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (18 samples, 0.57%; -0.03%)</title><rect x="887.6" y="1749" width="6.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="890.58" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1941" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1951.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (2 samples, 0.06%; 0.00%)</title><rect x="98.7" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.69" y="431.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.03%; +0.03%)</title><rect x="187.4" y="1733" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="190.37" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="71.2" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.23" y="207.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="109.1" y="1829" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="112.08" y="1839.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="1086.1" y="1797" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1089.10" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="156.9" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.94" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; 0.00%)</title><rect x="20.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.02" y="287.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="73.5" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.45" y="351.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional&lt;cql3::expr::expression, true&gt; (3 samples, 0.09%; +0.03%)</title><rect x="140.2" y="1701" width="1.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="143.25" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (3 samples, 0.09%; 0.00%)</title><rect x="861.2" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.23" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="974.8" y="1749" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="977.78" y="1759.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="941.0" y="1813" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="944.01" y="1823.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.03%; +0.03%)</title><rect x="1155.1" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1158.12" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.9" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.94" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%; +0.03%)</title><rect x="20.4" y="277" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="23.39" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="20.8" y="229" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="23.76" y="239.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (14 samples, 0.44%; 0.00%)</title><rect x="10.7" y="517" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="527.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; +0.03%)</title><rect x="1108.7" y="1733" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1111.74" y="1743.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.79" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="11.1" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.11" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.11" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.80%; 0.00%)</title><rect x="10.4" y="1365" width="92.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1375.5" >[unknown]</text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.03%; 0.00%)</title><rect x="1157.0" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.97" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="125.0" y="1621" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="128.03" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%; +0.03%)</title><rect x="1025.6" y="1669" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1028.62" y="1679.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="511.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.16%)</title><rect x="397.0" y="1797" width="1.1" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="400.03" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="335.5" ></text>
</g>
<g >
<title>dht::shard_of (2 samples, 0.06%; -0.03%)</title><rect x="987.8" y="1701" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="990.77" y="1711.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (84 samples, 2.64%; 0.00%)</title><rect x="1001.1" y="1701" width="31.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1004.13" y="1711.5" >se..</text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.03%; 0.00%)</title><rect x="187.4" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.37" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.19%; 0.00%)</title><rect x="654.5" y="1893" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.55" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (8 samples, 0.25%; 0.00%)</title><rect x="67.5" y="309" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.52" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="885" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="895.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="54.9" y="341" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="57.90" y="351.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="1049.4" y="1733" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1052.36" y="1743.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="92.4" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.38" y="319.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.83%; 0.00%)</title><rect x="10.4" y="1701" width="92.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1711.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.3" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.31" y="1711.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.09%; +0.06%)</title><rect x="779.2" y="1813" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="782.23" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="102.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.03" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result_set&gt; &gt;, db::system_keyspace::query (1 samples, 0.03%; 0.00%)</title><rect x="656.8" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.77" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; +0.09%)</title><rect x="1029.0" y="1669" width="3.3" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1031.96" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="827.5" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="830.47" y="1759.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="847.9" y="1861" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="850.87" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.84" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.74" y="1855.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="152.9" y="1973" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.86" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="125.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.03" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; 0.00%)</title><rect x="639.7" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="642.70" y="1791.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="51.6" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.56" y="415.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.60" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; -0.03%)</title><rect x="514.7" y="1813" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="517.65" y="1823.5" ></text>
</g>
<g >
<title>visit&lt;abstract_type::get_string (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.60" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (34 samples, 1.07%; +0.09%)</title><rect x="211.1" y="1877" width="12.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="214.12" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="128.4" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.37" y="1567.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="13.3" y="229" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="16.34" y="239.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="142.5" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.47" y="1935.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (3 samples, 0.09%; 0.00%)</title><rect x="106.1" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.11" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="12.6" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.62" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.03%)</title><rect x="886.5" y="1733" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="889.47" y="1743.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="860.5" y="1781" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="863.49" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="139.5" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.50" y="1631.5" ></text>
</g>
</g>
</svg>
