<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1814" onload="init(evt)" viewBox="0 0 1200 1814" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1814.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1797" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1797" > </text>
<g id="frames">
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="987.3" y="1317" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="990.27" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="789" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="799.5" >[unknown]</text>
</g>
<g >
<title>[perf_simple_query_flame_fd1596171e2adf1d6a1bd2abbc1d76b17b98ea7c] (2 samples, 0.06%; +0.06%)</title><rect x="452.2" y="1477" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="455.22" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="699.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="702.28" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="1110.4" y="1349" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1113.42" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="111.6" y="1173" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1183.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.06%; -0.06%)</title><rect x="526.1" y="1477" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="529.11" y="1487.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; -0.03%)</title><rect x="672.8" y="1573" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="675.76" y="1583.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="100.9" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="103.94" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.3" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1183.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="309" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="690.9" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="693.94" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="239.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1013" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1023.5" >[unknown]</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="113.1" y="1029" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.07" y="1039.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.06%)</title><rect x="645.1" y="1589" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="648.09" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="335.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="163.1" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="166.09" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="42.6" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.59" y="191.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,640 samples, 84.78%; +0.29%)</title><rect x="148.7" y="1621" width="1000.4" height="15.0" fill="rgb(255,75,75)" rx="2" ry="2" />
<text  x="151.69" y="1631.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.03%; +0.03%)</title><rect x="70.6" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="73.63" y="479.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="406.0" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="408.99" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1183.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="581" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%; +0.03%)</title><rect x="726.9" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="729.94" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (3 samples, 0.10%; +0.06%)</title><rect x="599.6" y="1461" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="602.62" y="1471.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (48 samples, 1.54%; 0.00%)</title><rect x="876.6" y="1477" width="18.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="879.62" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="60.4" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.50" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1439.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="1116.5" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1119.49" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="39.9" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.94" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.10%)</title><rect x="934.6" y="1461" width="2.7" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="937.60" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1183.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (56 samples, 1.80%; +0.16%)</title><rect x="874.3" y="1509" width="21.3" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="877.35" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="159.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (3 samples, 0.10%; 0.00%)</title><rect x="90.0" y="1493" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.96" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="54.0" y="101" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="56.96" y="111.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; -0.10%)</title><rect x="193.8" y="1573" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="196.78" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 3.28%; 0.00%)</title><rect x="10.4" y="517" width="38.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="527.5" >[un..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="100.2" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.19" y="1375.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="437" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="447.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="581" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="591.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1397" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (2 samples, 0.06%; +0.06%)</title><rect x="857.3" y="1573" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="860.30" y="1583.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; 0.00%)</title><rect x="40.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.31" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.03%; +0.03%)</title><rect x="846.7" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="849.69" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; -0.03%)</title><rect x="308.2" y="1413" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="311.22" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (87 samples, 2.79%; 0.00%)</title><rect x="14.9" y="325" width="33.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.93" y="335.5" >cq..</text>
</g>
<g >
<title>db::get_cdc_streams_descriptions_v2_mutation (1 samples, 0.03%; 0.00%)</title><rect x="173.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.32" y="1583.5" ></text>
</g>
<g >
<title>row::append_cell (2 samples, 0.06%; 0.00%)</title><rect x="1102.8" y="1445" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.85" y="1455.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="517" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="527.5" ></text>
</g>
<g >
<title>auth::resource::resource (6 samples, 0.19%; +0.06%)</title><rect x="781.5" y="1509" width="2.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="784.51" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="405" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="415.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.13%; +0.10%)</title><rect x="1019.9" y="1397" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1022.86" y="1407.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="916.0" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="919.03" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="120.6" y="1381" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="123.65" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1247.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="405" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="76.3" y="341" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="79.31" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="319.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1125" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1135.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="719.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1167.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (24 samples, 0.77%; -0.03%)</title><rect x="1096.4" y="1589" width="9.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1099.40" y="1599.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="319.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.10%)</title><rect x="812.2" y="1477" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="815.20" y="1487.5" ></text>
</g>
<g >
<title>create_partitions (6 samples, 0.19%; -0.03%)</title><rect x="49.0" y="437" width="2.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="52.03" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (11 samples, 0.35%; +0.03%)</title><rect x="1080.5" y="1509" width="4.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1083.49" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="831.5" y="1557" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="834.53" y="1567.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="124.1" y="1317" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="127.06" y="1327.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (7 samples, 0.22%; +0.03%)</title><rect x="27.4" y="181" width="2.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="30.43" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1109" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1119.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="469" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="479.5" ></text>
</g>
<g >
<title>auth::get_permissions (4 samples, 0.13%; 0.00%)</title><rect x="91.5" y="1493" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.47" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="97.9" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.91" y="1375.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; -0.03%)</title><rect x="602.3" y="1493" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="605.27" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%; 0.00%)</title><rect x="1096.8" y="1557" width="8.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1099.78" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="245" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1029" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1039.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.03%; +0.03%)</title><rect x="1103.6" y="1429" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1106.60" y="1439.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.35%; -0.10%)</title><rect x="165.4" y="1573" width="4.1" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="168.36" y="1583.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="123.3" y="1125" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1135.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="453" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="303.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.35" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1269" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1279.5" >[unknown]</text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="1111.6" y="1301" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1114.56" y="1311.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="49.4" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.41" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="85.4" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.41" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="239.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.03%; -0.03%)</title><rect x="494.7" y="1509" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="497.66" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (13 samples, 0.42%; 0.00%)</title><rect x="104.4" y="1301" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.35" y="1311.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.03%)</title><rect x="535.6" y="1525" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="538.58" y="1535.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="66.1" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.08" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="159.7" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="162.68" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; -0.06%)</title><rect x="593.6" y="1445" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="596.56" y="1455.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="109.3" y="1349" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="112.28" y="1359.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="39.9" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.94" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1567.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.03" y="623.5" ></text>
</g>
<g >
<title>cql3::constants::value::~value (1 samples, 0.03%; 0.00%)</title><rect x="655.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.32" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="138.8" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="141.84" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="18.0" y="69" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.96" y="79.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1125" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; +0.03%)</title><rect x="69.5" y="229" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="72.49" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="106.6" y="1173" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.63" y="1183.5" ></text>
</g>
<g >
<title>query_state::query_state (7 samples, 0.22%; -0.16%)</title><rect x="626.1" y="1557" width="2.7" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="629.15" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="191.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.03%)</title><rect x="689.4" y="1589" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="692.43" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1215.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (11 samples, 0.35%; -0.03%)</title><rect x="839.9" y="1445" width="4.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="842.87" y="1455.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.03%)</title><rect x="158.9" y="1589" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="161.92" y="1599.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1343.5" ></text>
</g>
<g >
<title>row_cache::make_reader (1 samples, 0.03%; +0.03%)</title><rect x="542.4" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="545.40" y="1535.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; 0.00%)</title><rect x="539.4" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="542.37" y="1551.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="61.2" y="101" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="64.16" y="111.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; -0.03%)</title><rect x="116.1" y="1381" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="119.10" y="1391.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="139.6" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="142.60" y="1599.5" ></text>
</g>
<g >
<title>create_partitions (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1621" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1631.5" >cr..</text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; 0.00%)</title><rect x="1148.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.70" y="1583.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.03%; 0.00%)</title><rect x="178.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="415.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (3 samples, 0.10%; +0.06%)</title><rect x="849.3" y="1477" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="852.34" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="169.5" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="172.53" y="1583.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.35%; 0.00%)</title><rect x="303.3" y="1413" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="306.29" y="1423.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="70.3" y="149" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="73.25" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="48.7" y="373" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="51.65" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="127.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.03%; +0.03%)</title><rect x="179.4" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="182.38" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.10%)</title><rect x="924.7" y="1493" width="2.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="927.75" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.76" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (358 samples, 11.50%; +0.03%)</title><rect x="261.2" y="1509" width="135.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="264.23" y="1519.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>bytes_ostream::alloc_new (5 samples, 0.16%; -0.03%)</title><rect x="626.5" y="1541" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="629.53" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="84.6" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="87.65" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1295.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="49.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (175 samples, 5.62%; +0.03%)</title><rect x="309.0" y="1429" width="66.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="311.98" y="1439.5" >partiti..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="239.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; +0.03%)</title><rect x="596.6" y="1445" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="599.59" y="1455.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (4 samples, 0.13%; +0.10%)</title><rect x="907.3" y="1493" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="910.32" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="479.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="357" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="122.5" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1295.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (17 samples, 0.55%; +0.13%)</title><rect x="87.3" y="1573" width="6.4" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="90.30" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="421" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="431.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (3 samples, 0.10%; +0.03%)</title><rect x="11.9" y="405" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="14.89" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (62 samples, 1.99%; 0.00%)</title><rect x="15.7" y="277" width="23.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.68" y="287.5" >a..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.06%; 0.00%)</title><rect x="19.5" y="117" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.47" y="127.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (23 samples, 0.74%; +0.03%)</title><rect x="162.3" y="1589" width="8.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="165.33" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="623.1" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="626.11" y="1471.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="66.5" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="125.2" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.20" y="1375.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (1 samples, 0.03%; 0.00%)</title><rect x="839.5" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.49" y="1503.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (1 samples, 0.03%; +0.03%)</title><rect x="636.4" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="639.38" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (12 samples, 0.39%; +0.13%)</title><rect x="667.8" y="1557" width="4.6" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="670.83" y="1567.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.98" y="255.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="98.7" y="1349" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.67" y="1359.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.03%)</title><rect x="1115.7" y="1605" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1118.73" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1509" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1519.5" >cq..</text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; +0.03%)</title><rect x="1113.8" y="1381" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1116.83" y="1391.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.03%; +0.03%)</title><rect x="551.9" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="554.88" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="111.6" y="1221" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1231.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1429" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1439.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1311.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="399.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (4 samples, 0.13%; 0.00%)</title><rect x="75.2" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.18" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (359 samples, 11.53%; +0.16%)</title><rect x="938.8" y="1477" width="136.0" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="941.77" y="1487.5" >service::storage_..</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_error (1 samples, 0.03%; +0.03%)</title><rect x="22.1" y="197" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="25.13" y="207.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.03%; +0.03%)</title><rect x="1151.3" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1154.35" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="121.8" y="1429" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1109" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1119.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="83.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.51" y="431.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (265 samples, 8.51%; -0.03%)</title><rect x="407.9" y="1525" width="100.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="410.88" y="1535.5" >seastar::do_..</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="111.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.10%; -0.03%)</title><rect x="458.3" y="1477" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="461.28" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1365" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.75" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1006.2" y="1317" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1009.22" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="63.8" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="66.81" y="127.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,176 samples, 37.76%; -0.10%)</title><rect x="187.3" y="1589" width="445.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="190.34" y="1599.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>cql3_parser::CqlParser::term (58 samples, 1.86%; -0.03%)</title><rect x="96.0" y="1429" width="22.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="99.02" y="1439.5" >c..</text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="130.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.50" y="1647.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.03%; +0.03%)</title><rect x="512.1" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="515.09" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; 0.00%)</title><rect x="845.9" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.93" y="1471.5" ></text>
</g>
<g >
<title>dht::tri_compare (21 samples, 0.67%; +0.26%)</title><rect x="1066.8" y="1381" width="8.0" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="1069.85" y="1391.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; -0.03%)</title><rect x="111.2" y="1365" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="114.18" y="1375.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.06%; +0.06%)</title><rect x="731.5" y="1589" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="734.49" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="392.0" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="394.97" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="223.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="533" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="308.6" y="1429" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="311.60" y="1439.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="76.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.69" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_pool::work (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; -0.10%)</title><rect x="834.6" y="1605" width="0.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="837.56" y="1615.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="324.5" y="1397" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="327.52" y="1407.5" ></text>
</g>
<g >
<title>__start_context (95 samples, 3.05%; 0.00%)</title><rect x="93.7" y="1701" width="36.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.74" y="1711.5" >__s..</text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="77.5" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.45" y="463.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="139.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.22" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="535.2" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="538.20" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="69" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="79.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (62 samples, 1.99%; 0.00%)</title><rect x="15.7" y="261" width="23.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.68" y="271.5" >a..</text>
</g>
<g >
<title>[unknown] (319 samples, 10.24%; 0.00%)</title><rect x="10.4" y="1717" width="120.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1727.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="159.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (3 samples, 0.10%; 0.00%)</title><rect x="90.0" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.96" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.87" y="207.5" ></text>
</g>
<g >
<title>__ftruncate64 (1 samples, 0.03%; +0.03%)</title><rect x="1189.6" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1192.62" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="813.3" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="816.34" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="94.5" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="97.50" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::signal (4 samples, 0.13%; +0.06%)</title><rect x="395.4" y="1493" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="398.38" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="383.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (3 samples, 0.10%; 0.00%)</title><rect x="840.6" y="1413" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.62" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="950.5" y="1381" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="953.51" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.51" y="319.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%; 0.00%)</title><rect x="1011.9" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1014.90" y="1391.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="130.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.50" y="1679.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::execute_direct (1 samples, 0.03%; +0.03%)</title><rect x="144.9" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="147.90" y="1631.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="42.2" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="799.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; +0.03%)</title><rect x="769.4" y="1493" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="772.38" y="1503.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="293" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="303.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%; +0.03%)</title><rect x="80.5" y="229" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="83.48" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%; +0.06%)</title><rect x="1137.7" y="1589" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1140.71" y="1599.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::create_cdc_desc (1 samples, 0.03%; 0.00%)</title><rect x="173.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.32" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="933" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="943.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (5 samples, 0.16%; +0.10%)</title><rect x="921.7" y="1509" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="924.71" y="1519.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (8 samples, 0.26%; 0.00%)</title><rect x="166.5" y="1557" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="169.50" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="100.6" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.57" y="1407.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; 0.00%)</title><rect x="845.9" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.93" y="1455.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="19.5" y="149" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.47" y="159.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; -0.13%)</title><rect x="371.5" y="1365" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="374.50" y="1375.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="62.7" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="65.67" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.16%; +0.10%)</title><rect x="891.4" y="1429" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="894.40" y="1439.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.03%; +0.03%)</title><rect x="37.7" y="229" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="40.66" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="874.0" y="1509" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="876.97" y="1519.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.10%; -0.03%)</title><rect x="132.0" y="1685" width="1.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="135.02" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="653.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="656.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="143.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::index (1 samples, 0.03%; +0.03%)</title><rect x="25.5" y="165" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="28.54" y="175.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="303.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1381" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1391.5" >[unknown]</text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result&lt;int&gt; &gt;::process (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="1679.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; 0.00%)</title><rect x="1084.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1087.28" y="1503.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1096.0" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1099.02" y="1551.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1205" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1215.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="13.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.79" y="335.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; -0.10%)</title><rect x="832.3" y="1541" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="835.29" y="1551.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; 0.00%)</title><rect x="914.9" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.89" y="1503.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.33" y="1343.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (628 samples, 20.17%; +0.10%)</title><rect x="858.4" y="1573" width="238.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="861.43" y="1583.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="100.2" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.19" y="1391.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (6 samples, 0.19%; 0.00%)</title><rect x="124.4" y="1397" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="52.8" y="213" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="55.82" y="223.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="128.6" y="1397" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="131.61" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="115.0" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1263.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="437" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.06%)</title><rect x="802.4" y="1445" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="805.35" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="207.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.03%)</title><rect x="601.5" y="1493" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="604.52" y="1503.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (3 samples, 0.10%; +0.10%)</title><rect x="519.7" y="1477" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="522.67" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="175.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1263.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="121.8" y="1221" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="124.79" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="885" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="895.5" >[unknown]</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; 0.00%)</title><rect x="592.4" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="595.42" y="1471.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1375.5" ></text>
</g>
<g >
<title>database::find_schema (10 samples, 0.32%; 0.00%)</title><rect x="817.1" y="1493" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="820.13" y="1503.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="14.2" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (8 samples, 0.26%; 0.00%)</title><rect x="1139.6" y="1573" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.60" y="1583.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.03%; +0.03%)</title><rect x="294.2" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="297.20" y="1487.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (22 samples, 0.71%; +0.16%)</title><rect x="764.5" y="1525" width="8.3" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="767.46" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="111.2" y="1333" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.18" y="1343.5" ></text>
</g>
<g >
<title>service::client_state::has_access (68 samples, 2.18%; 0.00%)</title><rect x="789.1" y="1509" width="25.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="792.09" y="1519.5" >s..</text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.06%; 0.00%)</title><rect x="328.3" y="1381" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="331.30" y="1391.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.10%; 0.00%)</title><rect x="66.1" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="101.3" y="1397" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="104.32" y="1407.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1397" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1407.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (2 samples, 0.06%; 0.00%)</title><rect x="38.4" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.42" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1295.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="52.1" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="1148.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.70" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (13 samples, 0.42%; +0.03%)</title><rect x="325.7" y="1397" width="4.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="328.65" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="20.6" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.61" y="159.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (1 samples, 0.03%; +0.03%)</title><rect x="179.8" y="1605" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="182.76" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1231.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="893.7" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="896.67" y="1471.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%; +0.03%)</title><rect x="178.6" y="1397" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="181.63" y="1407.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (16 samples, 0.51%; -0.03%)</title><rect x="230.5" y="1557" width="6.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="233.54" y="1567.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (3 samples, 0.10%; 0.00%)</title><rect x="849.3" y="1509" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.34" y="1519.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; 0.00%)</title><rect x="1131.3" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1134.27" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; -0.06%)</title><rect x="259.7" y="1525" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="262.72" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1141" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1151.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%; +0.03%)</title><rect x="1105.5" y="1493" width="8.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1108.50" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="287.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1045" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1055.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="642.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="645.82" y="1599.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::list_permissions_statement*, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.13" y="383.5" ></text>
</g>
<g >
<title>row::apply_monotonically (3 samples, 0.10%; 0.00%)</title><rect x="842.9" y="1429" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="845.90" y="1439.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (16 samples, 0.51%; +0.06%)</title><rect x="365.4" y="1349" width="6.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="368.44" y="1359.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.98" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.10%)</title><rect x="626.9" y="1509" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="629.90" y="1519.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (115 samples, 3.69%; -0.03%)</title><rect x="869.8" y="1525" width="43.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="872.80" y="1535.5" >cql3..</text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; +0.03%)</title><rect x="371.1" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="374.12" y="1343.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.03%; 0.00%)</title><rect x="59.6" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="100.2" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.19" y="1359.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (60 samples, 1.93%; 0.00%)</title><rect x="656.1" y="1605" width="22.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.08" y="1615.5" >s..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="40.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.31" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1391.5" ></text>
</g>
<g >
<title>make_combined_reader (38 samples, 1.22%; +0.16%)</title><rect x="549.6" y="1509" width="14.4" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="552.60" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="42.2" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="733.4" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="736.38" y="1583.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="19.5" y="133" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.47" y="143.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; -0.03%)</title><rect x="1133.5" y="1589" width="3.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1136.54" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="65.7" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="68.70" y="239.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; 0.00%)</title><rect x="883.1" y="1445" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.06" y="1455.5" ></text>
</g>
<g >
<title>database::query (11 samples, 0.35%; +0.16%)</title><rect x="174.1" y="1605" width="4.1" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="177.08" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.98" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1333" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1343.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.10%; 0.00%)</title><rect x="625.0" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="628.01" y="1519.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (1 samples, 0.03%; +0.03%)</title><rect x="849.0" y="1509" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="851.96" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; -0.03%)</title><rect x="111.6" y="1253" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="114.55" y="1263.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (10 samples, 0.32%; 0.00%)</title><rect x="55.9" y="373" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="383.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="826.2" y="1541" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="829.22" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.10%; 0.00%)</title><rect x="115.0" y="1301" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1311.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="56.6" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.61" y="207.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="159.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (2 samples, 0.06%; +0.03%)</title><rect x="313.1" y="1413" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="316.15" y="1423.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="39.6" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.56" y="287.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; 0.00%)</title><rect x="621.6" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="624.60" y="1455.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.03%; +0.03%)</title><rect x="146.4" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="149.42" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1269" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.10%; 0.00%)</title><rect x="115.0" y="1333" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (132 samples, 4.24%; 0.00%)</title><rect x="10.4" y="581" width="50.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="591.5" >[unkn..</text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; +0.03%)</title><rect x="19.5" y="85" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="22.47" y="95.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="191.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (4 samples, 0.13%; -0.03%)</title><rect x="622.0" y="1477" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="624.98" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (7 samples, 0.22%; 0.00%)</title><rect x="34.6" y="181" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.63" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1285" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1295.5" ></text>
</g>
<g >
<title>main (2,657 samples, 85.32%; 0.00%)</title><rect x="144.1" y="1717" width="1006.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.14" y="1727.5" >main</text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.03%; 0.00%)</title><rect x="1150.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.21" y="1567.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="18.0" y="37" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="20.96" y="47.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="110.4" y="1317" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="113.42" y="1327.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="651.2" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="654.16" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="383.5" ></text>
</g>
<g >
<title>frozen_mutation::column_family_id (1 samples, 0.03%; +0.03%)</title><rect x="1105.1" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1108.12" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="76.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.69" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="42.2" y="229" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="239.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="841.8" y="1413" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="844.76" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.98" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%; +0.03%)</title><rect x="706.9" y="1589" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="709.86" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1391.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.94" y="1391.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; -0.06%)</title><rect x="822.1" y="1493" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="825.06" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (419 samples, 13.46%; +0.16%)</title><rect x="916.8" y="1525" width="158.8" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="919.79" y="1535.5" >cql3::statements::se..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.38" y="431.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; +0.03%)</title><rect x="933.8" y="1477" width="3.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="936.84" y="1487.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (3 samples, 0.10%; -0.03%)</title><rect x="110.0" y="1349" width="1.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="113.04" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.03%)</title><rect x="936.9" y="1445" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="939.87" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (2 samples, 0.06%; +0.03%)</title><rect x="67.2" y="341" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="70.22" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="46.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.00" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; +0.03%)</title><rect x="58.5" y="197" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="61.50" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; -0.03%)</title><rect x="106.2" y="1141" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="109.25" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1653" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1663.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.03%; 0.00%)</title><rect x="85.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.41" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="121.4" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.41" y="1439.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_fd1596171e2adf1d6a1bd2abbc1d76b17b98ea7c] (1 samples, 0.03%; +0.03%)</title><rect x="887.6" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="890.61" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="42.2" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="159.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.03%)</title><rect x="908.8" y="1509" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="911.83" y="1519.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (13 samples, 0.42%; +0.06%)</title><rect x="767.9" y="1509" width="4.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="770.87" y="1519.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="437" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (1 samples, 0.03%; -0.03%)</title><rect x="293.8" y="1461" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="296.82" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (13 samples, 0.42%; 0.00%)</title><rect x="39.2" y="293" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="57.7" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.75" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="1084.7" y="1509" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1087.66" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="124.4" y="1333" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1343.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; -0.03%)</title><rect x="1009.2" y="1333" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1012.25" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.10%; 0.00%)</title><rect x="115.0" y="1349" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1541" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1551.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1077" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1087.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="866.8" y="1525" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="869.77" y="1535.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.06%; -0.03%)</title><rect x="94.1" y="1605" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="97.12" y="1615.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (2 samples, 0.06%; +0.03%)</title><rect x="71.0" y="437" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="74.01" y="447.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="421" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="431.5" ></text>
</g>
<g >
<title>service::client_state::has_access (5 samples, 0.16%; +0.03%)</title><rect x="91.1" y="1525" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="94.09" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="191.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (22 samples, 0.71%; +0.19%)</title><rect x="637.9" y="1605" width="8.3" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="640.89" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="597" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt;, true, true&gt;::__uniq_ptr_data (2 samples, 0.06%; 0.00%)</title><rect x="44.5" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.48" y="287.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.03%; -0.06%)</title><rect x="586.0" y="1477" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="588.98" y="1487.5" ></text>
</g>
<g >
<title>all (3,114 samples, 100%)</title><rect x="10.0" y="1765" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="52.8" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.82" y="255.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (2 samples, 0.06%; -0.03%)</title><rect x="139.6" y="1653" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="142.60" y="1663.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; +0.03%)</title><rect x="91.8" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="94.85" y="1471.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.03%; 0.00%)</title><rect x="575.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="577.99" y="1503.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="732.2" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="735.25" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="19.5" y="165" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.47" y="175.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="97.2" y="1349" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="100.15" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.06%)</title><rect x="1136.2" y="1573" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1139.19" y="1583.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_nextChar (1 samples, 0.03%; +0.03%)</title><rect x="24.4" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="27.40" y="191.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (7 samples, 0.22%; +0.10%)</title><rect x="823.2" y="1525" width="2.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="826.19" y="1535.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (10 samples, 0.32%; +0.06%)</title><rect x="381.7" y="1429" width="3.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="384.73" y="1439.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; 0.00%)</title><rect x="487.8" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="490.84" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.12" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (7 samples, 0.22%; 0.00%)</title><rect x="52.8" y="293" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.82" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1247.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_input (1 samples, 0.03%; +0.03%)</title><rect x="25.9" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="28.92" y="191.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1247.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.0" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.97" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="207.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.03%; 0.00%)</title><rect x="179.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.00" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; 0.00%)</title><rect x="318.1" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="321.07" y="1407.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (3 samples, 0.10%; 0.00%)</title><rect x="90.0" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.96" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="645.9" y="1589" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="648.85" y="1599.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="124.4" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1375.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (18 samples, 0.58%; -0.06%)</title><rect x="245.7" y="1557" width="6.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="248.70" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; -0.03%)</title><rect x="672.4" y="1557" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="675.38" y="1567.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%; +0.03%)</title><rect x="828.5" y="1541" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="831.50" y="1551.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="675.8" y="1573" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="678.79" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1685" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1695.5" >[unknown]</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="14.2" y="181" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="17.17" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (2 samples, 0.06%; 0.00%)</title><rect x="96.8" y="1381" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.78" y="1391.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.13%; +0.10%)</title><rect x="1090.0" y="1525" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1092.96" y="1535.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; -0.03%)</title><rect x="562.9" y="1493" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="565.86" y="1503.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (5 samples, 0.16%; +0.10%)</title><rect x="480.3" y="1509" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="483.26" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.03%; -0.03%)</title><rect x="836.8" y="1509" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="839.83" y="1519.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (6 samples, 0.19%; 0.00%)</title><rect x="106.6" y="1221" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.63" y="1231.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="127.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; +0.03%)</title><rect x="781.1" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="784.13" y="1519.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.03%; 0.00%)</title><rect x="90.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.33" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.03%; +0.03%)</title><rect x="16.4" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="19.44" y="127.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1327.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1573" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1583.5" >cq..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.87" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1311.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.29%; -0.10%)</title><rect x="1041.1" y="1429" width="3.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1044.08" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="821" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="831.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%; +0.03%)</title><rect x="937.3" y="1477" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="940.25" y="1487.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%; +0.03%)</title><rect x="614.0" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="617.02" y="1503.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="40.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.31" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="962.3" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="965.26" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (3 samples, 0.10%; +0.10%)</title><rect x="1007.4" y="1333" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1010.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1237" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1247.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="527.2" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="530.24" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1142.3" y="1557" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1145.25" y="1567.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.16%)</title><rect x="675.0" y="1589" width="1.2" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="678.03" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1413" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="121.4" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.41" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1295.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.03%)</title><rect x="180.1" y="1605" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="183.14" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="68.7" y="325" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="71.73" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="39.6" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.56" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.3" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1199.5" ></text>
</g>
<g >
<title>dht::shard_of (3 samples, 0.10%; +0.03%)</title><rect x="977.4" y="1397" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="980.42" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="1115.0" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.97" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="127.1" y="1397" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1407.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.03%; 0.00%)</title><rect x="1100.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.57" y="1439.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.59" y="1375.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (20 samples, 0.64%; +0.13%)</title><rect x="528.0" y="1525" width="7.6" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="531.00" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.03%; +0.03%)</title><rect x="55.9" y="213" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="58.85" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (625 samples, 20.07%; 0.00%)</title><rect x="859.6" y="1557" width="236.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="862.57" y="1567.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="127.1" y="1093" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="130.09" y="1103.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="923.2" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="926.23" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1189" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1199.5" ></text>
</g>
<g >
<title>row::external_memory_usage (25 samples, 0.80%; -0.06%)</title><rect x="331.3" y="1397" width="9.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="334.34" y="1407.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="1111.2" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1114.18" y="1343.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="929.3" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="932.29" y="1503.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; -0.03%)</title><rect x="1037.7" y="1429" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1040.67" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.87" y="143.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.16%; 0.00%)</title><rect x="1108.5" y="1301" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.53" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.35%; 0.00%)</title><rect x="958.1" y="1429" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="961.09" y="1439.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1599.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="79.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (16 samples, 0.51%; -0.06%)</title><rect x="103.2" y="1349" width="6.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="106.22" y="1359.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.26%; 0.00%)</title><rect x="138.1" y="1685" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.08" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (3 samples, 0.10%; 0.00%)</title><rect x="849.3" y="1493" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.34" y="1503.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="622.4" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="625.36" y="1471.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.19%)</title><rect x="1085.4" y="1525" width="0.8" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="1088.41" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1215.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="116.9" y="1269" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1279.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="100.2" y="1317" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="103.19" y="1327.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="113.8" y="1381" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.83" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1263.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.1" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.12" y="255.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (1 samples, 0.03%; +0.03%)</title><rect x="678.8" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="681.82" y="1583.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (20 samples, 0.64%; +0.26%)</title><rect x="899.7" y="1493" width="7.6" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="902.74" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1615.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="80.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.10" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.55" y="175.5" ></text>
</g>
<g >
<title>[[vdso]] (31 samples, 1.00%; +0.35%)</title><rect x="1154.0" y="1717" width="11.7" height="15.0" fill="rgb(255,45,45)" rx="2" ry="2" />
<text  x="1157.00" y="1727.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.03%; 0.00%)</title><rect x="140.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.73" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (2 samples, 0.06%; 0.00%)</title><rect x="13.4" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.41" y="351.5" ></text>
</g>
<g >
<title>database::apply_in_memory (18 samples, 0.58%; +0.06%)</title><rect x="1097.2" y="1509" width="6.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1100.16" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.59" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="207.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.03%; 0.00%)</title><rect x="75.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.93" y="351.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="836.8" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="839.83" y="1471.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="300.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.64" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1263.5" ></text>
</g>
<g >
<title>db::schema_tables::feed_hash_for_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="399.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.06%)</title><rect x="803.1" y="1445" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="806.11" y="1455.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (15 samples, 0.48%; 0.00%)</title><rect x="131.6" y="1717" width="5.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.64" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.16%; +0.10%)</title><rect x="399.5" y="1525" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="402.54" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="175.5" ></text>
</g>
<g >
<title>__start_context (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="533" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="543.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.1" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.12" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="213" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="139.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.22" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="351.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.03%; 0.00%)</title><rect x="1102.1" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.09" y="1439.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="335.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="106.6" y="1189" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.63" y="1199.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="373" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="676.2" y="1589" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="679.17" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="159.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; 0.00%)</title><rect x="1148.7" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.70" y="1535.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.21" y="1327.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%; -0.03%)</title><rect x="1105.5" y="1509" width="8.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1108.50" y="1519.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="437" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="239.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (4 samples, 0.13%; 0.00%)</title><rect x="329.1" y="1381" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="332.06" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1327.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="833.0" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="836.04" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1343.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="747.0" y="1573" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="750.03" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (8 samples, 0.26%; 0.00%)</title><rect x="822.8" y="1541" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="825.81" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="787.6" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="790.57" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1125" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1135.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="661" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.03" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="168.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.02" y="1535.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="48.7" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.65" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; +0.03%)</title><rect x="89.2" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="92.20" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.06%)</title><rect x="950.1" y="1429" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="953.13" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.03%; +0.03%)</title><rect x="1189.2" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1192.24" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="927.0" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="930.02" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::io_getevents (1 samples, 0.03%; 0.00%)</title><rect x="1149.5" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.45" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (3 samples, 0.10%; 0.00%)</title><rect x="115.0" y="1269" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1279.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_construct&lt;cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1295.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="495.5" ></text>
</g>
<g >
<title>table::apply (15 samples, 0.48%; 0.00%)</title><rect x="1098.3" y="1493" width="5.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.30" y="1503.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1695.5" ></text>
</g>
<g >
<title>create_partitions (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="501" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; -0.03%)</title><rect x="493.9" y="1493" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="496.90" y="1503.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%; +0.03%)</title><rect x="38.8" y="213" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="41.80" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.06%)</title><rect x="597.0" y="1429" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="599.97" y="1439.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (16 samples, 0.51%; +0.22%)</title><rect x="276.0" y="1477" width="6.1" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="279.01" y="1487.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="586.4" y="1477" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="589.36" y="1487.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (13 samples, 0.42%; +0.03%)</title><rect x="104.4" y="1285" width="4.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="107.35" y="1295.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.03%; +0.03%)</title><rect x="145.3" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="148.28" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="76.7" y="293" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="79.69" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="651.2" y="1541" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="654.16" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (1 samples, 0.03%; +0.03%)</title><rect x="1017.6" y="1381" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1020.59" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1109" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1119.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="853" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="863.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1093" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1103.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.03" y="575.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.13%; 0.00%)</title><rect x="626.9" y="1525" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.90" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="453" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="463.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="48.3" y="389" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="51.27" y="399.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.26%; +0.10%)</title><rect x="237.0" y="1557" width="3.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="239.98" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (31 samples, 1.00%; 0.00%)</title><rect x="118.0" y="1461" width="11.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1269" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1279.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_type_statement, std::default_delete&lt;cql3::statements::drop_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_type_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.62" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="841.0" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="844.00" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="562.1" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="565.11" y="1487.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (2 samples, 0.06%; 0.00%)</title><rect x="178.2" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="610.6" y="1493" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="613.61" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="1010.8" y="1349" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1013.76" y="1359.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (8 samples, 0.26%; 0.00%)</title><rect x="74.0" y="437" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.04" y="447.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (3 samples, 0.10%; +0.10%)</title><rect x="730.0" y="1557" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="732.97" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1263.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (2 samples, 0.06%; +0.03%)</title><rect x="1010.0" y="1349" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1013.01" y="1359.5" ></text>
</g>
<g >
<title>schema_registry::get (11 samples, 0.35%; -0.13%)</title><rect x="950.9" y="1461" width="4.2" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="953.89" y="1471.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (69 samples, 2.22%; +0.29%)</title><rect x="1048.7" y="1413" width="26.1" height="15.0" fill="rgb(255,75,75)" rx="2" ry="2" />
<text  x="1051.66" y="1423.5" >l..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="99.0" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.05" y="1359.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%; +0.03%)</title><rect x="1112.7" y="1365" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1115.70" y="1375.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (45 samples, 1.45%; -0.16%)</title><rect x="584.5" y="1493" width="17.0" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="587.46" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="58.5" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.50" y="303.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (9 samples, 0.29%; +0.03%)</title><rect x="1091.5" y="1509" width="3.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1094.48" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="432.1" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="435.13" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;float  (1 samples, 0.03%; +0.03%)</title><rect x="1150.2" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1153.21" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (14 samples, 0.45%; +0.03%)</title><rect x="1107.0" y="1381" width="5.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1110.01" y="1391.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; +0.03%)</title><rect x="249.1" y="1541" width="2.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="252.11" y="1551.5" ></text>
</g>
<g >
<title>cql3::cf_name::~cf_name (1 samples, 0.03%; 0.00%)</title><rect x="40.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.69" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (1 samples, 0.03%; +0.03%)</title><rect x="636.8" y="1605" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="639.76" y="1615.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; +0.03%)</title><rect x="643.2" y="1589" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="646.20" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="303.5" ></text>
</g>
<g >
<title>do_cql_test (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="565" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="127.5" y="1221" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="130.47" y="1231.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::list_permissions_statement*, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="83.1" y="357" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="86.13" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="917" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="927.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; 0.00%)</title><rect x="63.1" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.05" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="59.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="319.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; -0.03%)</title><rect x="54.3" y="197" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="57.34" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="20.6" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.61" y="143.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="39.2" y="85" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="42.18" y="95.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::alter_type_statement*, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="44.5" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.48" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="98.7" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.67" y="1375.5" ></text>
</g>
<g >
<title>abstract_type::from_string (5 samples, 0.16%; 0.00%)</title><rect x="71.8" y="389" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.77" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="653.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="656.81" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (25 samples, 0.80%; 0.00%)</title><rect x="839.1" y="1509" width="9.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.11" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.50" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="113.8" y="1301" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.83" y="1311.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.65" y="1439.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="22.5" y="197" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="25.50" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; -0.03%)</title><rect x="124.4" y="1269" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="127.44" y="1279.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="179.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.38" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1109" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1119.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; +0.03%)</title><rect x="13.0" y="405" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="16.03" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; 0.00%)</title><rect x="725.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.81" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="106.6" y="1157" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.63" y="1167.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="837.2" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="840.21" y="1583.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; +0.03%)</title><rect x="873.2" y="1509" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="876.21" y="1519.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; 0.00%)</title><rect x="1148.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.70" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3 samples, 0.10%; 0.00%)</title><rect x="115.0" y="1285" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1295.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (2 samples, 0.06%; -0.03%)</title><rect x="317.3" y="1397" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="320.32" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="116.9" y="1349" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1359.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; -0.03%)</title><rect x="559.1" y="1477" width="2.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="562.08" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (16 samples, 0.51%; 0.00%)</title><rect x="71.0" y="453" width="6.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="116.9" y="1301" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1311.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (2 samples, 0.06%; +0.03%)</title><rect x="81.2" y="405" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="84.24" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="485" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="495.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.03%; +0.03%)</title><rect x="15.3" y="309" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="18.31" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1205" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (197 samples, 6.33%; 0.00%)</title><rect x="10.4" y="645" width="74.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="655.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.9" y="1061" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="1071.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (1 samples, 0.03%; +0.03%)</title><rect x="12.7" y="389" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="15.65" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="1088.1" y="1445" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1091.07" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1429" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1439.5" >[unknown]</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (2 samples, 0.06%; 0.00%)</title><rect x="139.6" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.60" y="1647.5" ></text>
</g>
<g >
<title>std::locale::_S_initialize (1 samples, 0.03%; +0.03%)</title><rect x="143.0" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="146.01" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="277" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="52.8" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.82" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.71" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (4 samples, 0.13%; 0.00%)</title><rect x="1149.5" y="1605" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.45" y="1615.5" ></text>
</g>
<g >
<title>fmt::v7::detail::iterator_buffer&lt;seastar::internal::log_buf::inserter_iterator, char, fmt::v7::detail::buffer_traits&gt;::grow (1 samples, 0.03%; +0.03%)</title><rect x="130.1" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="133.12" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1333" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1343.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; 0.00%)</title><rect x="733.8" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="736.76" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="933" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="943.5" >[unknown]</text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (5 samples, 0.16%; 0.00%)</title><rect x="524.2" y="1461" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="527.21" y="1471.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="179.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.38" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="655.7" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="658.70" y="1583.5" ></text>
</g>
<g >
<title>cql3::update_parameters::prefetch_data::prefetch_data (1 samples, 0.03%; +0.03%)</title><rect x="848.6" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="851.58" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (8 samples, 0.26%; +0.03%)</title><rect x="16.1" y="133" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="19.06" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="389" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="83.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.13" y="431.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.03%; -0.10%)</title><rect x="512.8" y="1509" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="515.85" y="1519.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%; -0.03%)</title><rect x="457.9" y="1477" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="460.90" y="1487.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1029" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1039.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="47.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.51" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="61.2" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="335.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1487.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (366 samples, 11.75%; +0.06%)</title><rect x="258.6" y="1541" width="138.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="261.58" y="1551.5" >flat_mutation_rea..</text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.06%; +0.06%)</title><rect x="34.6" y="165" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="37.63" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; -0.03%)</title><rect x="716.7" y="1573" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="719.71" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="83.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.51" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; -0.03%)</title><rect x="98.3" y="1285" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="101.29" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="81.6" y="373" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="84.62" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.88" y="271.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (2 samples, 0.06%; 0.00%)</title><rect x="1150.2" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.21" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::file&gt;, seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (2 samples, 0.06%; 0.00%)</title><rect x="637.1" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="640.14" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; +0.03%)</title><rect x="111.2" y="1301" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.18" y="1311.5" ></text>
</g>
<g >
<title>free (14 samples, 0.45%; +0.19%)</title><rect x="426.8" y="1461" width="5.3" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="429.83" y="1471.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1263.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1407.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="469" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (4 samples, 0.13%; +0.03%)</title><rect x="844.8" y="1477" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="847.79" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="66.5" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; -0.16%)</title><rect x="1133.5" y="1573" width="2.7" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="1136.54" y="1583.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_fd1596171e2adf1d6a1bd2abbc1d76b17b98ea7c] (1 samples, 0.03%; +0.03%)</title><rect x="17.6" y="101" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="20.58" y="111.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%; +0.03%)</title><rect x="903.9" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="906.90" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1375.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; +0.06%)</title><rect x="509.4" y="1541" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="512.43" y="1551.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (2 samples, 0.06%; +0.03%)</title><rect x="894.8" y="1493" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="897.81" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (44 samples, 1.41%; 0.00%)</title><rect x="21.0" y="229" width="16.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.99" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (58 samples, 1.86%; 0.00%)</title><rect x="96.0" y="1461" width="22.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1471.5" >c..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (14 samples, 0.45%; 0.00%)</title><rect x="15.7" y="197" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.68" y="207.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (2 samples, 0.06%; -0.03%)</title><rect x="91.5" y="1477" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="94.47" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="234.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="237.33" y="1503.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; -0.03%)</title><rect x="1041.1" y="1445" width="3.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1044.08" y="1455.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.06%)</title><rect x="108.1" y="1189" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="111.14" y="1199.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="147.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.17" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="303.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (94 samples, 3.02%; 0.00%)</title><rect x="13.4" y="405" width="35.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.41" y="415.5" >sin..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.10%; +0.10%)</title><rect x="323.4" y="1397" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="326.38" y="1407.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="533" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.42%; +0.16%)</title><rect x="453.0" y="1477" width="4.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="455.97" y="1487.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.13%; +0.06%)</title><rect x="1088.4" y="1525" width="1.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1091.45" y="1535.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.03%; +0.03%)</title><rect x="140.4" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="143.35" y="1631.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (8 samples, 0.26%; -0.03%)</title><rect x="904.3" y="1477" width="3.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="907.28" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="917" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="927.5" >[unknown]</text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="77.5" y="437" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="80.45" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="239.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="885" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="895.5" ></text>
</g>
<g >
<title>seastar::posix_thread::start_routine (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="1727.5" ></text>
</g>
<g >
<title>__start_context (18 samples, 0.58%; 0.00%)</title><rect x="86.9" y="1685" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.92" y="1695.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%; 0.00%)</title><rect x="94.1" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.12" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="517" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="56.6" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.61" y="143.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (2 samples, 0.06%; +0.03%)</title><rect x="733.0" y="1589" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="736.01" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.3" y="1205" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1215.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="99.0" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="102.05" y="1343.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%; +0.03%)</title><rect x="75.2" y="357" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="78.18" y="367.5" ></text>
</g>
<g >
<title>cql3::update_parameters::prefetch_data::prefetch_data (2 samples, 0.06%; +0.06%)</title><rect x="847.1" y="1493" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="850.06" y="1503.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.03%)</title><rect x="401.4" y="1541" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="404.44" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="804.2" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="807.25" y="1455.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="53.6" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.58" y="255.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="117.2" y="1173" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="120.24" y="1183.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="39.9" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.94" y="175.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (1 samples, 0.03%; 0.00%)</title><rect x="75.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.93" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="10.0" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="13.00" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="124.4" y="1285" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1295.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::prepared_statement (1 samples, 0.03%; +0.03%)</title><rect x="89.6" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="92.58" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="508.3" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="511.30" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="127.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1215.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="850.5" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="853.48" y="1519.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (3 samples, 0.10%; +0.03%)</title><rect x="1104.0" y="1493" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1106.98" y="1503.5" ></text>
</g>
<g >
<title>table::query (1 samples, 0.03%; -0.03%)</title><rect x="1148.7" y="1605" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1151.70" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="644.0" y="1589" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="646.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.9" y="1109" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="1119.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%; +0.03%)</title><rect x="1011.1" y="1365" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1014.14" y="1375.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="92.2" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="95.23" y="1487.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,657 samples, 85.32%; 0.00%)</title><rect x="144.1" y="1685" width="1006.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.14" y="1695.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 1.06%; 0.00%)</title><rect x="838.3" y="1557" width="12.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="841.35" y="1567.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (4 samples, 0.13%; 0.00%)</title><rect x="371.9" y="1365" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="374.88" y="1375.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="613" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="116.9" y="1317" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1327.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (4 samples, 0.13%; 0.00%)</title><rect x="579.5" y="1477" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="582.54" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (3 samples, 0.10%; +0.10%)</title><rect x="629.6" y="1557" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="632.56" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="68.0" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="70.98" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; -0.19%)</title><rect x="677.3" y="1589" width="1.1" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="680.30" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="629" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.03" y="639.5" ></text>
</g>
<g >
<title>posix_memalign (4 samples, 0.13%; 0.00%)</title><rect x="371.9" y="1349" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="374.88" y="1359.5" ></text>
</g>
<g >
<title>freeze (1 samples, 0.03%; 0.00%)</title><rect x="179.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.00" y="1551.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; +0.03%)</title><rect x="92.6" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="95.61" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (2 samples, 0.06%; 0.00%)</title><rect x="14.2" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="36.1" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.15" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&amp;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="123.7" y="1189" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="126.68" y="1199.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%; 0.00%)</title><rect x="628.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="631.80" y="1567.5" ></text>
</g>
<g >
<title>fmt::v7::formatter&lt;fmt::v7::basic_string_view&lt;char&gt;, char, void&gt;::format&lt;fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="130.1" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.12" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.50" y="287.5" ></text>
</g>
<g >
<title>[unknown] (197 samples, 6.33%; 0.00%)</title><rect x="10.4" y="661" width="74.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="671.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; 0.00%)</title><rect x="179.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.00" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.1" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.12" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::~_Optional_base (1 samples, 0.03%; +0.03%)</title><rect x="40.7" y="245" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="43.69" y="255.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (23 samples, 0.74%; 0.00%)</title><rect x="1105.5" y="1589" width="8.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.50" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.03%)</title><rect x="1000.5" y="1317" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1003.53" y="1327.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="933" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="943.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (46 samples, 1.48%; -0.03%)</title><rect x="100.6" y="1413" width="17.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="103.57" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (6 samples, 0.19%; 0.00%)</title><rect x="27.8" y="165" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.81" y="175.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="850.5" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="853.48" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="52.4" y="101" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="55.44" y="111.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%; 0.00%)</title><rect x="558.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="561.32" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::grant_role_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.00" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; -0.03%)</title><rect x="177.9" y="1589" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="180.87" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (4 samples, 0.13%; +0.03%)</title><rect x="121.0" y="1445" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="124.03" y="1455.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%; +0.03%)</title><rect x="211.2" y="1525" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="214.21" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_SET (1 samples, 0.03%; +0.03%)</title><rect x="32.0" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="34.98" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="882.7" y="1413" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="885.68" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="293" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.19%; 0.00%)</title><rect x="106.6" y="1205" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.63" y="1215.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="650.8" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="653.78" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (227 samples, 7.29%; 0.00%)</title><rect x="540.1" y="1541" width="86.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="543.13" y="1551.5" >std::_Func..</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (6 samples, 0.19%; 0.00%)</title><rect x="41.8" y="277" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.83" y="287.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.10%)</title><rect x="521.2" y="1477" width="2.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="524.18" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="367.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="965" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="975.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (11 samples, 0.35%; 0.00%)</title><rect x="61.2" y="341" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="351.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; -0.03%)</title><rect x="99.4" y="1365" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="102.43" y="1375.5" ></text>
</g>
<g >
<title>do_cql_test (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="485" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="495.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="997" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1007.5" >[unknown]</text>
</g>
<g >
<title>_itoa_word (1 samples, 0.03%; +0.03%)</title><rect x="141.1" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="144.11" y="1727.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.03%; +0.03%)</title><rect x="1085.0" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1088.04" y="1535.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (4 samples, 0.13%; +0.13%)</title><rect x="478.7" y="1493" width="1.6" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="481.74" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="107.0" y="1141" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.01" y="1151.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="606.1" y="1493" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="609.06" y="1503.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1221" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1231.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (220 samples, 7.06%; 0.00%)</title><rect x="10.4" y="1701" width="83.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1711.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::use_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.38" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.16%)</title><rect x="996.0" y="1333" width="0.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="998.99" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (22 samples, 0.71%; +0.13%)</title><rect x="664.4" y="1573" width="8.4" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="667.42" y="1583.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="140.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.73" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1295.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (5 samples, 0.16%; 0.00%)</title><rect x="28.2" y="149" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.19" y="159.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="437.4" y="1509" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="440.44" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier&gt;::~shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="64.6" y="325" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="67.57" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::CqlLexer (1 samples, 0.03%; +0.03%)</title><rect x="47.9" y="357" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="50.89" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.03%)</title><rect x="827.0" y="1509" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="829.98" y="1519.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="143.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; +0.03%)</title><rect x="126.0" y="1365" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="128.95" y="1375.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (7 samples, 0.22%; 0.00%)</title><rect x="106.6" y="1253" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.63" y="1263.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (30 samples, 0.96%; +0.13%)</title><rect x="761.4" y="1541" width="11.4" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="764.43" y="1551.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (16 samples, 0.51%; -0.13%)</title><rect x="482.2" y="1509" width="6.0" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="485.15" y="1519.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1471.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,657 samples, 85.32%; 0.00%)</title><rect x="144.1" y="1701" width="1006.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.14" y="1711.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="49.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.41" y="255.5" ></text>
</g>
<g >
<title>query::querier&lt; (678 samples, 21.77%; +0.10%)</title><rect x="253.3" y="1557" width="256.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="256.28" y="1567.5" >query::querier&lt;</text>
</g>
<g >
<title>locator::token_metadata::first_token (35 samples, 1.12%; +0.16%)</title><rect x="1061.5" y="1397" width="13.3" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1064.54" y="1407.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%; +0.22%)</title><rect x="784.2" y="1509" width="3.4" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="787.16" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.06%)</title><rect x="884.6" y="1429" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="887.58" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="60.4" y="149" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="63.40" y="159.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="1111.2" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.18" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (2 samples, 0.06%; -0.10%)</title><rect x="207.8" y="1541" width="0.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="210.80" y="1551.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (91 samples, 2.92%; 0.00%)</title><rect x="13.4" y="357" width="34.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.41" y="367.5" >cq..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="239.3" y="1541" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="242.25" y="1551.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::raw::use_statement*, false&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="46.4" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="49.38" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (32 samples, 1.03%; +0.45%)</title><rect x="199.8" y="1557" width="12.2" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="202.85" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.03%; +0.03%)</title><rect x="55.5" y="245" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="58.47" y="255.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="398.0" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="401.03" y="1551.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (3 samples, 0.10%; +0.06%)</title><rect x="297.6" y="1445" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="300.61" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (10 samples, 0.32%; 0.00%)</title><rect x="55.9" y="357" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (18 samples, 0.58%; 0.00%)</title><rect x="86.9" y="1653" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.92" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="193.0" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="196.03" y="1567.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; +0.03%)</title><rect x="330.2" y="1365" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="333.20" y="1375.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (1 samples, 0.03%; +0.03%)</title><rect x="18.7" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="21.72" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (7 samples, 0.22%; 0.00%)</title><rect x="106.6" y="1237" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.63" y="1247.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (2 samples, 0.06%; 0.00%)</title><rect x="94.9" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.88" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (3 samples, 0.10%; 0.00%)</title><rect x="63.1" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.05" y="319.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="603.8" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="606.79" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (1 samples, 0.03%; 0.00%)</title><rect x="184.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.69" y="1599.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (5 samples, 0.16%; 0.00%)</title><rect x="1100.2" y="1461" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.19" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="357" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.50" y="239.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="741" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="751.5" >[unknown]</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharPositionInLine (1 samples, 0.03%; +0.03%)</title><rect x="26.7" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="29.67" y="191.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="127.1" y="1413" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1423.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="165.7" y="1557" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="168.74" y="1567.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; 0.00%)</title><rect x="845.2" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.17" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (3 samples, 0.10%; 0.00%)</title><rect x="54.0" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="287.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartLine (1 samples, 0.03%; +0.03%)</title><rect x="27.1" y="181" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="30.05" y="191.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="453" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; +0.03%)</title><rect x="843.7" y="1381" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="846.65" y="1391.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.71%; +0.03%)</title><rect x="979.3" y="1397" width="8.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="982.31" y="1407.5" ></text>
</g>
<g >
<title>create_partitions (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="533" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="543.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (2 samples, 0.06%; -0.03%)</title><rect x="530.7" y="1509" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="533.66" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="622.4" y="1445" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="625.36" y="1455.5" ></text>
</g>
<g >
<title>query::querier_base::close (69 samples, 2.22%; +0.03%)</title><rect x="510.2" y="1557" width="26.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="513.19" y="1567.5" >q..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.03%; +0.03%)</title><rect x="41.5" y="245" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="44.45" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.10%)</title><rect x="829.3" y="1541" width="2.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="832.25" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (7 samples, 0.22%; 0.00%)</title><rect x="111.2" y="1397" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.18" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (8 samples, 0.26%; 0.00%)</title><rect x="115.0" y="1397" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="56.2" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1343.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1647.5" ></text>
</g>
<g >
<title>logalloc::segment::occupancy (1 samples, 0.03%; +0.03%)</title><rect x="139.2" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="142.22" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1461" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1471.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.03%; +0.03%)</title><rect x="93.7" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="96.74" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (8 samples, 0.26%; -0.03%)</title><rect x="913.4" y="1525" width="3.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="916.38" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%; 0.00%)</title><rect x="1083.1" y="1461" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1086.14" y="1471.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (138 samples, 4.43%; +0.42%)</title><rect x="1022.5" y="1461" width="52.3" height="15.0" fill="rgb(255,15,15)" rx="2" ry="2" />
<text  x="1025.51" y="1471.5" >servi..</text>
</g>
<g >
<title>database::has_keyspace (4 samples, 0.13%; 0.00%)</title><rect x="827.7" y="1557" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="830.74" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="969.8" y="1429" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="972.84" y="1439.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="93.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.74" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (9 samples, 0.29%; 0.00%)</title><rect x="1091.5" y="1525" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.48" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (37 samples, 1.19%; +0.10%)</title><rect x="198.7" y="1573" width="14.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="201.71" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="271.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="127.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (174 samples, 5.59%; -0.26%)</title><rect x="956.6" y="1461" width="65.9" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="959.58" y="1471.5" >service..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="61.5" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="64.54" y="127.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (12 samples, 0.39%; -0.03%)</title><rect x="651.5" y="1605" width="4.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="654.54" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (619 samples, 19.88%; +0.19%)</title><rect x="860.7" y="1541" width="234.6" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="863.71" y="1551.5" >cql3::statements::select_statem..</text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; 0.00%)</title><rect x="140.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.97" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (265 samples, 8.51%; +0.03%)</title><rect x="734.1" y="1605" width="100.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="737.14" y="1615.5" >seastar::int..</text>
</g>
<g >
<title>seastar::memory::drain_cross_cpu_freelist (1 samples, 0.03%; +0.03%)</title><rect x="147.6" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="150.55" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.98" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1551.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (3 samples, 0.10%; +0.06%)</title><rect x="881.9" y="1445" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="884.93" y="1455.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%; 0.00%)</title><rect x="916.4" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="919.41" y="1535.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; -0.03%)</title><rect x="537.9" y="1541" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="540.85" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.06%)</title><rect x="676.5" y="1589" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="679.54" y="1599.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="94.1" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.12" y="1663.5" ></text>
</g>
<g >
<title>create_partitions (101 samples, 3.24%; +0.10%)</title><rect x="10.8" y="421" width="38.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="13.76" y="431.5" >cre..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.03%; 0.00%)</title><rect x="85.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.41" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="175.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; 0.00%)</title><rect x="915.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="918.27" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="207.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="39.6" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.56" y="271.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="90.3" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="93.33" y="1455.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1 samples, 0.03%; +0.03%)</title><rect x="564.0" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="567.00" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; -0.03%)</title><rect x="116.1" y="1221" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="119.10" y="1231.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="600.8" y="1461" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="603.76" y="1471.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.33" y="1359.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="121.4" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.41" y="1375.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="351.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%; -0.06%)</title><rect x="433.6" y="1477" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="436.65" y="1487.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1013" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1023.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (2 samples, 0.06%; +0.03%)</title><rect x="1104.4" y="1477" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1107.36" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="113.8" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.83" y="1375.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (3 samples, 0.10%; +0.03%)</title><rect x="183.6" y="1589" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="186.55" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.26%; 0.00%)</title><rect x="16.1" y="165" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.06" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="123.3" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1167.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="212.7" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="215.73" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.03%; 0.00%)</title><rect x="20.6" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.61" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1381" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%; 0.00%)</title><rect x="125.2" y="1349" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.20" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="121.4" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="124.41" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="111.6" y="1269" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; +0.03%)</title><rect x="122.9" y="1285" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="125.92" y="1295.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1093" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1103.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; +0.03%)</title><rect x="198.0" y="1541" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="200.95" y="1551.5" ></text>
</g>
<g >
<title>validation::validate_column_family (18 samples, 0.58%; +0.03%)</title><rect x="816.0" y="1509" width="6.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="818.99" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (4 samples, 0.13%; +0.03%)</title><rect x="371.9" y="1333" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="374.88" y="1343.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="119.5" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="122.51" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (1 samples, 0.03%; +0.03%)</title><rect x="14.5" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="17.55" y="239.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.03%; +0.03%)</title><rect x="606.4" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="609.44" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="706.5" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="709.48" y="1583.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (39 samples, 1.25%; -0.06%)</title><rect x="513.2" y="1509" width="14.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="516.22" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.84" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="840.6" y="1381" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="843.62" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::try_reap_events (1 samples, 0.03%; +0.03%)</title><rect x="1149.5" y="1557" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1152.45" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (7 samples, 0.22%; -0.03%)</title><rect x="581.8" y="1493" width="2.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="584.81" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="787.2" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="790.19" y="1503.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1375.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="501" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="511.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (6 samples, 0.19%; -0.03%)</title><rect x="111.2" y="1381" width="2.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="114.18" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (20 samples, 0.64%; +0.03%)</title><rect x="885.7" y="1445" width="7.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="888.72" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.06%; +0.06%)</title><rect x="318.5" y="1413" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="321.45" y="1423.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.03%; 0.00%)</title><rect x="507.9" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="510.92" y="1519.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="619.7" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="622.70" y="1487.5" ></text>
</g>
<g >
<title>query_state::query_state (1 samples, 0.03%; +0.03%)</title><rect x="194.9" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="197.92" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (2 samples, 0.06%; 0.00%)</title><rect x="75.2" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.18" y="383.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (5 samples, 0.16%; 0.00%)</title><rect x="71.8" y="437" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.77" y="447.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%; 0.00%)</title><rect x="912.6" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="915.62" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="130.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.50" y="1663.5" ></text>
</g>
<g >
<title>__start_context (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="629" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::alter_keyspace_statement*, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="82.4" y="405" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="85.38" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (3 samples, 0.10%; +0.03%)</title><rect x="96.4" y="1413" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="99.40" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; 0.00%)</title><rect x="987.3" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="990.27" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1327.5" ></text>
</g>
<g >
<title>table::make_reader (220 samples, 7.06%; +0.03%)</title><rect x="542.8" y="1525" width="83.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="545.78" y="1535.5" >table::ma..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.16%)</title><rect x="747.0" y="1557" width="0.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="750.03" y="1567.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (3 samples, 0.10%; 0.00%)</title><rect x="115.0" y="1365" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1375.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.03%; 0.00%)</title><rect x="1111.6" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.56" y="1359.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.6" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1263.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.03%; +0.03%)</title><rect x="947.9" y="1461" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="950.86" y="1471.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="719.4" y="1589" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="722.36" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; +0.03%)</title><rect x="983.5" y="1365" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="986.48" y="1375.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.03%; 0.00%)</title><rect x="85.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.41" y="463.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1094.9" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1097.89" y="1535.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="1102.1" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.09" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.16%; 0.00%)</title><rect x="19.1" y="181" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.10%; +0.06%)</title><rect x="1021.4" y="1413" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1024.37" y="1423.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="77.1" y="453" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="80.07" y="463.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.06%; +0.03%)</title><rect x="1101.3" y="1445" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1104.33" y="1455.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.98" y="271.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (42 samples, 1.35%; +0.10%)</title><rect x="355.6" y="1365" width="15.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="358.59" y="1375.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (3 samples, 0.10%; +0.03%)</title><rect x="110.0" y="1333" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="113.04" y="1343.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.10%; +0.06%)</title><rect x="1018.7" y="1397" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1021.72" y="1407.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="56.6" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.61" y="175.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1263.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1349" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1359.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1105.9" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1108.88" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="837" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="847.5" >[unknown]</text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; -0.03%)</title><rect x="93.0" y="1525" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="95.99" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (40 samples, 1.28%; +0.13%)</title><rect x="659.9" y="1589" width="15.1" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="662.87" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1311.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.06%; -0.03%)</title><rect x="1006.6" y="1317" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1009.60" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.03%)</title><rect x="910.7" y="1493" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="913.73" y="1503.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="12.3" y="389" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="15.27" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (159 samples, 5.11%; 0.00%)</title><rect x="10.4" y="629" width="60.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="639.5" >[unkno..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1311.5" ></text>
</g>
<g >
<title>schema_mutations::digest (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1519.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.16%; -0.03%)</title><rect x="804.6" y="1445" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="807.62" y="1455.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::grant_role_statement*, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="46.0" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="49.00" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (5 samples, 0.16%; 0.00%)</title><rect x="67.2" y="357" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.22" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="843.3" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="846.28" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (8 samples, 0.26%; +0.03%)</title><rect x="839.9" y="1429" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="842.87" y="1439.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (7 samples, 0.22%; +0.13%)</title><rect x="770.1" y="1493" width="2.7" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="773.14" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="105.9" y="1253" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.87" y="1263.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (83 samples, 2.67%; -0.10%)</title><rect x="341.9" y="1381" width="31.5" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="344.95" y="1391.5" >co..</text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (226 samples, 7.26%; +0.03%)</title><rect x="747.4" y="1573" width="85.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="750.41" y="1583.5" >single_nod..</text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="481.8" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="484.77" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; 0.00%)</title><rect x="842.9" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="845.90" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1199.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (2 samples, 0.06%; 0.00%)</title><rect x="678.8" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="681.82" y="1615.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="43.7" y="197" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="46.73" y="207.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="853" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="863.5" ></text>
</g>
<g >
<title>from_hex (4 samples, 0.13%; +0.13%)</title><rect x="72.1" y="357" width="1.6" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="75.15" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.35%; +0.06%)</title><rect x="303.3" y="1397" width="4.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="306.29" y="1407.5" ></text>
</g>
<g >
<title>create_partitions (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="453" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; +0.03%)</title><rect x="122.5" y="1269" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="125.54" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1301" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1311.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="987.3" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="990.27" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="69.1" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="72.11" y="239.5" ></text>
</g>
<g >
<title>look_proc.isra.0 (1 samples, 0.03%; +0.03%)</title><rect x="1171.8" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1174.81" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1247.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.16%)</title><rect x="700.4" y="1589" width="0.8" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="703.42" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%; +0.03%)</title><rect x="35.4" y="165" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="38.39" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="325" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="699.7" y="1589" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="702.66" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="59.3" y="341" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="62.26" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="271.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; 0.00%)</title><rect x="845.9" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.93" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.06%)</title><rect x="709.1" y="1589" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="712.13" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.76" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (58 samples, 1.86%; 0.00%)</title><rect x="96.0" y="1445" width="22.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1455.5" >c..</text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (3 samples, 0.10%; +0.03%)</title><rect x="654.6" y="1573" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="657.57" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%; +0.06%)</title><rect x="1136.9" y="1589" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1139.95" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (3 samples, 0.10%; 0.00%)</title><rect x="690.2" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="693.19" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (92 samples, 2.95%; 0.00%)</title><rect x="13.4" y="373" width="34.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.41" y="383.5" >cq..</text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="565" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (3 samples, 0.10%; 0.00%)</title><rect x="115.0" y="1381" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1391.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (1 samples, 0.03%; 0.00%)</title><rect x="846.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="849.31" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="85.4" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.41" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="36.9" y="165" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="39.90" y="175.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.88" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="175.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="1010.4" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1013.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1311.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="93.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.74" y="1663.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="138.5" y="1653" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="141.46" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.03%; 0.00%)</title><rect x="1114.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.21" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (95 samples, 3.05%; 0.00%)</title><rect x="93.7" y="1669" width="36.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.74" y="1679.5" >sea..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.87" y="191.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1077" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1087.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 1.06%; 0.00%)</title><rect x="838.3" y="1573" width="12.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="841.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1045" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1055.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; 0.00%)</title><rect x="856.5" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="859.54" y="1583.5" ></text>
</g>
<g >
<title>cql3::relation::to_column_definition (1 samples, 0.03%; 0.00%)</title><rect x="76.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.31" y="383.5" ></text>
</g>
<g >
<title>row::row (86 samples, 2.76%; +0.06%)</title><rect x="340.8" y="1397" width="32.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="343.81" y="1407.5" >ro..</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::index (1 samples, 0.03%; +0.03%)</title><rect x="125.6" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="128.57" y="1343.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (30 samples, 0.96%; 0.00%)</title><rect x="839.1" y="1525" width="11.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.11" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1096.4" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1099.40" y="1583.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="389" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; -0.06%)</title><rect x="316.9" y="1397" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="319.94" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (3 samples, 0.10%; 0.00%)</title><rect x="139.6" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.60" y="1679.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="130.9" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="133.88" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (3 samples, 0.10%; +0.06%)</title><rect x="717.5" y="1589" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="720.47" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (1 samples, 0.03%; 0.00%)</title><rect x="41.5" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.45" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="25.2" y="149" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="28.16" y="159.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::register_metrics (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.31" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="562.5" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="565.49" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="66.5" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="68.4" y="341" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="71.36" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.94" y="1407.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.03%; +0.03%)</title><rect x="213.5" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="216.49" y="1583.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; -0.03%)</title><rect x="783.8" y="1509" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="786.78" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%; +0.03%)</title><rect x="586.7" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="589.74" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="1088.1" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1091.07" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="271.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="56.6" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="59.61" y="127.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.55" y="191.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1365" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1375.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="117.6" y="1157" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="120.62" y="1167.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1279.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="46.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.00" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; 0.00%)</title><rect x="659.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.49" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.10%)</title><rect x="389.7" y="1477" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="392.69" y="1487.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (8 samples, 0.26%; 0.00%)</title><rect x="1107.4" y="1349" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.39" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="869" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="879.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="120.3" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="49.8" y="261" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="52.79" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.6" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1199.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (7 samples, 0.22%; -0.03%)</title><rect x="523.5" y="1477" width="2.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="526.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="207.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (731 samples, 23.47%; -0.03%)</title><rect x="838.0" y="1605" width="277.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="840.97" y="1615.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.06%)</title><rect x="683.4" y="1573" width="2.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="686.37" y="1583.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; 0.00%)</title><rect x="38.4" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.42" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="53.6" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.58" y="271.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1141" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1151.5" >[unknown]</text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="96.8" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.78" y="1343.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; +0.03%)</title><rect x="1102.5" y="1445" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1105.47" y="1455.5" ></text>
</g>
<g >
<title>_IO_fflush (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1589" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1599.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; +0.03%)</title><rect x="116.9" y="1221" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="119.86" y="1231.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="45.2" y="277" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="48.24" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="82.8" y="389" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="85.76" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.10%; 0.00%)</title><rect x="116.9" y="1365" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1375.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="674.3" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="677.27" y="1583.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="138.1" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="141.08" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (1 samples, 0.03%; +0.03%)</title><rect x="93.4" y="1557" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="96.37" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="57.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.75" y="303.5" ></text>
</g>
<g >
<title>seastar::make_file_impl (1 samples, 0.03%; +0.03%)</title><rect x="691.3" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="694.32" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.06%)</title><rect x="1086.9" y="1493" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1089.93" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="965" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="975.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; -0.03%)</title><rect x="562.9" y="1477" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="565.86" y="1487.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="1099.1" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1102.06" y="1471.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.03%; +0.03%)</title><rect x="93.0" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="95.99" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.48%; +0.03%)</title><rect x="79.0" y="469" width="5.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="81.97" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="61.9" y="149" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="64.91" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.1" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.12" y="223.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (2 samples, 0.06%; +0.03%)</title><rect x="662.5" y="1573" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="665.52" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (132 samples, 4.24%; +0.06%)</title><rect x="772.8" y="1541" width="50.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="775.79" y="1551.5" >cql3:..</text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="949" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="959.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="42.6" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.59" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (4 samples, 0.13%; 0.00%)</title><rect x="654.6" y="1589" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.57" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.06%)</title><rect x="305.9" y="1381" width="1.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="308.95" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; 0.00%)</title><rect x="1043.0" y="1413" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1045.97" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1301" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1311.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%; +0.03%)</title><rect x="1099.8" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1102.81" y="1471.5" ></text>
</g>
<g >
<title>do_cql_test (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="517" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="710.6" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="713.65" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="1099.4" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1102.43" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1093" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1103.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; -0.03%)</title><rect x="960.0" y="1413" width="2.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="962.99" y="1423.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="1038.8" y="1429" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1041.81" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="19.9" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.85" y="63.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (11 samples, 0.35%; +0.16%)</title><rect x="375.3" y="1429" width="4.2" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="378.29" y="1439.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.98" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1375.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="57.0" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="271.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.59" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.10%; +0.10%)</title><rect x="708.0" y="1589" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="711.00" y="1599.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1301" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1311.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; +0.03%)</title><rect x="130.5" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="133.50" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.03%)</title><rect x="602.3" y="1477" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="605.27" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%; +0.03%)</title><rect x="100.6" y="1365" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="103.57" y="1375.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1519.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (1 samples, 0.03%; 0.00%)</title><rect x="839.5" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.49" y="1471.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (1 samples, 0.03%; +0.03%)</title><rect x="1148.3" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1151.32" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="159.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="637.5" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="640.51" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.06%; 0.00%)</title><rect x="139.6" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.60" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1327.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="287.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="367.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (9 samples, 0.29%; +0.10%)</title><rect x="606.8" y="1493" width="3.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="609.82" y="1503.5" ></text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.03%; +0.03%)</title><rect x="407.1" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="410.12" y="1535.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="138.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.84" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="18.0" y="85" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.96" y="95.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="123.3" y="1237" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1247.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (31 samples, 1.00%; -0.06%)</title><rect x="679.6" y="1605" width="11.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="682.58" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="623.5" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="626.49" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.10%)</title><rect x="879.3" y="1413" width="2.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="882.27" y="1423.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%; 0.00%)</title><rect x="1113.5" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.46" y="1359.5" ></text>
</g>
<g >
<title>mutation_querier::consume (105 samples, 3.37%; +0.03%)</title><rect x="439.0" y="1493" width="39.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="441.95" y="1503.5" >mut..</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1525" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1535.5" >cq..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.06%)</title><rect x="586.4" y="1461" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="589.36" y="1471.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (1 samples, 0.03%; 0.00%)</title><rect x="142.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.25" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="716.3" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="719.33" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (8 samples, 0.26%; 0.00%)</title><rect x="56.2" y="341" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="501" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.06%)</title><rect x="559.1" y="1461" width="2.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="562.08" y="1471.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (237 samples, 7.61%; +0.03%)</title><rect x="536.3" y="1557" width="89.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="539.34" y="1567.5" >query::que..</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="62.3" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.29" y="127.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="95.6" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="98.64" y="1615.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (9 samples, 0.29%; +0.03%)</title><rect x="15.7" y="181" width="3.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="18.68" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="70.3" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.25" y="175.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="1148.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.70" y="1551.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.10%; +0.03%)</title><rect x="663.3" y="1573" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="666.28" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="845.2" y="1365" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="848.17" y="1375.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="83.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.13" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="29.7" y="101" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="32.70" y="111.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (186 samples, 5.97%; -0.13%)</title><rect x="757.3" y="1557" width="70.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="760.26" y="1567.5" >cql3::q..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%; +0.03%)</title><rect x="27.8" y="149" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="30.81" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1279.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="127.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (8 samples, 0.26%; 0.00%)</title><rect x="138.1" y="1701" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.08" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="79.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="239.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; -0.06%)</title><rect x="963.0" y="1445" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="966.02" y="1455.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (304 samples, 9.76%; 0.00%)</title><rect x="273.4" y="1493" width="115.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="276.36" y="1503.5" >mutation_reade..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="159.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="395.0" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="398.00" y="1503.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (3 samples, 0.10%; +0.03%)</title><rect x="251.4" y="1541" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="254.38" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="651.2" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="654.16" y="1583.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="1112.3" y="1429" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.32" y="1439.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="61.2" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (11 samples, 0.35%; +0.03%)</title><rect x="105.1" y="1269" width="4.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="108.11" y="1279.5" ></text>
</g>
<g >
<title>dht::tri_compare (3 samples, 0.10%; 0.00%)</title><rect x="1060.4" y="1397" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1063.40" y="1407.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="88.8" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="91.82" y="1567.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (28 samples, 0.90%; -0.10%)</title><rect x="423.4" y="1509" width="10.6" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="426.42" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (1 samples, 0.03%; 0.00%)</title><rect x="846.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="849.69" y="1503.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (14 samples, 0.45%; +0.03%)</title><rect x="575.7" y="1493" width="5.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="578.75" y="1503.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.03%; +0.03%)</title><rect x="731.1" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="734.11" y="1599.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1045" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1317" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="469" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="517" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="527.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (5 samples, 0.16%; +0.03%)</title><rect x="234.7" y="1541" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="237.71" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="821" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="831.5" >[unknown]</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::operator* (1 samples, 0.03%; +0.03%)</title><rect x="67.6" y="325" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="70.60" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.03%; +0.03%)</title><rect x="140.7" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="143.73" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="341" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="351.5" ></text>
</g>
<g >
<title>create_partitions (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="549" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="559.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (245 samples, 7.87%; +0.06%)</title><rect x="740.6" y="1589" width="92.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="743.58" y="1599.5" >single_node..</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; 0.00%)</title><rect x="967.2" y="1413" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.19" y="1423.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="90.0" y="1477" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="92.96" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%; 0.00%)</title><rect x="76.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.69" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (9 samples, 0.29%; -0.10%)</title><rect x="195.3" y="1573" width="3.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="198.30" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="52.1" y="53" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="55.06" y="63.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; -0.03%)</title><rect x="234.3" y="1477" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="237.33" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.32%; +0.10%)</title><rect x="983.9" y="1365" width="3.7" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="986.86" y="1375.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="109.7" y="1317" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="112.66" y="1327.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="586.0" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="588.98" y="1471.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="124.4" y="1349" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1359.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="113.8" y="1349" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.83" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1669" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1679.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="287.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%; -0.06%)</title><rect x="434.0" y="1509" width="3.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="437.03" y="1519.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.03%; 0.00%)</title><rect x="808.4" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="811.41" y="1439.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.06%; +0.06%)</title><rect x="337.0" y="1365" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="340.02" y="1375.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1279.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; 0.00%)</title><rect x="179.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.00" y="1599.5" ></text>
</g>
<g >
<title>mutation::mutation (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1487.5" ></text>
</g>
<g >
<title>row_cache::make_reader (35 samples, 1.12%; +0.10%)</title><rect x="611.4" y="1509" width="13.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="614.37" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.22%; 0.00%)</title><rect x="124.4" y="1413" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="654.2" y="1589" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="657.19" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="271.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (3 samples, 0.10%; +0.10%)</title><rect x="33.5" y="165" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="36.49" y="175.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.45%; +0.10%)</title><rect x="1012.3" y="1381" width="5.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1015.28" y="1391.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="255.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; +0.03%)</title><rect x="844.0" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="847.03" y="1471.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="122.2" y="1237" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="125.16" y="1247.5" ></text>
</g>
<g >
<title>create_partitions (18 samples, 0.58%; 0.00%)</title><rect x="86.9" y="1605" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.92" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="581" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="207.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="68.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.73" y="351.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.41" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.03%)</title><rect x="548.8" y="1509" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="551.84" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (8 samples, 0.26%; +0.19%)</title><rect x="195.7" y="1557" width="3.0" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="198.68" y="1567.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; 0.00%)</title><rect x="1103.6" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.60" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="501" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="309" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="319.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="56.2" y="165" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="59.23" y="175.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (2 samples, 0.06%; +0.03%)</title><rect x="978.6" y="1397" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="981.55" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="405" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="415.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; +0.03%)</title><rect x="628.4" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="631.42" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="143.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="917" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="927.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1317" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1327.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::process_element_func (1 samples, 0.03%; +0.03%)</title><rect x="837.6" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="840.59" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; +0.03%)</title><rect x="20.2" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.23" y="127.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1391.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; 0.00%)</title><rect x="138.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.84" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (2 samples, 0.06%; 0.00%)</title><rect x="107.0" y="1125" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.01" y="1135.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%; 0.00%)</title><rect x="1105.5" y="1557" width="8.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.50" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; +0.03%)</title><rect x="620.5" y="1461" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="623.46" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1125" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1135.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="223.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (1 samples, 0.03%; -0.06%)</title><rect x="876.6" y="1461" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="879.62" y="1471.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (5 samples, 0.16%; +0.13%)</title><rect x="665.9" y="1557" width="1.9" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="668.93" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="390.1" y="1477" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="393.07" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.0" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.05" y="1375.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::query_options&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="678.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="681.82" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (21 samples, 0.67%; 0.00%)</title><rect x="1106.3" y="1461" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.26" y="1471.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_id::full_name (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.31" y="1551.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%; +0.03%)</title><rect x="178.2" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="181.25" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="59.6" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="239.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.10%; 0.00%)</title><rect x="66.1" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="303.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; 0.00%)</title><rect x="331.7" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="334.71" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (13 samples, 0.42%; +0.03%)</title><rect x="79.3" y="437" width="5.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="82.34" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="120.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.65" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="191.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="972.5" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="975.49" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (4 samples, 0.13%; +0.03%)</title><rect x="1144.1" y="1605" width="1.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1147.15" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1279.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="405" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="415.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="405.2" y="1525" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="408.23" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.06%; 0.00%)</title><rect x="836.1" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.08" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="303.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (5 samples, 0.16%; +0.03%)</title><rect x="74.8" y="405" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="77.80" y="415.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (2 samples, 0.06%; 0.00%)</title><rect x="96.8" y="1397" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.78" y="1407.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.31" y="1535.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="14.2" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1311.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.03%; +0.03%)</title><rect x="1148.7" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1151.70" y="1519.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (13 samples, 0.42%; 0.00%)</title><rect x="104.4" y="1333" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.35" y="1343.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1605" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1615.5" >si..</text>
</g>
<g >
<title>cql3::expr::evaluate (13 samples, 0.42%; -0.03%)</title><rect x="886.1" y="1429" width="4.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="889.10" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.10%)</title><rect x="324.5" y="1381" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="327.52" y="1391.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="112.3" y="1221" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="115.31" y="1231.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_initial_partition_key_restrictions (1 samples, 0.03%; +0.03%)</title><rect x="74.4" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="77.42" y="431.5" ></text>
</g>
<g >
<title>database::do_apply (23 samples, 0.74%; -0.03%)</title><rect x="1096.8" y="1541" width="8.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1099.78" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1247.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="49.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.03%; +0.03%)</title><rect x="1149.1" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1152.08" y="1615.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="396.9" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="399.89" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (2 samples, 0.06%; -0.03%)</title><rect x="845.2" y="1461" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="848.17" y="1471.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="1105.9" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.88" y="1471.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1551.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; 0.00%)</title><rect x="138.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.08" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1557" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1567.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; +0.03%)</title><rect x="96.0" y="1253" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="99.02" y="1263.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="610.2" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="613.23" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="909.6" y="1493" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="912.59" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_function_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.24" y="303.5" ></text>
</g>
<g >
<title>cql3::attributes::get_timestamp (1 samples, 0.03%; +0.03%)</title><rect x="839.1" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="842.11" y="1503.5" ></text>
</g>
<g >
<title>sstables::sstable::has_component (1 samples, 0.03%; +0.03%)</title><rect x="94.9" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="97.88" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.16%; +0.16%)</title><rect x="687.5" y="1589" width="1.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="690.53" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="805" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="815.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; -0.03%)</title><rect x="436.7" y="1493" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="439.68" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.88" y="287.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="548.5" y="1509" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="551.46" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.10%; +0.06%)</title><rect x="103.2" y="1333" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="106.22" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="76.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.69" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (18 samples, 0.58%; 0.00%)</title><rect x="86.9" y="1637" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.92" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="1095.3" y="1541" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1098.27" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%; +0.10%)</title><rect x="1015.7" y="1349" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1018.69" y="1359.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="179.0" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.00" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="19.9" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.85" y="79.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="143.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="271.5" ></text>
</g>
<g >
<title>fmt::v7::detail::parse_replacement_field&lt;char, fmt::v7::detail::format_handler&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char, fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="130.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.12" y="1711.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.06%; 0.00%)</title><rect x="139.6" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.60" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="43.0" y="165" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="45.97" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="43.7" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.73" y="223.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (6 samples, 0.19%; 0.00%)</title><rect x="124.4" y="1381" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1253" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1263.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="66.5" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="255.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.06%; 0.00%)</title><rect x="138.1" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.08" y="1679.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,200 samples, 38.54%; -0.19%)</title><rect x="181.3" y="1605" width="454.7" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="184.28" y="1615.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="179.0" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="182.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.87" y="127.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (25 samples, 0.80%; 0.00%)</title><rect x="101.7" y="1397" width="9.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.70" y="1407.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_fd1596171e2adf1d6a1bd2abbc1d76b17b98ea7c] (1 samples, 0.03%; +0.03%)</title><rect x="21.0" y="197" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.99" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="994.5" y="1349" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="997.47" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.9" y="1029" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="1039.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="319.5" ></text>
</g>
<g >
<title>do_cql_test (102 samples, 3.28%; 0.00%)</title><rect x="10.4" y="437" width="38.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="447.5" >do_..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="923.6" y="1509" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="926.61" y="1519.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (362 samples, 11.62%; -0.03%)</title><rect x="260.1" y="1525" width="137.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="263.10" y="1535.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (5 samples, 0.16%; 0.00%)</title><rect x="71.8" y="405" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.77" y="415.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (3 samples, 0.10%; -0.03%)</title><rect x="1104.0" y="1509" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1106.98" y="1519.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.19%; -0.10%)</title><rect x="577.3" y="1477" width="2.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="580.26" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; -0.10%)</title><rect x="232.1" y="1525" width="2.6" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="235.06" y="1535.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="49.4" y="213" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="52.41" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="1139.2" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1142.22" y="1599.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="215.0" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="218.00" y="1423.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.03%; +0.03%)</title><rect x="75.9" y="325" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="78.93" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="143.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1109" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1119.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="85.4" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.41" y="511.5" ></text>
</g>
<g >
<title>db::filter_for_query (3 samples, 0.10%; -0.06%)</title><rect x="1039.6" y="1445" width="1.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1042.56" y="1455.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.55" y="207.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (7 samples, 0.22%; -0.10%)</title><rect x="879.3" y="1445" width="2.6" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="882.27" y="1455.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (4 samples, 0.13%; +0.03%)</title><rect x="670.5" y="1541" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="673.48" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (33 samples, 1.06%; -0.10%)</title><rect x="495.4" y="1493" width="12.5" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="498.41" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="357" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1391.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (5 samples, 0.16%; -0.03%)</title><rect x="1108.5" y="1317" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1111.53" y="1327.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1311.5" ></text>
</g>
<g >
<title>utils::filter::bloom_filter::add (1 samples, 0.03%; +0.03%)</title><rect x="95.3" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="98.26" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="693" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="703.5" >[unknown]</text>
</g>
<g >
<title>auth::get_permissions (38 samples, 1.22%; 0.00%)</title><rect x="797.8" y="1477" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="800.80" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1231.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="50.2" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="13.4" y="309" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="16.41" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; +0.03%)</title><rect x="50.2" y="117" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="53.17" y="127.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::list_service_level_statement*, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="83.5" y="373" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="86.51" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (23 samples, 0.74%; -0.10%)</title><rect x="423.8" y="1477" width="8.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="426.80" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="121.4" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.41" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%; +0.03%)</title><rect x="212.0" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="214.97" y="1567.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.10%; +0.06%)</title><rect x="820.9" y="1493" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="823.92" y="1503.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="80.9" y="197" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="83.86" y="207.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="100.2" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.19" y="1343.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="847.8" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="850.82" y="1503.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="672.0" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="675.00" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="255.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%; 0.00%)</title><rect x="744.0" y="1541" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.99" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="1008.5" y="1333" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1011.49" y="1343.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="679.2" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="682.20" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1279.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; +0.03%)</title><rect x="726.2" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="729.18" y="1583.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="179.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.00" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1061" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1071.5" ></text>
</g>
<g >
<title>database::find_keyspace (2 samples, 0.06%; -0.19%)</title><rect x="1037.3" y="1445" width="0.7" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="1040.29" y="1455.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="124.8" y="1237" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="127.82" y="1247.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (69 samples, 2.22%; -0.06%)</title><rect x="1048.7" y="1429" width="26.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1051.66" y="1439.5" >l..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="813.7" y="1477" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="816.72" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="96.8" y="1365" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.78" y="1375.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::raw::use_statement*, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.38" y="255.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.26%; 0.00%)</title><rect x="16.1" y="149" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.06" y="159.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="55.1" y="277" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="58.09" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;partition_key, clustering_key_prefix&gt;, std::pair&lt;std::pair&lt;partition_key, clustering_key_prefix&gt; const, cql3::update_parameters::prefetch_data::row&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;partition_key, clustering_key_prefix&gt; const, cql3::update_parameters::prefetch_data::row&gt; &gt;, cql3::update_parameters::prefetch_data::key_less, std::allocator&lt;std::pair&lt;std::pair&lt;partition_key, clustering_key_prefix&gt; const, cql3::update_parameters::prefetch_data::row&gt; &gt; &gt;::_M_erase (1 samples, 0.03%; +0.03%)</title><rect x="848.2" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="851.20" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="581" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.03" y="591.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1349" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1359.5" >[unknown]</text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.64" y="1647.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; 0.00%)</title><rect x="1095.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1098.65" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.06%)</title><rect x="725.4" y="1573" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="728.43" y="1583.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; 0.00%)</title><rect x="1108.9" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.91" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="111.6" y="1189" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1199.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="57.4" y="245" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="60.37" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="107.8" y="1189" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.76" y="1199.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; +0.03%)</title><rect x="106.6" y="1141" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="109.63" y="1151.5" ></text>
</g>
<g >
<title>frozen_mutation::key (1 samples, 0.03%; 0.00%)</title><rect x="1098.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.30" y="1487.5" ></text>
</g>
<g >
<title>make_combined_reader (28 samples, 0.90%; -0.32%)</title><rect x="552.3" y="1493" width="10.6" height="15.0" fill="rgb(60,60,255)" rx="2" ry="2" />
<text  x="555.25" y="1503.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="431.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1573" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1583.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="653.8" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="656.81" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.03%; 0.00%)</title><rect x="19.1" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="97.9" y="1349" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="100.91" y="1359.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (10 samples, 0.32%; -0.06%)</title><rect x="290.0" y="1461" width="3.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="293.03" y="1471.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="108.9" y="1221" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="111.90" y="1231.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="54.0" y="229" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="56.96" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="686.4" y="1573" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="689.40" y="1583.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; -0.03%)</title><rect x="123.3" y="1253" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="126.30" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1285" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1295.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="234.3" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="237.33" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (130 samples, 4.17%; 0.00%)</title><rect x="10.4" y="565" width="49.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="575.5" >[unk..</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1365" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1375.5" ></text>
</g>
<g >
<title>row::~row (27 samples, 0.87%; -0.06%)</title><rect x="423.8" y="1493" width="10.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="426.80" y="1503.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (2 samples, 0.06%; +0.06%)</title><rect x="144.1" y="1621" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="147.14" y="1631.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="676.9" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="679.92" y="1599.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.03%; -0.03%)</title><rect x="1111.6" y="1317" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1114.56" y="1327.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (4 samples, 0.13%; 0.00%)</title><rect x="89.6" y="1557" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.58" y="1567.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (648 samples, 20.81%; 0.00%)</title><rect x="850.9" y="1589" width="245.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="853.85" y="1599.5" >seastar::concrete_execution_stag..</text>
</g>
<g >
<title>cql3::query_processor::get_statement (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="501" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::end (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.31" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="603.8" y="1461" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="606.79" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="44.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.48" y="271.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.03%; -0.06%)</title><rect x="374.9" y="1413" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="377.91" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="644.3" y="1589" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="647.34" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="42.6" y="165" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="45.59" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="42.2" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="175.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1173" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1183.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_type_statement&gt;, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="44.5" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.48" y="303.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (52 samples, 1.67%; +0.16%)</title><rect x="795.2" y="1493" width="19.7" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="798.15" y="1503.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%; 0.00%)</title><rect x="997.9" y="1349" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1000.88" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1637" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1647.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.3" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.25" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="54.3" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.34" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="858.1" y="1573" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="861.05" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; -0.03%)</title><rect x="169.9" y="1573" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="172.91" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="118.8" y="1429" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.75" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="180.9" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="183.90" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="111.6" y="1157" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1167.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="58.9" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="61.88" y="191.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (143 samples, 4.59%; -0.26%)</title><rect x="319.2" y="1413" width="54.2" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="322.21" y="1423.5" >parti..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="104.7" y="1269" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="107.73" y="1279.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.41%; 0.00%)</title><rect x="1172.2" y="1733" width="16.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.19" y="1743.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_currentLine (1 samples, 0.03%; +0.03%)</title><rect x="24.0" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="27.02" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="751.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.94" y="1375.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.10%; 0.00%)</title><rect x="867.1" y="1525" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.15" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="850.1" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="853.10" y="1455.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="99.8" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="102.81" y="1343.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.03%; 0.00%)</title><rect x="73.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.66" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; +0.03%)</title><rect x="112.7" y="1221" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="115.69" y="1231.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.03%; 0.00%)</title><rect x="25.2" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.16" y="175.5" ></text>
</g>
<g >
<title>seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::readd_periodic (1 samples, 0.03%; +0.03%)</title><rect x="1150.6" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1153.59" y="1567.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="86.5" y="933" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="89.54" y="943.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.03%; 0.00%)</title><rect x="839.5" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.49" y="1455.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="841.0" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="844.00" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="13.8" y="309" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="16.79" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (32 samples, 1.03%; +0.10%)</title><rect x="282.1" y="1477" width="12.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="285.07" y="1487.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; -0.03%)</title><rect x="1075.2" y="1493" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1078.18" y="1503.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::advance (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.35" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.03%; +0.03%)</title><rect x="18.3" y="53" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="21.34" y="63.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="66.8" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.84" y="239.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.26%; -0.16%)</title><rect x="398.4" y="1541" width="3.0" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="401.41" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%; 0.00%)</title><rect x="1105.5" y="1541" width="8.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.50" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1125" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1135.5" ></text>
</g>
<g >
<title>__start_context (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="549" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (31 samples, 1.00%; 0.00%)</title><rect x="118.0" y="1477" width="11.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.00" y="1487.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="385.5" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="388.52" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1397" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1407.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (7 samples, 0.22%; +0.03%)</title><rect x="913.8" y="1509" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="916.76" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="485" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="495.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.03%; +0.03%)</title><rect x="520.8" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="523.80" y="1487.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="732.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="735.25" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="116.9" y="1333" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1343.5" ></text>
</g>
<g >
<title>create_partitions (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="469" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="385.5" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="388.52" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="52.1" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="303.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1147.9" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1150.94" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.87" y="223.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="1081.6" y="1493" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1084.62" y="1503.5" ></text>
</g>
<g >
<title>row::compact_and_expire (34 samples, 1.09%; -0.03%)</title><rect x="495.0" y="1509" width="12.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="498.04" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="55.9" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="94.1" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.12" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; +0.03%)</title><rect x="869.0" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="872.04" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1311.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1653" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1663.5" >st..</text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="19.9" y="37" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="22.85" y="47.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="42.2" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="45.21" y="127.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_fd1596171e2adf1d6a1bd2abbc1d76b17b98ea7c] (1 samples, 0.03%; +0.03%)</title><rect x="1108.5" y="1285" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1111.53" y="1295.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="148.3" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="151.31" y="1503.5" ></text>
</g>
<g >
<title>siglongjmp@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="636.0" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="639.00" y="1599.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (156 samples, 5.01%; +0.16%)</title><rect x="963.4" y="1445" width="59.1" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="966.40" y="1455.5" >servic..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1247.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="78.6" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="81.59" y="479.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="808.8" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="811.79" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1343.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (6 samples, 0.19%; 0.00%)</title><rect x="91.1" y="1541" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.09" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1317" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1327.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="66.5" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="131.3" y="1509" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="134.26" y="1519.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="130.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.50" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (14 samples, 0.45%; 0.00%)</title><rect x="15.7" y="213" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.68" y="223.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="74.0" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="77.04" y="431.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.35%; 0.00%)</title><rect x="958.1" y="1445" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="961.09" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="66.5" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1327.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_fd1596171e2adf1d6a1bd2abbc1d76b17b98ea7c] (1 samples, 0.03%; +0.03%)</title><rect x="10.4" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="13.38" y="431.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (87 samples, 2.79%; 0.00%)</title><rect x="14.9" y="341" width="33.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.93" y="351.5" >se..</text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.03%; +0.03%)</title><rect x="143.4" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="146.38" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%; -0.03%)</title><rect x="90.3" y="1461" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="93.33" y="1471.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.10%; -0.16%)</title><rect x="385.9" y="1429" width="1.1" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="388.90" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="39.9" y="133" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="42.94" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="255.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (2 samples, 0.06%; 0.00%)</title><rect x="14.2" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1349" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1359.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (208 samples, 6.68%; -0.13%)</title><rect x="301.0" y="1445" width="78.8" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="304.02" y="1455.5" >partition..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (12 samples, 0.39%; -0.03%)</title><rect x="313.9" y="1413" width="4.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="316.90" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; 0.00%)</title><rect x="234.3" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="237.33" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.50" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (78 samples, 2.50%; +0.10%)</title><rect x="1045.2" y="1445" width="29.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1048.25" y="1455.5" >se..</text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.31" y="1599.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.06%)</title><rect x="816.8" y="1493" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="819.75" y="1503.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.48%; -0.06%)</title><rect x="240.0" y="1557" width="5.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="243.01" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1407.5" ></text>
</g>
<g >
<title>freeze (9 samples, 0.29%; 0.00%)</title><rect x="1107.4" y="1365" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.39" y="1375.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::grant_role_statement*, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.00" y="255.5" ></text>
</g>
<g >
<title>partition_entry::read (3 samples, 0.10%; -0.03%)</title><rect x="603.4" y="1493" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="606.41" y="1503.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%; 0.00%)</title><rect x="1105.5" y="1573" width="8.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1327.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (3 samples, 0.10%; 0.00%)</title><rect x="90.0" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.96" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="882.7" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="885.68" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1509" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1519.5" >[unknown]</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="997" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1007.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1375.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.16%; 0.00%)</title><rect x="709.5" y="1589" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.51" y="1599.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.03%; +0.03%)</title><rect x="38.4" y="197" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="41.42" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="1114.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.59" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="335.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1455.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.03%; +0.03%)</title><rect x="37.3" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="40.28" y="191.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.12" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="46.4" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.38" y="271.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.06%; +0.03%)</title><rect x="618.9" y="1477" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="621.95" y="1487.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="124.4" y="1237" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="127.44" y="1247.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.10%; +0.10%)</title><rect x="788.0" y="1509" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="790.95" y="1519.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.03%)</title><rect x="397.3" y="1541" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="400.27" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (3 samples, 0.10%; 0.00%)</title><rect x="50.2" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.17" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_role_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="44.1" y="293" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="47.10" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1391.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (82 samples, 2.63%; +0.06%)</title><rect x="987.6" y="1397" width="31.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="990.65" y="1407.5" >se..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="735.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1423.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (44 samples, 1.41%; 0.00%)</title><rect x="21.0" y="213" width="16.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.99" y="223.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="949" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="959.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.03%; +0.03%)</title><rect x="23.6" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="26.64" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; 0.00%)</title><rect x="295.7" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="298.72" y="1455.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (4 samples, 0.13%; -0.19%)</title><rect x="1142.6" y="1589" width="1.5" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="1145.63" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="805" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="815.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="143.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.19%; -0.10%)</title><rect x="806.5" y="1445" width="2.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="809.52" y="1455.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (23 samples, 0.74%; 0.00%)</title><rect x="1105.5" y="1525" width="8.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.50" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="950.5" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="953.51" y="1423.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.31" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1413" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1423.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="113.4" y="1381" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.45" y="1391.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_type_statement*, std::default_delete&lt;cql3::statements::drop_type_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="45.6" y="245" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="48.62" y="255.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="948.2" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="951.24" y="1471.5" ></text>
</g>
<g >
<title>auth::resource::parent (4 samples, 0.13%; +0.06%)</title><rect x="793.3" y="1493" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="796.26" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1215.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="1081.6" y="1477" width="2.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1084.62" y="1487.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%; -0.10%)</title><rect x="531.4" y="1509" width="3.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="534.41" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1589" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1599.5" >cq..</text>
</g>
<g >
<title>do_cql_test (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.03%; +0.03%)</title><rect x="1074.8" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1077.80" y="1503.5" ></text>
</g>
<g >
<title>__start_context (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="517" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_deleter (1 samples, 0.03%; +0.03%)</title><rect x="54.7" y="245" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="57.71" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1349" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="66.5" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="271.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.31" y="1615.5" ></text>
</g>
<g >
<title>cpuid_or_from_dump.lto_priv.0 (2 samples, 0.06%; +0.06%)</title><rect x="141.5" y="1717" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="144.49" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="794.8" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="797.77" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (2 samples, 0.06%; +0.03%)</title><rect x="1188.9" y="1733" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1191.86" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (19 samples, 0.61%; -0.16%)</title><rect x="379.8" y="1445" width="7.2" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="382.84" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; +0.06%)</title><rect x="168.4" y="1541" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="171.39" y="1551.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="879.3" y="1429" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.27" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; 0.00%)</title><rect x="1088.1" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1091.07" y="1471.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; -0.03%)</title><rect x="620.1" y="1461" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="623.08" y="1471.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.03%; -0.03%)</title><rect x="993.3" y="1365" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="996.33" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.03%; 0.00%)</title><rect x="86.9" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.92" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="841.4" y="1397" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="844.38" y="1407.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="303.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="647.7" y="1589" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="650.75" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="100.2" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.19" y="1407.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.03%; +0.03%)</title><rect x="726.6" y="1573" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="729.56" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (4 samples, 0.13%; -0.03%)</title><rect x="1145.7" y="1605" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1148.66" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.3" y="1173" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.29" y="1183.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="62.3" y="101" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="65.29" y="111.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1413" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.75" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="18.0" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.96" y="63.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (1 samples, 0.03%; 0.00%)</title><rect x="839.5" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.49" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1183.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (28 samples, 0.90%; +0.06%)</title><rect x="720.5" y="1589" width="10.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="723.50" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="207.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%; 0.00%)</title><rect x="845.2" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="124.4" y="1317" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1327.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="115.3" y="1253" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="118.34" y="1263.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="71.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.39" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql3::untyped_result_set&gt; &gt;, cql3::query_processor::execute_with_params (1 samples, 0.03%; 0.00%)</title><rect x="651.2" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="654.16" y="1615.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (4 samples, 0.13%; +0.06%)</title><rect x="579.5" y="1461" width="1.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="582.54" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; -0.10%)</title><rect x="538.2" y="1525" width="1.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="541.23" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="61.2" y="133" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="64.16" y="143.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="56.6" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.61" y="159.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1557" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1567.5" >cq..</text>
</g>
<g >
<title>seastar::thread_context::main (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="533" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (44 samples, 1.41%; +0.10%)</title><rect x="877.0" y="1461" width="16.7" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="880.00" y="1471.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.45%; -0.03%)</title><rect x="1107.0" y="1429" width="5.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1110.01" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (82 samples, 2.63%; 0.00%)</title><rect x="15.7" y="309" width="31.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.68" y="319.5" >cq..</text>
</g>
<g >
<title>row_cache::do_make_reader (27 samples, 0.87%; +0.16%)</title><rect x="614.4" y="1493" width="10.2" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="617.40" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.3" y="1269" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1279.5" ></text>
</g>
<g >
<title>__start_context (8 samples, 0.26%; 0.00%)</title><rect x="138.1" y="1717" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.08" y="1727.5" ></text>
</g>
<g >
<title>mutation::data::data (2 samples, 0.06%; 0.00%)</title><rect x="844.0" y="1477" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="847.03" y="1487.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="80.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.10" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1311.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="501" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="511.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.03%)</title><rect x="561.3" y="1477" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="564.35" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="71.4" y="405" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="74.39" y="415.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (7 samples, 0.22%; +0.06%)</title><rect x="1107.8" y="1333" width="2.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1110.77" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1199.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%; 0.00%)</title><rect x="648.5" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="651.50" y="1599.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.03%; 0.00%)</title><rect x="38.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.04" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.03%; 0.00%)</title><rect x="938.4" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="941.39" y="1487.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; -0.03%)</title><rect x="829.3" y="1557" width="2.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="832.25" y="1567.5" ></text>
</g>
<g >
<title>__libc_siglongjmp (1 samples, 0.03%; +0.03%)</title><rect x="86.9" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="89.92" y="1583.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_fd1596171e2adf1d6a1bd2abbc1d76b17b98ea7c] (1 samples, 0.03%; +0.03%)</title><rect x="753.1" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="756.09" y="1567.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::~keyspace_element_name (1 samples, 0.03%; +0.03%)</title><rect x="41.1" y="261" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="44.07" y="271.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.03%; 0.00%)</title><rect x="142.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.63" y="1727.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (37 samples, 1.19%; +0.10%)</title><rect x="157.0" y="1605" width="14.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="160.03" y="1615.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.88" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="69.9" y="101" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="72.87" y="111.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (4 samples, 0.13%; 0.00%)</title><rect x="127.8" y="1413" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1423.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.03%)</title><rect x="685.6" y="1589" width="1.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="688.64" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; +0.03%)</title><rect x="85.0" y="549" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="88.03" y="559.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (7 samples, 0.22%; +0.10%)</title><rect x="392.3" y="1493" width="2.7" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="395.34" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="884.2" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.20" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.03%)</title><rect x="678.4" y="1589" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="681.44" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (18 samples, 0.58%; 0.00%)</title><rect x="71.0" y="469" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.01" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.59" y="1391.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="101" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.06%)</title><rect x="518.5" y="1477" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="521.53" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1567.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.10%)</title><rect x="1131.6" y="1589" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1134.64" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (21 samples, 0.67%; 0.00%)</title><rect x="70.6" y="485" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="495.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; +0.03%)</title><rect x="910.3" y="1509" width="2.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="913.35" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (5 samples, 0.16%; 0.00%)</title><rect x="844.8" y="1493" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="847.79" y="1503.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.03%; -0.13%)</title><rect x="962.6" y="1445" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="965.64" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="901" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="911.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (244 samples, 7.84%; 0.00%)</title><rect x="296.1" y="1461" width="92.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="299.10" y="1471.5" >partition_s..</text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; -0.03%)</title><rect x="330.6" y="1397" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="333.58" y="1407.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (120 samples, 3.85%; +0.06%)</title><rect x="777.3" y="1525" width="45.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="780.34" y="1535.5" >serv..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="739.8" y="1557" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="742.83" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (23 samples, 0.74%; -0.16%)</title><rect x="518.9" y="1493" width="8.7" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="521.91" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="121.4" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.41" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (5 samples, 0.16%; -0.03%)</title><rect x="1149.1" y="1621" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1152.08" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="57.0" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="319.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (16 samples, 0.51%; +0.10%)</title><rect x="1165.7" y="1717" width="6.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1168.75" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.13%; 0.00%)</title><rect x="592.8" y="1461" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="595.80" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="111.6" y="1109" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.55" y="1119.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; +0.06%)</title><rect x="161.6" y="1589" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="164.57" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="836.8" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.83" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.88" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; +0.06%)</title><rect x="1147.2" y="1605" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1150.18" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="405" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::end (1 samples, 0.03%; +0.03%)</title><rect x="64.2" y="309" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="67.19" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1333" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1343.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::list_service_level_statement*, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.51" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="76.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.69" y="319.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.03%; 0.00%)</title><rect x="840.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.24" y="1423.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (6 samples, 0.19%; -0.16%)</title><rect x="630.7" y="1557" width="2.3" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="633.69" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1477" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1487.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (2 samples, 0.06%; +0.06%)</title><rect x="22.9" y="181" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="25.88" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="811.8" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="814.82" y="1439.5" ></text>
</g>
<g >
<title>cdc::do_update_streams_description (1 samples, 0.03%; 0.00%)</title><rect x="173.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.32" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.84" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="82.0" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="85.00" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.03%; 0.00%)</title><rect x="81.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.62" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="165" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.9" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.88" y="239.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (11 samples, 0.35%; +0.16%)</title><rect x="490.5" y="1509" width="4.2" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="493.49" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="175.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.10%; 0.00%)</title><rect x="766.4" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="769.35" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::alter_type_statement*, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="44.9" y="261" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="47.86" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="655.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.32" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="725" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="735.5" >[unknown]</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.3" y="1221" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1231.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_type_statement, std::default_delete&lt;cql3::statements::drop_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="45.6" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.62" y="271.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.03%; 0.00%)</title><rect x="845.2" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.17" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1343.5" ></text>
</g>
<g >
<title>frozen_mutation::column_family_id (1 samples, 0.03%; +0.03%)</title><rect x="1097.9" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1100.92" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1317" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1327.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (248 samples, 7.96%; -0.10%)</title><rect x="294.6" y="1477" width="94.0" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="297.58" y="1487.5" >partition_s..</text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="111.6" y="1237" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1247.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1295.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; 0.00%)</title><rect x="179.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.00" y="1583.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="52.8" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.82" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.06%; +0.03%)</title><rect x="107.0" y="1109" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.01" y="1119.5" ></text>
</g>
<g >
<title>seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (1 samples, 0.03%; 0.00%)</title><rect x="637.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="640.51" y="1599.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (2 samples, 0.06%; 0.00%)</title><rect x="14.2" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="303.5" ></text>
</g>
<g >
<title>partition_entry::apply (1 samples, 0.03%; 0.00%)</title><rect x="1103.6" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.60" y="1471.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.31" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (5 samples, 0.16%; -0.03%)</title><rect x="1112.3" y="1397" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1115.32" y="1407.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; -0.03%)</title><rect x="232.1" y="1541" width="2.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="235.06" y="1551.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="390.1" y="1493" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="393.07" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (17 samples, 0.55%; 0.00%)</title><rect x="87.3" y="1589" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.30" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; +0.03%)</title><rect x="46.8" y="309" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="49.76" y="319.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (10 samples, 0.32%; 0.00%)</title><rect x="1003.6" y="1333" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1006.56" y="1343.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; -0.06%)</title><rect x="252.5" y="1557" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="255.52" y="1567.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::list_permissions_statement*, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.13" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (2,657 samples, 85.32%; 0.00%)</title><rect x="144.1" y="1733" width="1006.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.14" y="1743.5" >__libc_start_main</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; +0.03%)</title><rect x="53.6" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="56.58" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.06%)</title><rect x="1138.8" y="1589" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1141.84" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (197 samples, 6.33%; 0.00%)</title><rect x="10.4" y="677" width="74.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="687.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_options::query_options (15 samples, 0.48%; -0.03%)</title><rect x="741.3" y="1573" width="5.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="744.34" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.03%)</title><rect x="116.1" y="1189" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="119.10" y="1199.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.16%; +0.13%)</title><rect x="701.2" y="1589" width="1.9" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="704.18" y="1599.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.9" y="1077" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="1087.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (136 samples, 4.37%; -0.10%)</title><rect x="971.0" y="1429" width="51.5" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="973.98" y="1439.5" >servi..</text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,657 samples, 85.32%; 0.00%)</title><rect x="144.1" y="1669" width="1006.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.14" y="1679.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.19%)</title><rect x="881.5" y="1397" width="0.4" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="884.55" y="1407.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.64" y="1631.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (5 samples, 0.16%; -0.03%)</title><rect x="889.1" y="1413" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="892.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1173" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1183.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; -0.10%)</title><rect x="208.6" y="1541" width="0.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="211.56" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (24 samples, 0.77%; -0.06%)</title><rect x="1000.9" y="1349" width="9.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1003.91" y="1359.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1375.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="111.2" y="1317" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.18" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.35%; 0.00%)</title><rect x="1013.4" y="1365" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1016.42" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="124.4" y="1301" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; 0.00%)</title><rect x="809.6" y="1445" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.55" y="1455.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="725.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.05" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="111.6" y="1141" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1151.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1407.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.22%)</title><rect x="192.3" y="1573" width="1.1" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="195.27" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="79.7" y="405" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="82.72" y="415.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%; 0.00%)</title><rect x="178.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1567.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="1111.6" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.56" y="1343.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.8" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.81" y="1359.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1541" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1551.5" >se..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1141" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1061" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1205" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1215.5" >[unknown]</text>
</g>
<g >
<title>table::set_hit_rate (10 samples, 0.32%; +0.06%)</title><rect x="727.3" y="1573" width="3.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="730.32" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="650.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="653.02" y="1599.5" ></text>
</g>
<g >
<title>do_cql_test (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="453" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="981" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="991.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="981" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="991.5" >[unknown]</text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="720.1" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="723.12" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="43.0" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.97" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1295.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (71 samples, 2.28%; -0.22%)</title><rect x="1117.2" y="1605" width="26.9" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="1120.24" y="1615.5" >s..</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="53.6" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.58" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1247.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1106.3" y="1445" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1109.26" y="1455.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.55" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="767.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; 0.00%)</title><rect x="711.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="714.03" y="1583.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_tail (1 samples, 0.03%; +0.03%)</title><rect x="54.3" y="101" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="57.34" y="111.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="39.9" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.94" y="191.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.06%; 0.00%)</title><rect x="214.2" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.25" y="1583.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.64" y="1663.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (2 samples, 0.06%; -0.06%)</title><rect x="831.9" y="1557" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="834.91" y="1567.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (39 samples, 1.25%; 0.00%)</title><rect x="22.9" y="197" width="14.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.88" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="47.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.51" y="287.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="636.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="639.00" y="1615.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (2 samples, 0.06%; +0.06%)</title><rect x="145.7" y="1621" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="148.66" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="93.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.74" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; +0.03%)</title><rect x="41.8" y="261" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="44.83" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; +0.06%)</title><rect x="118.8" y="1349" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="121.75" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.9" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.87" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="159.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_tail (1 samples, 0.03%; +0.03%)</title><rect x="129.4" y="1189" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="132.36" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1525" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1535.5" >[unknown]</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="159.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.8" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.81" y="1375.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%; +0.03%)</title><rect x="341.6" y="1381" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="344.57" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="58.1" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="61.12" y="191.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.06%; +0.06%)</title><rect x="312.4" y="1413" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="315.39" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="239.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="421" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="431.5" ></text>
</g>
<g >
<title>[unknown] (146 samples, 4.69%; 0.00%)</title><rect x="10.4" y="613" width="55.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="623.5" >[unkn..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1327.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (2 samples, 0.06%; +0.06%)</title><rect x="743.2" y="1541" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="746.24" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,657 samples, 85.32%; 0.00%)</title><rect x="144.1" y="1653" width="1006.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.14" y="1663.5" >seastar::reactor::run</text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.03%)</title><rect x="185.1" y="1589" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="188.07" y="1599.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (9 samples, 0.29%; +0.13%)</title><rect x="133.9" y="1685" width="3.4" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="136.91" y="1695.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token (1 samples, 0.03%; +0.03%)</title><rect x="26.3" y="181" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="29.29" y="191.5" ></text>
</g>
<g >
<title>database::apply_in_memory (1 samples, 0.03%; +0.03%)</title><rect x="1096.8" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1099.78" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.45%; 0.00%)</title><rect x="1107.0" y="1397" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.01" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.4" y="1253" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1263.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.03%; 0.00%)</title><rect x="837.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.21" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="650.4" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="653.40" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="191.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="57.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.75" y="271.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="558.7" y="1477" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="561.70" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (4 samples, 0.13%; +0.06%)</title><rect x="604.5" y="1493" width="1.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="607.55" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1359.5" ></text>
</g>
<g >
<title>__start_context (102 samples, 3.28%; 0.00%)</title><rect x="10.4" y="501" width="38.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="511.5" >__s..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%; -0.03%)</title><rect x="620.1" y="1477" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="623.08" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%; 0.00%)</title><rect x="76.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.69" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1183.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.06%; +0.03%)</title><rect x="374.2" y="1413" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="377.16" y="1423.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (7 samples, 0.22%; +0.06%)</title><rect x="1129.0" y="1589" width="2.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1131.99" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="56.2" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::conjunction&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="126.7" y="1397" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="129.71" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="123.3" y="1109" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="126.30" y="1119.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (14 samples, 0.45%; 0.00%)</title><rect x="15.7" y="229" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.68" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="120.3" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.27" y="1327.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="106.2" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.25" y="1167.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="57.0" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="59.99" y="127.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.03%; 0.00%)</title><rect x="14.2" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="261" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (16 samples, 0.51%; +0.16%)</title><rect x="711.4" y="1589" width="6.1" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="714.41" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.32%; 0.00%)</title><rect x="55.9" y="389" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.85" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="56.6" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.61" y="191.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::alter_type_statement*, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="44.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.48" y="255.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%; +0.03%)</title><rect x="1039.9" y="1429" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1042.94" y="1439.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (127 samples, 4.08%; -0.16%)</title><rect x="973.2" y="1413" width="48.2" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="976.25" y="1423.5" >serv..</text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (5 samples, 0.16%; 0.00%)</title><rect x="1112.3" y="1413" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.32" y="1423.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.06%; 0.00%)</title><rect x="766.7" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="769.73" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; +0.19%)</title><rect x="744.0" y="1525" width="3.0" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="746.99" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; -0.03%)</title><rect x="598.1" y="1445" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="601.11" y="1455.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="14.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.93" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (390 samples, 12.52%; +0.10%)</title><rect x="927.8" y="1509" width="147.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="930.78" y="1519.5" >service::storage_p..</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="96.8" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.78" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1621" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1631.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="126.3" y="1317" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="129.33" y="1327.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="50.9" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.92" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.65" y="1423.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (6 samples, 0.19%; 0.00%)</title><rect x="91.1" y="1557" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.09" y="1567.5" ></text>
</g>
<g >
<title>cql3::untyped_result_set::untyped_result_set (1 samples, 0.03%; 0.00%)</title><rect x="651.2" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="654.16" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="341" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (3 samples, 0.10%; 0.00%)</title><rect x="115.0" y="1317" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1327.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.03%; 0.00%)</title><rect x="94.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.50" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="111.6" y="1205" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1215.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1375.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="39.6" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.56" y="255.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; +0.03%)</title><rect x="173.3" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="176.32" y="1551.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="100.6" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.57" y="1391.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.62" y="1231.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (3 samples, 0.10%; +0.10%)</title><rect x="489.4" y="1509" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="492.35" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.06%; +0.06%)</title><rect x="894.1" y="1461" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="897.05" y="1471.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (7 samples, 0.22%; +0.03%)</title><rect x="97.5" y="1397" width="2.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="100.53" y="1407.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="62.3" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.29" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="85.4" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.41" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5 samples, 0.16%; +0.10%)</title><rect x="28.2" y="133" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="31.19" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="84.3" y="437" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="87.27" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%; -0.03%)</title><rect x="508.7" y="1525" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="511.68" y="1535.5" ></text>
</g>
<g >
<title>database::find_schema (10 samples, 0.32%; -0.13%)</title><rect x="773.6" y="1525" width="3.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="776.55" y="1535.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="767.5" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="770.49" y="1519.5" ></text>
</g>
<g >
<title>seastar::aio_storage_context::reap_completions (1 samples, 0.03%; 0.00%)</title><rect x="1149.5" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.45" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (1 samples, 0.03%; 0.00%)</title><rect x="75.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.93" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; +0.06%)</title><rect x="997.9" y="1333" width="3.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1000.88" y="1343.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (5 samples, 0.16%; +0.03%)</title><rect x="71.8" y="373" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="74.77" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="19.9" y="85" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.85" y="95.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; 0.00%)</title><rect x="139.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="112.7" y="1285" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1295.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="732.6" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="735.63" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::deallocate (1 samples, 0.03%; +0.03%)</title><rect x="20.6" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.61" y="127.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_type_statement, std::default_delete&lt;cql3::statements::drop_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="45.6" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.62" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="949" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="959.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="335.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="525.0" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="527.97" y="1455.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="753.5" y="1557" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="756.47" y="1567.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%; +0.03%)</title><rect x="527.6" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="530.62" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; -0.03%)</title><rect x="113.1" y="1077" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="116.07" y="1087.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.10%; 0.00%)</title><rect x="49.0" y="277" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%; -0.06%)</title><rect x="629.2" y="1557" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="632.18" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%; +0.10%)</title><rect x="430.6" y="1445" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="433.62" y="1455.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.19%; +0.03%)</title><rect x="171.0" y="1605" width="2.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="174.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="839.5" y="1429" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="842.49" y="1439.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="597" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="607.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1157" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1167.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (146 samples, 4.69%; 0.00%)</title><rect x="10.4" y="597" width="55.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="607.5" >[unkn..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="685.3" y="1557" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="688.26" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (2 samples, 0.06%; 0.00%)</title><rect x="14.2" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (40 samples, 1.28%; -0.06%)</title><rect x="703.4" y="1605" width="15.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="706.45" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (200 samples, 6.42%; 0.00%)</title><rect x="10.4" y="1061" width="75.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1071.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.10%; 0.00%)</title><rect x="834.9" y="1605" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="837.94" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="255.5" ></text>
</g>
<g >
<title>do_cql_test (18 samples, 0.58%; 0.00%)</title><rect x="86.9" y="1621" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.92" y="1631.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (8 samples, 0.26%; 0.00%)</title><rect x="1139.6" y="1589" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.60" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="191.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="51.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.3" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.25" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.03%)</title><rect x="1018.0" y="1381" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1020.96" y="1391.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="120.3" y="1237" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="123.27" y="1247.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; +0.03%)</title><rect x="105.9" y="1237" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="108.87" y="1247.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.55" y="255.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (3 samples, 0.10%; +0.03%)</title><rect x="833.4" y="1589" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="836.42" y="1599.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.03%; +0.03%)</title><rect x="77.8" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="80.83" y="479.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 11.30%; 0.00%)</title><rect x="10.4" y="1733" width="133.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1743.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.10%; +0.03%)</title><rect x="35.8" y="165" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="38.77" y="175.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="111.2" y="1349" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.18" y="1359.5" ></text>
</g>
<g >
<title>sstables::sstable::write_compression (1 samples, 0.03%; 0.00%)</title><rect x="140.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.73" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="43.7" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.73" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.42%; +0.19%)</title><rect x="240.8" y="1541" width="4.9" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="243.77" y="1551.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.03%; 0.00%)</title><rect x="38.0" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.04" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; 0.00%)</title><rect x="1011.5" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1014.52" y="1375.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="50.9" y="213" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="53.92" y="223.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%; 0.00%)</title><rect x="737.6" y="1589" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="740.55" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="379.5" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="382.46" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="115.0" y="1221" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="117.96" y="1231.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (3 samples, 0.10%; +0.06%)</title><rect x="488.2" y="1509" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="491.21" y="1519.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (283 samples, 9.09%; -0.10%)</title><rect x="402.2" y="1541" width="107.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="405.20" y="1551.5" >query::consum..</text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="948.6" y="1461" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="951.62" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1263.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.10%; +0.03%)</title><rect x="888.0" y="1413" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="890.99" y="1423.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (11 samples, 0.35%; 0.00%)</title><rect x="839.9" y="1477" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.87" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="42.2" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="143.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1077" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1087.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="113.8" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.83" y="1327.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; 0.00%)</title><rect x="173.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.32" y="1567.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.06%; 0.00%)</title><rect x="1113.1" y="1365" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.08" y="1375.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (5 samples, 0.16%; 0.00%)</title><rect x="67.2" y="389" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.22" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="193.4" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="196.40" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.06%; 0.00%)</title><rect x="295.3" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="298.34" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="271.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1061" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1071.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (6 samples, 0.19%; 0.00%)</title><rect x="79.7" y="421" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.72" y="431.5" ></text>
</g>
<g >
<title>syscall-0 (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="1759.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (14 samples, 0.45%; +0.06%)</title><rect x="680.3" y="1589" width="5.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="683.33" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (102 samples, 3.28%; 0.00%)</title><rect x="10.4" y="485" width="38.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="495.5" >sea..</text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; +0.03%)</title><rect x="209.3" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="212.32" y="1551.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (21 samples, 0.67%; 0.00%)</title><rect x="1097.2" y="1525" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1100.16" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="687.2" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="690.15" y="1599.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (3 samples, 0.10%; 0.00%)</title><rect x="1112.7" y="1381" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.70" y="1391.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (3 samples, 0.10%; +0.03%)</title><rect x="1149.8" y="1589" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1152.83" y="1599.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%; 0.00%)</title><rect x="76.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.31" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="60.8" y="277" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="63.78" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (13 samples, 0.42%; 0.00%)</title><rect x="104.4" y="1317" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.35" y="1327.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (2 samples, 0.06%; 0.00%)</title><rect x="14.2" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; -0.10%)</title><rect x="826.2" y="1525" width="1.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="829.22" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1333" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1343.5" >[unknown]</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="534.8" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="537.82" y="1519.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (41 samples, 1.32%; 0.00%)</title><rect x="512.5" y="1525" width="15.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="515.47" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="101" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="111.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; 0.00%)</title><rect x="792.9" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="795.88" y="1503.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; -0.03%)</title><rect x="212.4" y="1557" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="215.35" y="1567.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="110.8" y="1125" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="113.80" y="1135.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; +0.03%)</title><rect x="102.5" y="1365" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="105.46" y="1375.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (14 samples, 0.45%; -0.06%)</title><rect x="303.3" y="1429" width="5.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="306.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="122.5" y="1349" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1359.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1151.0" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1153.97" y="1743.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1237" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1247.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="373" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1295.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="611.0" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="613.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1157" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1167.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1150.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.21" y="1551.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%; +0.03%)</title><rect x="38.0" y="197" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="41.04" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (38 samples, 1.22%; +0.03%)</title><rect x="996.7" y="1365" width="14.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="999.74" y="1375.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (23 samples, 0.74%; +0.13%)</title><rect x="332.1" y="1381" width="8.7" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="335.09" y="1391.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="850.1" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="853.10" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.48%; 0.00%)</title><rect x="131.6" y="1701" width="5.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.64" y="1711.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%; 0.00%)</title><rect x="845.2" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.17" y="1407.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="85" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="95.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="719.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1141" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1151.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="191.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.03%; +0.03%)</title><rect x="140.0" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="142.97" y="1583.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%; 0.00%)</title><rect x="1151.7" y="1733" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1154.73" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (11 samples, 0.35%; 0.00%)</title><rect x="55.5" y="421" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="842.5" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="845.52" y="1423.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="42.2" y="213" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1279.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; 0.00%)</title><rect x="1039.2" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.18" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; +0.03%)</title><rect x="737.6" y="1573" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="740.55" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%; +0.03%)</title><rect x="955.1" y="1461" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="958.06" y="1471.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (95 samples, 3.05%; 0.00%)</title><rect x="93.7" y="1685" width="36.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.74" y="1695.5" >sea..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2 samples, 0.06%; +0.06%)</title><rect x="387.0" y="1445" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="390.04" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1397" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.75" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1085.8" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1088.79" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1471.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="52.8" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.82" y="239.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1189" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1199.5" >[unknown]</text>
</g>
<g >
<title>table::query (1,102 samples, 35.39%; -0.29%)</title><rect x="215.4" y="1573" width="417.6" height="15.0" fill="rgb(75,75,255)" rx="2" ry="2" />
<text  x="218.38" y="1583.5" >table::query</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (36 samples, 1.16%; +0.03%)</title><rect x="718.6" y="1605" width="13.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="721.61" y="1615.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (49 samples, 1.57%; -0.03%)</title><rect x="876.2" y="1493" width="18.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="879.24" y="1503.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (3 samples, 0.10%; +0.03%)</title><rect x="1100.2" y="1445" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1103.19" y="1455.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.06%; -0.03%)</title><rect x="133.2" y="1685" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="136.15" y="1695.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%; +0.03%)</title><rect x="845.5" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="848.55" y="1455.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; -0.06%)</title><rect x="299.9" y="1429" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="302.88" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.13%)</title><rect x="160.1" y="1589" width="1.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="163.06" y="1599.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="584.1" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="587.08" y="1471.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.16%; -0.19%)</title><rect x="353.7" y="1365" width="1.9" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="356.69" y="1375.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.45%; 0.00%)</title><rect x="1107.0" y="1413" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.01" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="66.5" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="223.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (22 samples, 0.71%; 0.00%)</title><rect x="1105.9" y="1477" width="8.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.88" y="1487.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.10%; 0.00%)</title><rect x="814.9" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="817.86" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="52.1" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (11 samples, 0.35%; +0.10%)</title><rect x="594.3" y="1461" width="4.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="597.32" y="1471.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::alter_type_statement&gt;, true&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="44.5" y="213" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="47.48" y="223.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1445" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1455.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="485" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="46.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.38" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;frozen_schema  (1 samples, 0.03%; 0.00%)</title><rect x="178.2" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="62.3" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.29" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="672.8" y="1557" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="675.76" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.44" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="972.9" y="1413" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="975.87" y="1423.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.03%; 0.00%)</title><rect x="624.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="627.63" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (10 samples, 0.32%; +0.03%)</title><rect x="51.7" y="309" width="3.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="54.68" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="14.2" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (2 samples, 0.06%; +0.06%)</title><rect x="32.4" y="181" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="35.36" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (13 samples, 0.42%; 0.00%)</title><rect x="839.9" y="1493" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.87" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.16%; +0.06%)</title><rect x="185.4" y="1589" width="1.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="188.45" y="1599.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="780.4" y="1509" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="783.37" y="1519.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (17 samples, 0.55%; 0.00%)</title><rect x="78.6" y="485" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.59" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (383 samples, 12.30%; -0.06%)</title><rect x="929.7" y="1493" width="145.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="932.67" y="1503.5" >service::storage_p..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (8 samples, 0.26%; +0.06%)</title><rect x="633.0" y="1589" width="3.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="635.97" y="1599.5" ></text>
</g>
<g >
<title>query::querier_base::close (2 samples, 0.06%; +0.06%)</title><rect x="194.2" y="1573" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="197.16" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1263.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="809.6" y="1461" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.55" y="1471.5" ></text>
</g>
<g >
<title>perf_simple_que (3,113 samples, 99.97%; 0.00%)</title><rect x="10.0" y="1749" width="1179.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="1759.5" >perf_simple_que</text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; -0.03%)</title><rect x="507.5" y="1477" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="510.54" y="1487.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.13%; +0.10%)</title><rect x="163.8" y="1573" width="1.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="166.85" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; 0.00%)</title><rect x="950.5" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="953.51" y="1407.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; 0.00%)</title><rect x="118.8" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.75" y="1455.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; +0.03%)</title><rect x="903.5" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="906.53" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="39.9" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.94" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; 0.00%)</title><rect x="113.8" y="1333" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.83" y="1343.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.03%; +0.03%)</title><rect x="827.4" y="1541" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="830.36" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="837" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="847.5" ></text>
</g>
<g >
<title>[unknown] (119 samples, 3.82%; 0.00%)</title><rect x="10.4" y="549" width="45.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="559.5" >[unk..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; -0.03%)</title><rect x="113.1" y="1205" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="116.07" y="1215.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1455.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="255.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.03%; +0.03%)</title><rect x="1100.6" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1103.57" y="1423.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (49 samples, 1.57%; -0.10%)</title><rect x="1153.2" y="1733" width="18.6" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1156.24" y="1743.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; -0.03%)</title><rect x="582.6" y="1477" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="585.57" y="1487.5" ></text>
</g>
<g >
<title>do_cql_test (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="469" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1263.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1029" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1039.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token_present (1 samples, 0.03%; +0.03%)</title><rect x="21.7" y="197" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="24.75" y="207.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.06%; 0.00%)</title><rect x="94.1" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.12" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (68 samples, 2.18%; -0.06%)</title><rect x="510.6" y="1541" width="25.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="513.57" y="1551.5" >s..</text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (3 samples, 0.10%; 0.00%)</title><rect x="178.2" y="1605" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1615.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.03" y="607.5" ></text>
</g>
<g >
<title>database::query (59 samples, 1.89%; -0.16%)</title><rect x="989.5" y="1381" width="22.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="992.54" y="1391.5" >d..</text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.03%; 0.00%)</title><rect x="178.6" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.63" y="1535.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (34 samples, 1.09%; 0.00%)</title><rect x="838.0" y="1589" width="12.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.97" y="1599.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; -0.06%)</title><rect x="575.4" y="1493" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="578.37" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1301" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1311.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="1116.9" y="1605" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1119.87" y="1615.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (1 samples, 0.03%; -0.03%)</title><rect x="891.0" y="1429" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="894.02" y="1439.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.03%; 0.00%)</title><rect x="178.2" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (58 samples, 1.86%; 0.00%)</title><rect x="96.0" y="1477" width="22.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1487.5" >c..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_line (1 samples, 0.03%; +0.03%)</title><rect x="24.8" y="165" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="27.78" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1359.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="116.9" y="1285" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1295.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%; 0.00%)</title><rect x="86.2" y="1141" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1093" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1103.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (25 samples, 0.80%; +0.03%)</title><rect x="1075.6" y="1525" width="9.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1078.56" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (4 samples, 0.13%; -0.03%)</title><rect x="1110.8" y="1365" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1113.80" y="1375.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="526.9" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="529.87" y="1487.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.03%; +0.03%)</title><rect x="924.4" y="1509" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="927.37" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="255.5" ></text>
</g>
<g >
<title>query_result_builder::consume (110 samples, 3.53%; -0.10%)</title><rect x="438.6" y="1509" width="41.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="441.57" y="1519.5" >que..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="43.3" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="46.35" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="106.2" y="1013" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="109.25" y="1023.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="709" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="719.5" >[unknown]</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (29 samples, 0.93%; -0.03%)</title><rect x="496.6" y="1477" width="10.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="499.55" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_roles_statement, std::default_delete&lt;cql3::statements::list_roles_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_roles_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="47.1" y="309" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="50.14" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1199.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="388.6" y="1493" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="391.55" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="128.2" y="1317" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="131.23" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.9" y="1045" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="1055.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="996.4" y="1349" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="999.36" y="1359.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="80.9" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.86" y="223.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="373" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="383.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1493" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1503.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (5 samples, 0.16%; 0.00%)</title><rect x="62.7" y="325" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="335.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="40.3" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="43.31" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="63.1" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.05" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%; 0.00%)</title><rect x="1096.8" y="1573" width="8.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1099.78" y="1583.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1167.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="832.7" y="1557" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="835.67" y="1567.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (51 samples, 1.64%; +0.10%)</title><rect x="459.4" y="1477" width="19.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="462.42" y="1487.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="66.5" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.46" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="64.9" y="325" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="67.95" y="335.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (1 samples, 0.03%; -0.03%)</title><rect x="1102.1" y="1445" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1105.09" y="1455.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="924.7" y="1509" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.75" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.96" y="191.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="39.6" y="213" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="42.56" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="107.4" y="1093" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.39" y="1103.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="645" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.03" y="655.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="1113.5" y="1333" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1116.46" y="1343.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.3" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.25" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="111.9" y="1013" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.93" y="1023.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (1 samples, 0.03%; +0.03%)</title><rect x="825.8" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="828.84" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.64%; -0.06%)</title><rect x="980.1" y="1381" width="7.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="983.07" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="127.1" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.09" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="59.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="787.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="790.57" y="1519.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.06%; +0.06%)</title><rect x="137.3" y="1717" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="140.32" y="1727.5" ></text>
</g>
<g >
<title>is_system_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="73.7" y="421" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="76.66" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="119.9" y="1285" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="122.89" y="1295.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="51.3" y="117" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="54.30" y="127.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="592.0" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="595.04" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (18 samples, 0.58%; 0.00%)</title><rect x="122.5" y="1445" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.54" y="1455.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="118.4" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="121.38" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="39.2" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.18" y="223.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="179.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.00" y="1503.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (3 samples, 0.10%; 0.00%)</title><rect x="732.6" y="1605" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="735.63" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.47" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="335.5" ></text>
</g>
<g >
<title>schema::clustering_key_columns (1 samples, 0.03%; +0.03%)</title><rect x="90.7" y="1477" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="93.71" y="1487.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (13 samples, 0.42%; +0.06%)</title><rect x="646.2" y="1605" width="5.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="649.23" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="565" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="175.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1583.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.13%; -0.03%)</title><rect x="1035.8" y="1445" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1038.77" y="1455.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="884.6" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.58" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1199.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="967.2" y="1429" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.19" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="814.1" y="1477" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="817.10" y="1487.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.9" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.94" y="1359.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="613" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="623.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="842.9" y="1397" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="845.90" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 3.47%; 0.00%)</title><rect x="10.4" y="533" width="40.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="543.5" >[un..</text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1503.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.06%; +0.06%)</title><rect x="387.8" y="1445" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="390.80" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="36.1" y="133" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="39.15" y="143.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="58.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.12" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.03%; 0.00%)</title><rect x="215.0" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.00" y="1439.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; 0.00%)</title><rect x="843.7" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.65" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="93.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.74" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1605" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1615.5" >[unknown]</text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.55" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%; +0.03%)</title><rect x="187.0" y="1573" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="189.96" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="213.1" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="216.11" y="1583.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%; 0.00%)</title><rect x="845.2" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.17" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.16%)</title><rect x="948.6" y="1445" width="2.3" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="951.62" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="357" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (2 samples, 0.06%; 0.00%)</title><rect x="837.2" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.21" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; +0.03%)</title><rect x="63.1" y="261" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="66.05" y="271.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; +0.03%)</title><rect x="598.5" y="1461" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="601.48" y="1471.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.03%)</title><rect x="670.1" y="1541" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="673.10" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="415.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="757" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="767.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1253" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1263.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="127.8" y="1221" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="130.85" y="1231.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (102 samples, 3.28%; 0.00%)</title><rect x="10.4" y="469" width="38.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="479.5" >sea..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1231.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; 0.00%)</title><rect x="915.7" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="918.65" y="1503.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (30 samples, 0.96%; -0.16%)</title><rect x="691.7" y="1605" width="11.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="694.70" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (3 samples, 0.10%; 0.00%)</title><rect x="40.7" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.69" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="39.9" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.94" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (35 samples, 1.12%; -0.22%)</title><rect x="895.6" y="1509" width="13.2" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="898.57" y="1519.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%; +0.03%)</title><rect x="993.7" y="1365" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="996.71" y="1375.5" ></text>
</g>
<g >
<title>schema::column_at (8 samples, 0.26%; -0.03%)</title><rect x="337.8" y="1365" width="3.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="340.78" y="1375.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="121.8" y="1413" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1423.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.03%; 0.00%)</title><rect x="840.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.62" y="1407.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (6 samples, 0.19%; 0.00%)</title><rect x="97.9" y="1381" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.91" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::get (1 samples, 0.03%; +0.03%)</title><rect x="83.9" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="86.89" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.03%; +0.03%)</title><rect x="1111.9" y="1349" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1114.94" y="1359.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="62.7" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.67" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="927.4" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="930.40" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="331.0" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="333.96" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="308.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.60" y="1423.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="21.4" y="197" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="24.37" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1253" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1263.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="125.2" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="128.20" y="1343.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="703.1" y="1605" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="706.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="213" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="223.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.03%; +0.03%)</title><rect x="844.4" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="847.41" y="1471.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (22 samples, 0.71%; 0.00%)</title><rect x="102.8" y="1365" width="8.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.84" y="1375.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.06%; +0.03%)</title><rect x="1102.8" y="1429" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1105.85" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="50.5" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.55" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="236.6" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="239.60" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (62 samples, 1.99%; 0.00%)</title><rect x="15.7" y="293" width="23.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.68" y="303.5" >a..</text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.03%; 0.00%)</title><rect x="178.2" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.16%; +0.06%)</title><rect x="16.8" y="117" width="1.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="19.82" y="127.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.06%; +0.06%)</title><rect x="307.5" y="1413" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="310.46" y="1423.5" ></text>
</g>
<g >
<title>schema::column_at (12 samples, 0.39%; +0.13%)</title><rect x="503.0" y="1461" width="4.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="505.99" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="649.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="652.64" y="1599.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.06%; -0.03%)</title><rect x="623.9" y="1477" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="626.87" y="1487.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.06%; 0.00%)</title><rect x="581.1" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="584.05" y="1503.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.10%; +0.10%)</title><rect x="955.4" y="1461" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="958.44" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.06%; +0.03%)</title><rect x="29.3" y="117" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="32.33" y="127.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="118.8" y="1381" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.75" y="1391.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%; 0.00%)</title><rect x="85.0" y="677" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.03" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1263.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1279.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="178.2" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1487.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="57.0" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.16%; 0.00%)</title><rect x="42.2" y="245" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="255.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%; 0.00%)</title><rect x="515.5" y="1493" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="518.50" y="1503.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="85" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.06" y="95.5" ></text>
</g>
<g >
<title>memtable::apply (14 samples, 0.45%; +0.03%)</title><rect x="1098.7" y="1477" width="5.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1101.68" y="1487.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="93.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.74" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="39.9" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.94" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.03%; +0.03%)</title><rect x="85.4" y="437" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="88.41" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.13%)</title><rect x="968.3" y="1397" width="1.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="971.32" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="549" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="559.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="773" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="783.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1237" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1247.5" >[unknown]</text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.03%; +0.03%)</title><rect x="846.3" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="849.31" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="111.6" y="1125" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1135.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="534.4" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="537.44" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (4 samples, 0.13%; 0.00%)</title><rect x="57.7" y="309" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.75" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.03%)</title><rect x="249.5" y="1525" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="252.49" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.19%)</title><rect x="1086.2" y="1509" width="2.2" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="1089.17" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (11 samples, 0.35%; -0.19%)</title><rect x="367.0" y="1317" width="4.1" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="369.96" y="1327.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (102 samples, 3.28%; 0.00%)</title><rect x="10.4" y="453" width="38.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="463.5" >std..</text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;schema, fmt::v7::detail::fallback_formatter&lt;schema, char, void&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="130.1" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.12" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.13%)</title><rect x="598.9" y="1445" width="0.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="601.86" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="123.3" y="1141" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.30" y="1151.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1375.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (33 samples, 1.06%; +0.06%)</title><rect x="838.3" y="1541" width="12.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="841.35" y="1551.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (2 samples, 0.06%; 0.00%)</title><rect x="178.2" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.25" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="115.0" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.96" y="1247.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (2 samples, 0.06%; +0.03%)</title><rect x="654.9" y="1557" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="657.95" y="1567.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="53" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="63.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; 0.00%)</title><rect x="365.1" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="368.06" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%; 0.00%)</title><rect x="1135.1" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1138.05" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1311.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (5 samples, 0.16%; 0.00%)</title><rect x="71.8" y="421" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.77" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.66" y="1343.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="94.1" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="97.12" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.10%; 0.00%)</title><rect x="116.9" y="1381" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 6.49%; 0.00%)</title><rect x="10.4" y="1365" width="76.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="1375.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; +0.03%)</title><rect x="63.4" y="245" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="66.43" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,657 samples, 85.32%; 0.00%)</title><rect x="144.1" y="1637" width="1006.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.14" y="1647.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>partition_snapshot::static_row (6 samples, 0.19%; +0.03%)</title><rect x="298.7" y="1445" width="2.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="301.75" y="1455.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; -0.03%)</title><rect x="168.0" y="1541" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="171.02" y="1551.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (2 samples, 0.06%; 0.00%)</title><rect x="191.5" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.51" y="1583.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; 0.00%)</title><rect x="843.7" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.65" y="1407.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1359.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (6 samples, 0.19%; 0.00%)</title><rect x="49.0" y="389" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.03" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="18.0" y="101" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.96" y="111.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1381" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.85" y="1391.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::serialized_size_visitor&gt; (1 samples, 0.03%; +0.03%)</title><rect x="75.6" y="357" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="78.56" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.03%)</title><rect x="437.4" y="1493" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="440.44" y="1503.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (6 samples, 0.19%; +0.13%)</title><rect x="209.7" y="1541" width="2.3" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="212.70" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="421" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1493" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1503.5" >cq..</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.9" y="1093" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.93" y="1103.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.13%)</title><rect x="926.3" y="1477" width="0.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="929.26" y="1487.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="53.2" y="85" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.20" y="95.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="1022.1" y="1397" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1025.13" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (14 samples, 0.45%; 0.00%)</title><rect x="79.3" y="453" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.34" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="114.2" y="1301" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="117.21" y="1311.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="36.5" y="149" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="39.53" y="159.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (4 samples, 0.13%; -0.03%)</title><rect x="1102.1" y="1461" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1105.09" y="1471.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (2 samples, 0.06%; +0.06%)</title><rect x="373.4" y="1413" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="376.40" y="1423.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="130.5" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.50" y="1711.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (121 samples, 3.89%; -0.32%)</title><rect x="564.4" y="1509" width="45.8" height="15.0" fill="rgb(60,60,255)" rx="2" ry="2" />
<text  x="567.38" y="1519.5" >memt..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.02" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="121.4" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.41" y="1407.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (13 samples, 0.42%; -0.06%)</title><rect x="742.1" y="1557" width="4.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="745.10" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="96.0" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1375.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="869" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="879.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.16" y="1407.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%; 0.00%)</title><rect x="1101.0" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.95" y="1439.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="57.0" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="287.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="66.5" y="197" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.46" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::kernel_submit_work_pollfn::poll (1 samples, 0.03%; +0.03%)</title><rect x="147.9" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="150.93" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="19.5" y="101" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.47" y="111.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (62 samples, 1.99%; 0.00%)</title><rect x="15.7" y="245" width="23.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.68" y="255.5" >a..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="131.3" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.26" y="1679.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.33" y="1375.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; 0.00%)</title><rect x="113.8" y="1397" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.83" y="1407.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (26 samples, 0.83%; -0.32%)</title><rect x="798.9" y="1461" width="9.9" height="15.0" fill="rgb(60,60,255)" rx="2" ry="2" />
<text  x="801.94" y="1471.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (6 samples, 0.19%; 0.00%)</title><rect x="74.8" y="421" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.80" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="893.3" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="896.29" y="1455.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.03%; +0.03%)</title><rect x="1044.5" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1047.49" y="1455.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="131.6" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="134.64" y="1695.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="19.1" y="149" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="22.09" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="98.3" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.29" y="1343.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (5 samples, 0.16%; 0.00%)</title><rect x="67.2" y="373" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.22" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (14 samples, 0.45%; 0.00%)</title><rect x="60.4" y="485" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.40" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; -0.03%)</title><rect x="869.4" y="1525" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="872.42" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (38 samples, 1.22%; 0.00%)</title><rect x="70.6" y="517" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.63" y="527.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; -0.03%)</title><rect x="1086.2" y="1525" width="2.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1089.17" y="1535.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.03%; +0.03%)</title><rect x="407.5" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="410.50" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="80.5" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.48" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="181" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="121.8" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.79" y="1247.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_Uninitialized&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1045" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.07" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.5" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.47" y="1263.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1333" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.10" y="1343.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="47.5" y="261" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="50.51" y="271.5" ></text>
</g>
<g >
<title>[unknown] (199 samples, 6.39%; 0.00%)</title><rect x="10.4" y="901" width="75.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.38" y="911.5" >[unknown]</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="637.1" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="640.14" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1439.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1103.2" y="1413" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1106.22" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (92 samples, 2.95%; 0.00%)</title><rect x="13.4" y="389" width="34.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.41" y="399.5" >cq..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="653.4" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="656.43" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (20 samples, 0.64%; +0.03%)</title><rect x="1106.6" y="1445" width="7.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1109.63" y="1455.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="49.4" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.41" y="239.5" ></text>
</g>
<g >
<title>do_cql_test (13 samples, 0.42%; 0.00%)</title><rect x="65.7" y="549" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.70" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.80" y="1231.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (4 samples, 0.13%; -0.03%)</title><rect x="91.5" y="1509" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="94.47" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (6 samples, 0.19%; 0.00%)</title><rect x="57.0" y="325" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.99" y="335.5" ></text>
</g>
<g >
<title>free (3 samples, 0.10%; 0.00%)</title><rect x="432.5" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="435.51" y="1487.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="50.5" y="149" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="53.55" y="159.5" ></text>
</g>
<g >
<title>__atomic_store (1 samples, 0.03%; +0.03%)</title><rect x="143.8" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="146.76" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="49.0" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="52.03" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.55" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="100.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.19" y="1423.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="173.7" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="176.70" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="59.6" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.64" y="527.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="1044.9" y="1445" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1047.87" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; -0.06%)</title><rect x="406.0" y="1509" width="1.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="408.99" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.66" y="1359.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (3 samples, 0.10%; +0.10%)</title><rect x="1109.3" y="1285" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1112.29" y="1295.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="538.2" y="1541" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="541.23" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="59.6" y="229" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="62.64" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1439.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (18 samples, 0.58%; 0.00%)</title><rect x="86.9" y="1669" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.92" y="1679.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.08" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%; +0.03%)</title><rect x="868.3" y="1525" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="871.29" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (13 samples, 0.42%; 0.00%)</title><rect x="124.4" y="1429" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.44" y="1439.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (3 samples, 0.10%; +0.03%)</title><rect x="1038.0" y="1445" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1041.05" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; 0.00%)</title><rect x="111.6" y="1285" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.55" y="1295.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (5 samples, 0.16%; 0.00%)</title><rect x="42.2" y="261" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.21" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.89" y="1359.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (2 samples, 0.06%; 0.00%)</title><rect x="14.2" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.17" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="14.9" y="293" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="17.93" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="970.6" y="1429" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="973.60" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (11 samples, 0.35%; 0.00%)</title><rect x="51.3" y="325" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.30" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="901" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.17" y="911.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="129.4" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.36" y="1327.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; +0.03%)</title><rect x="515.1" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="518.12" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; +0.03%)</title><rect x="86.2" y="885" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="89.17" y="895.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (1 samples, 0.03%; +0.03%)</title><rect x="1040.7" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1043.70" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (8 samples, 0.26%; +0.06%)</title><rect x="754.2" y="1557" width="3.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="757.23" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (24 samples, 0.77%; +0.03%)</title><rect x="102.1" y="1381" width="9.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="105.08" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="213.9" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="216.87" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (11 samples, 0.35%; 0.00%)</title><rect x="839.9" y="1461" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.87" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="146.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.80" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.54" y="287.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (3 samples, 0.10%; 0.00%)</title><rect x="24.8" y="181" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.78" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; 0.00%)</title><rect x="582.9" y="1477" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="585.95" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::add_restriction (1 samples, 0.03%; +0.03%)</title><rect x="85.8" y="677" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="88.79" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="813.7" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="816.72" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.03%)</title><rect x="541.6" y="1525" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="544.64" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.22%; 0.00%)</title><rect x="97.5" y="1413" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.53" y="1423.5" ></text>
</g>
<g >
<title>posix_memalign (13 samples, 0.42%; 0.00%)</title><rect x="366.2" y="1333" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="369.20" y="1343.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%; 0.00%)</title><rect x="85.8" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="703.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="601.1" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="604.14" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (4 samples, 0.13%; +0.03%)</title><rect x="33.1" y="181" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="36.11" y="191.5" ></text>
</g>
<g >
<title>do_cql_test (89 samples, 2.86%; 0.00%)</title><rect x="96.0" y="1637" width="33.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.02" y="1647.5" >do..</text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.10%)</title><rect x="704.6" y="1589" width="2.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="707.59" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (5 samples, 0.16%; +0.16%)</title><rect x="30.1" y="181" width="1.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="33.08" y="191.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::make_file_impl (1 samples, 0.03%; 0.00%)</title><rect x="691.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.32" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="56.2" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.23" y="303.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="78.2" y="469" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="81.21" y="479.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.03%; 0.00%)</title><rect x="129.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.74" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="76.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.69" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; 0.00%)</title><rect x="139.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.22" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (38 samples, 1.22%; -0.19%)</title><rect x="587.1" y="1477" width="14.4" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="590.12" y="1487.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_failed (1 samples, 0.03%; +0.03%)</title><rect x="80.1" y="373" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="83.10" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.11" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="937.6" y="1477" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="940.63" y="1487.5" ></text>
</g>
</g>
</svg>
