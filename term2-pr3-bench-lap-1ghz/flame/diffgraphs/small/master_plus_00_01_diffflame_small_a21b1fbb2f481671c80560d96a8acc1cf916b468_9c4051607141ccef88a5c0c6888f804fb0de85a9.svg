<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="2021" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="2031.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (3 samples, 0.09%; +0.06%)</title><rect x="491.3" y="1829" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="494.34" y="1839.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="257.2" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="260.20" y="1871.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.03%; 0.00%)</title><rect x="655.3" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.27" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.03%)</title><rect x="640.0" y="1797" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="642.96" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (6 samples, 0.19%; -0.09%)</title><rect x="705.7" y="1909" width="2.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="708.68" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%; +0.03%)</title><rect x="543.2" y="1845" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="546.24" y="1855.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (19 samples, 0.60%; +0.03%)</title><rect x="479.0" y="1829" width="7.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="482.01" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="1151.2" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1154.16" y="1903.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.03%; +0.03%)</title><rect x="14.1" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="17.11" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (7 samples, 0.22%; 0.00%)</title><rect x="97.0" y="1717" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.01" y="1727.5" ></text>
</g>
<g >
<title>seastar::fair_queue::dispatch_requests (1 samples, 0.03%; +0.03%)</title><rect x="1151.9" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1154.91" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (55 samples, 1.74%; 0.00%)</title><rect x="1058.2" y="1765" width="20.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.18" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (3 samples, 0.09%; 0.00%)</title><rect x="1151.5" y="1941" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1154.54" y="1951.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.06%; -0.03%)</title><rect x="726.6" y="1893" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="729.59" y="1903.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="1119.4" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1122.42" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="1024.2" y="1637" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1027.20" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; +0.03%)</title><rect x="142.2" y="2005" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="145.19" y="2015.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.19%; +0.03%)</title><rect x="732.6" y="1909" width="2.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="735.56" y="1919.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (2 samples, 0.06%; 0.00%)</title><rect x="113.8" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.81" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (35 samples, 1.11%; 0.00%)</title><rect x="110.4" y="1781" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1679.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="180.7" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="115.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_type (1 samples, 0.03%; +0.03%)</title><rect x="39.9" y="1701" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="42.87" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; +0.03%)</title><rect x="19.0" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="21.96" y="1823.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="106.0" y="1701" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="108.97" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="688.5" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="691.50" y="1903.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.03%)</title><rect x="828.2" y="1749" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="831.16" y="1759.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; 0.00%)</title><rect x="308.7" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.73" y="1759.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="12.6" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="15.61" y="1839.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; -0.06%)</title><rect x="803.1" y="1829" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="806.14" y="1839.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%; +0.06%)</title><rect x="347.9" y="1701" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="350.94" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.05" y="1695.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="90.7" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.66" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="64.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="837" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="847.5" ></text>
</g>
<g >
<title>database::find_column_family (7 samples, 0.22%; +0.09%)</title><rect x="1046.2" y="1765" width="2.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1049.23" y="1775.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="66.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.01" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1029" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1039.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.38%; +0.03%)</title><rect x="442.8" y="1829" width="4.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="445.79" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="119.0" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="122.04" y="1455.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_nextChar (1 samples, 0.03%; +0.03%)</title><rect x="36.5" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="39.51" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.62" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1029.4" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1032.43" y="1663.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.03%; -0.03%)</title><rect x="530.5" y="1829" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="533.54" y="1839.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (9 samples, 0.28%; -0.06%)</title><rect x="671.7" y="1925" width="3.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="674.70" y="1935.5" ></text>
</g>
<g >
<title>__libc_start_main (2,688 samples, 85.06%; 0.00%)</title><rect x="148.9" y="2053" width="1003.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; +0.03%)</title><rect x="402.8" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="405.84" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="535.8" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="538.77" y="1839.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.19%; +0.03%)</title><rect x="303.5" y="1781" width="2.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="306.51" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.13%)</title><rect x="666.1" y="1909" width="1.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="669.09" y="1919.5" ></text>
</g>
<g >
<title>database::create_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="68.3" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1599.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.03%; 0.00%)</title><rect x="419.3" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="422.27" y="1855.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (8 samples, 0.25%; 0.00%)</title><rect x="1139.6" y="1893" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.59" y="1903.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.09%; +0.06%)</title><rect x="670.6" y="1909" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="673.58" y="1919.5" ></text>
</g>
<g >
<title>dht::split_range_to_single_shard (1 samples, 0.03%; +0.03%)</title><rect x="135.1" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="138.09" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (36 samples, 1.14%; 0.00%)</title><rect x="110.1" y="1797" width="13.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (32 samples, 1.01%; 0.00%)</title><rect x="13.7" y="1877" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.73" y="1887.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="883.8" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="886.80" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; -0.13%)</title><rect x="172.4" y="1893" width="1.2" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="175.44" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="73.1" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; +0.03%)</title><rect x="53.3" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="56.32" y="1695.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="1114.9" y="1749" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.94" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.41%; +0.19%)</title><rect x="241.9" y="1845" width="4.8" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="244.89" y="1855.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="853.6" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="856.55" y="1903.5" ></text>
</g>
<g >
<title>seastar::file::close (1 samples, 0.03%; 0.00%)</title><rect x="728.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="731.08" y="1919.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.06%)</title><rect x="804.6" y="1829" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="807.63" y="1839.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.03%; 0.00%)</title><rect x="1111.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.58" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.38%; +0.32%)</title><rect x="413.3" y="1829" width="4.5" height="15.0" fill="rgb(255,60,60)" rx="2" ry="2" />
<text  x="416.29" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="103.4" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1583.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (2 samples, 0.06%; 0.00%)</title><rect x="179.9" y="1909" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.91" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.04" y="1471.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (9 samples, 0.28%; +0.03%)</title><rect x="688.9" y="1893" width="3.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="691.87" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.16%; 0.00%)</title><rect x="64.1" y="1765" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="76.8" y="1445" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="79.84" y="1455.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl_data::_M_swap_data (1 samples, 0.03%; 0.00%)</title><rect x="125.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.39" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="873.3" y="1893" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="876.34" y="1903.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; 0.00%)</title><rect x="485.7" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="488.73" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.40" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1663.5" ></text>
</g>
<g >
<title>database::create_in_memory_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1775.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; 0.00%)</title><rect x="980.1" y="1765" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="983.14" y="1775.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.03%; +0.03%)</title><rect x="1109.0" y="1797" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1111.97" y="1807.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (2 samples, 0.06%; +0.06%)</title><rect x="257.9" y="1861" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="260.95" y="1871.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%; 0.00%)</title><rect x="94.8" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.77" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="72.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.99" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="111.2" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.20" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (53 samples, 1.68%; +0.03%)</title><rect x="36.1" y="1733" width="19.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="39.14" y="1743.5" ></text>
</g>
<g >
<title>ser::qr_cell_view::value (1 samples, 0.03%; +0.03%)</title><rect x="655.3" y="1861" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="658.27" y="1871.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%; -0.03%)</title><rect x="349.4" y="1701" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="352.44" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.40" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (2 samples, 0.06%; +0.06%)</title><rect x="213.9" y="1893" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="216.89" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.03%; +0.03%)</title><rect x="509.3" y="1861" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="512.26" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="216.5" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="219.50" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="68.6" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="73.1" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1583.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="397.2" y="1813" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="400.23" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (1 samples, 0.03%; +0.03%)</title><rect x="24.2" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="27.19" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="64.9" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="67.89" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="33.2" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.15" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; 0.00%)</title><rect x="58.5" y="1765" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1775.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.03%; +0.03%)</title><rect x="55.9" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="58.93" y="1759.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1967.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%; 0.00%)</title><rect x="864.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="867.38" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="73.5" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.48" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="75.3" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.35" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.13%)</title><rect x="318.4" y="1717" width="0.8" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="321.44" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.06%)</title><rect x="85.1" y="1669" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="88.06" y="1679.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.09%; +0.03%)</title><rect x="1013.0" y="1685" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1016.00" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (1 samples, 0.03%; 0.00%)</title><rect x="26.1" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.06" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="85.1" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.06" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1727.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="523.1" y="1765" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="526.08" y="1775.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (12 samples, 0.38%; +0.03%)</title><rect x="69.7" y="1733" width="4.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="72.75" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="64.9" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1599.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.03%; 0.00%)</title><rect x="142.6" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.56" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1439.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.03%; +0.03%)</title><rect x="819.9" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="822.94" y="1775.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; +0.03%)</title><rect x="979.8" y="1765" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="982.77" y="1775.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,688 samples, 85.06%; 0.00%)</title><rect x="148.9" y="1989" width="1003.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="1999.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.03%)</title><rect x="560.8" y="1797" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="563.79" y="1807.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.19%; -0.19%)</title><rect x="583.9" y="1797" width="2.3" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="586.94" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%; 0.00%)</title><rect x="52.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.94" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="707.5" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.54" y="1887.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (327 samples, 10.35%; -0.06%)</title><rect x="12.2" y="1925" width="122.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="15.24" y="1935.5" >single_node_cql..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="715.4" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="718.39" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.06%; +0.06%)</title><rect x="1030.2" y="1685" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1033.18" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1663.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (41 samples, 1.30%; 0.00%)</title><rect x="365.1" y="1685" width="15.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="368.12" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::query_options&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="704.6" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="707.56" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (53 samples, 1.68%; -0.06%)</title><rect x="888.3" y="1829" width="19.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="891.28" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="68.3" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1631.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.13%; +0.13%)</title><rect x="951.8" y="1813" width="1.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="954.76" y="1823.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.09%; 0.00%)</title><rect x="180.7" y="1925" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1935.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.09" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.04" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="119.8" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="122.78" y="1679.5" ></text>
</g>
<g >
<title>schema_registry::get (10 samples, 0.32%; -0.06%)</title><rect x="970.8" y="1781" width="3.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="973.80" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%; +0.03%)</title><rect x="906.6" y="1749" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="909.58" y="1759.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.39%; 0.00%)</title><rect x="1172.4" y="2053" width="16.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.45" y="2063.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; -0.06%)</title><rect x="390.9" y="1749" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="393.89" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; +0.03%)</title><rect x="86.2" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="89.18" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.16%; 0.00%)</title><rect x="74.2" y="1733" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.23" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.76" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (7 samples, 0.22%; +0.13%)</title><rect x="299.4" y="1781" width="2.6" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="302.40" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; -0.03%)</title><rect x="121.7" y="1541" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="124.65" y="1551.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="806.1" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="809.13" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="68.3" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1711.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (9 samples, 0.28%; 0.00%)</title><rect x="521.2" y="1781" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="524.21" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.03%; 0.00%)</title><rect x="102.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.61" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1711.5" ></text>
</g>
<g >
<title>seastar::posix_thread::start_routine (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.03%; +0.03%)</title><rect x="114.6" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="117.56" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="1150.4" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1153.42" y="1935.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; 0.00%)</title><rect x="1103.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.37" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="64.9" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="117.9" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="120.92" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.02" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (8 samples, 0.25%; +0.03%)</title><rect x="1085.4" y="1829" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1088.44" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;seastar::posix_file_impl::list_directory (1 samples, 0.03%; 0.00%)</title><rect x="855.8" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.79" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.5" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (17 samples, 0.54%; 0.00%)</title><rect x="1110.8" y="1829" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.84" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.28%; +0.25%)</title><rect x="1054.8" y="1733" width="3.4" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="1057.82" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.16" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; +0.03%)</title><rect x="209.4" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="212.41" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="29.8" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="32.79" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="73.1" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1631.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.03%; 0.00%)</title><rect x="1152.3" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.28" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.13%)</title><rect x="595.5" y="1781" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="598.52" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.71" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="591.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (25 samples, 0.79%; -0.22%)</title><rect x="744.9" y="1909" width="9.3" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="747.89" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; +0.03%)</title><rect x="100.0" y="1653" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="102.99" y="1663.5" ></text>
</g>
<g >
<title>database::do_apply (23 samples, 0.73%; 0.00%)</title><rect x="1101.9" y="1861" width="8.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.87" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_tokenSource (1 samples, 0.03%; +0.03%)</title><rect x="57.1" y="1765" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="60.05" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1125" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1135.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.03%; 0.00%)</title><rect x="154.5" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.51" y="1951.5" ></text>
</g>
<g >
<title>db::cql_type_parser::parse (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.05" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="118.7" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.66" y="1583.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%; 0.00%)</title><rect x="691.9" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.86" y="1871.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="121.7" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1711.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="335.6" y="1717" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="338.62" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::execute_direct (1 samples, 0.03%; +0.03%)</title><rect x="152.6" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="155.65" y="1951.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="195.2" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="198.22" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="113.4" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.44" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.03%)</title><rect x="1023.1" y="1653" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1026.08" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (333 samples, 10.54%; 0.00%)</title><rect x="10.7" y="1989" width="124.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1999.5" >seastar::noncop..</text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="78.0" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.96" y="1759.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (3 samples, 0.09%; +0.06%)</title><rect x="132.9" y="1813" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="135.85" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="94.8" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="97.77" y="1631.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (127 samples, 4.02%; -0.13%)</title><rect x="986.5" y="1765" width="47.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="989.49" y="1775.5" >serv..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (9 samples, 0.28%; -0.09%)</title><rect x="763.2" y="1893" width="3.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="766.18" y="1903.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; 0.00%)</title><rect x="753.8" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="756.85" y="1887.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="117.2" y="1541" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="120.17" y="1551.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.03%; 0.00%)</title><rect x="1116.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.44" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (7 samples, 0.22%; +0.03%)</title><rect x="790.8" y="1813" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="793.82" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="821" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="831.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.02" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (8 samples, 0.25%; 0.00%)</title><rect x="117.5" y="1717" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.54" y="1727.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="2015.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="114.9" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="117.93" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (2 samples, 0.06%; +0.03%)</title><rect x="151.9" y="1941" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="154.90" y="1951.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; 0.00%)</title><rect x="707.9" y="1909" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.92" y="1919.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.71" y="1679.5" ></text>
</g>
<g >
<title>row::row (5 samples, 0.16%; +0.16%)</title><rect x="392.8" y="1765" width="1.8" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="395.75" y="1775.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.18" y="1935.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="126.1" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="129.13" y="1791.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1535.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="731.8" y="1909" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="734.82" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1727.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.3" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.27" y="1711.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base&lt;cql3::expr::expression::impl*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="107.5" y="1637" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.46" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (14 samples, 0.44%; +0.16%)</title><rect x="486.1" y="1829" width="5.2" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="489.11" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="118.7" y="1621" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.66" y="1631.5" ></text>
</g>
<g >
<title>row::append_cell (3 samples, 0.09%; +0.03%)</title><rect x="1105.6" y="1765" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1108.61" y="1775.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (2 samples, 0.06%; +0.03%)</title><rect x="20.8" y="1733" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.83" y="1743.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.03%; +0.03%)</title><rect x="1114.2" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1117.20" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (2 samples, 0.06%; +0.03%)</title><rect x="73.1" y="1557" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="76.11" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1679.5" ></text>
</g>
<g >
<title>service::client_state::has_access (73 samples, 2.31%; 0.00%)</title><rect x="806.5" y="1829" width="27.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="809.50" y="1839.5" >s..</text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (10 samples, 0.32%; -0.03%)</title><rect x="1104.5" y="1781" width="3.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1107.49" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1375.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.82" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.03%; 0.00%)</title><rect x="154.9" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.89" y="1951.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; +0.03%)</title><rect x="93.3" y="1509" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="96.27" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_WHERE (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.44" y="1727.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.03%; +0.03%)</title><rect x="881.2" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="884.18" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (2 samples, 0.06%; +0.06%)</title><rect x="1138.8" y="1893" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1141.84" y="1903.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; +0.03%)</title><rect x="66.4" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.39" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="53.7" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="56.69" y="1711.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="398.0" y="1813" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.98" y="1823.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.09%; +0.03%)</title><rect x="463.3" y="1797" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="466.33" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="68.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.03%)</title><rect x="319.2" y="1733" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="322.19" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.72" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (2 samples, 0.06%; +0.06%)</title><rect x="57.8" y="1765" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="60.80" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (1 samples, 0.03%; 0.00%)</title><rect x="1152.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.28" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.06%; +0.03%)</title><rect x="24.6" y="1829" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="27.56" y="1839.5" ></text>
</g>
<g >
<title>create_partitions (330 samples, 10.44%; 0.00%)</title><rect x="11.1" y="1941" width="123.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.12" y="1951.5" >create_partitions</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1151.2" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1154.16" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::~untyped_constant (1 samples, 0.03%; +0.03%)</title><rect x="121.3" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="124.28" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_pool::work (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1439.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="13.0" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="15.99" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1535.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="180.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.28" y="1791.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_tokenStartLine (1 samples, 0.03%; +0.03%)</title><rect x="37.3" y="1717" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="40.26" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (102 samples, 3.23%; -0.25%)</title><rect x="994.7" y="1733" width="38.1" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="997.70" y="1743.5" >ser..</text>
</g>
<g >
<title>perf_simple_que (3,159 samples, 99.97%; 0.00%)</title><rect x="10.0" y="2069" width="1179.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >perf_simple_que</text>
</g>
<g >
<title>posix_memalign (2 samples, 0.06%; -0.03%)</title><rect x="382.3" y="1669" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="385.30" y="1679.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="726.6" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="729.59" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="73.1" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (2 samples, 0.06%; +0.06%)</title><rect x="54.8" y="1717" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="57.81" y="1727.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.03%; 0.00%)</title><rect x="148.2" y="2021" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.16" y="2031.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="620.2" y="1781" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="623.16" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="527.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.06%; -0.03%)</title><rect x="641.1" y="1829" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="644.08" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (3 samples, 0.09%; +0.06%)</title><rect x="337.5" y="1717" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="340.49" y="1727.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="30.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.54" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="111.6" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.57" y="1647.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="805.4" y="1813" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="808.38" y="1823.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="923.0" y="1829" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="926.01" y="1839.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="725.1" y="1909" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="728.09" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.40" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;1ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1391.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; +0.03%)</title><rect x="862.9" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="865.89" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="102.2" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.23" y="1663.5" ></text>
</g>
<g >
<title>logalloc::region_group::update_maximal_rg (1 samples, 0.03%; +0.03%)</title><rect x="142.9" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="145.94" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="127.6" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="130.63" y="1823.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.03%; 0.00%)</title><rect x="674.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="677.68" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1647.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="1023.1" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1026.08" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.03%)</title><rect x="447.3" y="1813" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="450.27" y="1823.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; +0.03%)</title><rect x="144.4" y="1957" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="147.43" y="1967.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.09%; +0.09%)</title><rect x="239.7" y="1877" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="242.65" y="1887.5" ></text>
</g>
<g >
<title>database::has_keyspace (5 samples, 0.16%; +0.03%)</title><rect x="839.7" y="1813" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="842.73" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="989.1" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="992.10" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1663.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="246.7" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="249.75" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; 0.00%)</title><rect x="102.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.61" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.41" y="1583.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="194.5" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="197.47" y="1903.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="384.5" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="387.54" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="35.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.39" y="1679.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="135.1" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.09" y="1951.5" ></text>
</g>
<g >
<title>locator::token_metadata::tokens_iterator::operator++ (1 samples, 0.03%; +0.03%)</title><rect x="181.8" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="184.77" y="1903.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="403.2" y="1829" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="406.21" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%; +0.03%)</title><rect x="97.8" y="1589" width="1.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="100.75" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="94.4" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="97.39" y="1519.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; -0.13%)</title><rect x="1094.8" y="1845" width="0.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="1097.78" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.06%; -0.03%)</title><rect x="382.3" y="1653" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="385.30" y="1663.5" ></text>
</g>
<g >
<title>schema_registry::learn (3 samples, 0.09%; 0.00%)</title><rect x="180.7" y="1893" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1903.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="849.4" y="1877" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.44" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="89.9" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.91" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="58.9" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="882.3" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="885.30" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (17 samples, 0.54%; 0.00%)</title><rect x="1110.8" y="1861" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.84" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (187 samples, 5.92%; +0.16%)</title><rect x="777.0" y="1877" width="69.8" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="780.00" y="1887.5" >cql3::q..</text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; +0.03%)</title><rect x="1103.4" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1106.37" y="1759.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.03%; 0.00%)</title><rect x="180.7" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1423.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="118.3" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.29" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="994.3" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="997.33" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (35 samples, 1.11%; +0.13%)</title><rect x="493.2" y="1813" width="13.1" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="496.20" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="142.2" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.19" y="2031.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="692.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="695.23" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1631.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1107.8" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1110.85" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="111.2" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.20" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (96 samples, 3.04%; -0.03%)</title><rect x="74.2" y="1765" width="35.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="77.23" y="1775.5" >cql..</text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="25.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.31" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.03%)</title><rect x="648.9" y="1877" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="651.92" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (9 samples, 0.28%; -0.03%)</title><rect x="43.2" y="1669" width="3.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="46.23" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.03%; +0.03%)</title><rect x="727.0" y="1845" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="729.96" y="1855.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_erase (1 samples, 0.03%; +0.03%)</title><rect x="131.7" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="134.73" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1247.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="11.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.49" y="1919.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;cql3::expr::expression*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="92.2" y="1637" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="95.15" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="1113.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.45" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="90.7" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.66" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (4 samples, 0.13%; 0.00%)</title><rect x="734.8" y="1909" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="737.80" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="663.9" y="1893" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="666.85" y="1903.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="1033.9" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1036.91" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (3 samples, 0.09%; +0.09%)</title><rect x="615.3" y="1797" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="618.31" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (324 samples, 10.25%; -0.03%)</title><rect x="958.9" y="1797" width="120.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="961.85" y="1807.5" >service::storag..</text>
</g>
<g >
<title>service::get_local_priority_manager (2 samples, 0.06%; +0.06%)</title><rect x="213.1" y="1893" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="216.14" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="104.8" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="107.85" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1711.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_stream (2 samples, 0.06%; +0.06%)</title><rect x="418.1" y="1845" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="421.15" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="44.0" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="46.98" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_line (1 samples, 0.03%; +0.03%)</title><rect x="41.7" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="44.74" y="1695.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; 0.00%)</title><rect x="57.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.42" y="1775.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%; 0.00%)</title><rect x="476.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="479.40" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.04" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1679.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="968.6" y="1781" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="971.56" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (6 samples, 0.19%; 0.00%)</title><rect x="27.6" y="1861" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.55" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; -0.03%)</title><rect x="68.6" y="1589" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="71.63" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1407.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (4 samples, 0.13%; 0.00%)</title><rect x="859.5" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="862.53" y="1759.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; +0.03%)</title><rect x="727.7" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="730.71" y="1791.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.25%; -0.03%)</title><rect x="826.3" y="1765" width="3.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="829.29" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1 samples, 0.03%; 0.00%)</title><rect x="151.5" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.53" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="73.9" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="76.85" y="1631.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (42 samples, 1.33%; -0.03%)</title><rect x="813.6" y="1781" width="15.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="816.59" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (8 samples, 0.25%; 0.00%)</title><rect x="117.5" y="1733" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.54" y="1743.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.09%; +0.06%)</title><rect x="785.6" y="1813" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="788.59" y="1823.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (49 samples, 1.55%; -0.06%)</title><rect x="889.8" y="1797" width="18.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="892.77" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="124.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.64" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="43.6" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="46.61" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.03%)</title><rect x="341.6" y="1717" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="344.59" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (4 samples, 0.13%; -0.06%)</title><rect x="1115.3" y="1733" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1118.32" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="124.6" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="127.64" y="1759.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (17 samples, 0.54%; +0.16%)</title><rect x="582.1" y="1813" width="6.3" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="585.08" y="1823.5" ></text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.03%; 0.00%)</title><rect x="1151.2" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1154.16" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1013" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1023.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (5 samples, 0.16%; 0.00%)</title><rect x="107.1" y="1749" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.09" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (2 samples, 0.06%; 0.00%)</title><rect x="864.8" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="867.75" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.03%)</title><rect x="561.9" y="1781" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="564.91" y="1791.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="62.3" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="65.28" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.06%; +0.03%)</title><rect x="45.5" y="1605" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="48.47" y="1615.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="16.0" y="1829" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.97" y="1839.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="110.1" y="1653" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="113.08" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.09%; 0.00%)</title><rect x="34.3" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.27" y="1679.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.03%; +0.03%)</title><rect x="595.1" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="598.15" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="2021" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="2031.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.03%)</title><rect x="212.4" y="1893" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="215.39" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (30 samples, 0.95%; 0.00%)</title><rect x="14.1" y="1861" width="11.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.11" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; -0.06%)</title><rect x="638.5" y="1781" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="641.46" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="35.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.39" y="1663.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="65.3" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.27" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (1 samples, 0.03%; +0.03%)</title><rect x="156.8" y="1941" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="159.75" y="1951.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.18" y="1951.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (17 samples, 0.54%; 0.00%)</title><rect x="1110.8" y="1845" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.84" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; -0.03%)</title><rect x="560.0" y="1797" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="563.04" y="1807.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (62 samples, 1.96%; +0.13%)</title><rect x="810.6" y="1813" width="23.2" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="813.61" y="1823.5" >s..</text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="84.3" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="87.31" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; +0.03%)</title><rect x="859.2" y="1685" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="862.15" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_move_assign (1 samples, 0.03%; 0.00%)</title><rect x="125.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.39" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%; 0.00%)</title><rect x="83.6" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="1615.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (3 samples, 0.09%; +0.03%)</title><rect x="1130.6" y="1893" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1133.63" y="1903.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="92.2" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.15" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (3 samples, 0.09%; 0.00%)</title><rect x="20.5" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.46" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.09%; 0.00%)</title><rect x="111.2" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.20" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1599.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="95.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.51" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="524.2" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="527.20" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="97.8" y="1621" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.75" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1807.5" ></text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (1 samples, 0.03%; 0.00%)</title><rect x="180.7" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="127.3" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.25" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%; +0.03%)</title><rect x="70.1" y="1717" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="73.12" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="103.7" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="106.73" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="1029.1" y="1653" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1032.06" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.5" y="1429" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1439.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.03%; +0.03%)</title><rect x="623.2" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="626.15" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="901" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="911.5" ></text>
</g>
<g >
<title>schema::get_column_mapping (1 samples, 0.03%; 0.00%)</title><rect x="1108.2" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.22" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1663.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.03%; 0.00%)</title><rect x="1152.7" y="2053" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1155.66" y="2063.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="34.6" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.65" y="1631.5" ></text>
</g>
<g >
<title>sstables::delete_atomically (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="1967.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.09%; +0.06%)</title><rect x="541.7" y="1845" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="544.75" y="1855.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.09%; 0.00%)</title><rect x="785.6" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="788.59" y="1839.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="157.5" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.50" y="1951.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="63.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1487.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (5 samples, 0.16%; +0.03%)</title><rect x="79.1" y="1749" width="1.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="82.08" y="1759.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="72.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.99" y="1679.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_delete_visitor&gt; (1 samples, 0.03%; +0.03%)</title><rect x="19.7" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="22.71" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.03%; 0.00%)</title><rect x="52.6" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.57" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1423.5" ></text>
</g>
<g >
<title>make_combined_reader (1 samples, 0.03%; +0.03%)</title><rect x="542.9" y="1845" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="545.87" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.06%)</title><rect x="245.6" y="1829" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="248.63" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="536.1" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="539.15" y="1855.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="180.3" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="183.28" y="1775.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; 0.00%)</title><rect x="1078.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.35" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="78.0" y="1701" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="80.96" y="1711.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (1 samples, 0.03%; -0.03%)</title><rect x="1151.9" y="1925" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1154.91" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; +0.03%)</title><rect x="75.0" y="1701" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="77.97" y="1711.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1935.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (5 samples, 0.16%; -0.03%)</title><rect x="1142.6" y="1909" width="1.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1145.58" y="1919.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="884.5" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="887.54" y="1855.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="111.6" y="1605" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.57" y="1615.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%; 0.00%)</title><rect x="864.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="867.38" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (4 samples, 0.13%; +0.09%)</title><rect x="932.3" y="1813" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="935.34" y="1823.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="30.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.54" y="1791.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1919.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="60.4" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="63.41" y="1599.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,688 samples, 85.06%; 0.00%)</title><rect x="148.9" y="2021" width="1003.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="2031.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (20 samples, 0.63%; +0.03%)</title><rect x="17.1" y="1845" width="7.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="20.09" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (208 samples, 6.58%; +0.19%)</title><rect x="312.1" y="1765" width="77.7" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="315.09" y="1775.5" >partitio..</text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%; +0.03%)</title><rect x="858.8" y="1733" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="861.78" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.03%; 0.00%)</title><rect x="1189.3" y="2037" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.25" y="2047.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="133.6" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="136.60" y="1807.5" ></text>
</g>
<g >
<title>service::client_state::has_access (3 samples, 0.09%; 0.00%)</title><rect x="132.9" y="1861" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.85" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (18 samples, 0.57%; -0.09%)</title><rect x="899.9" y="1749" width="6.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="902.85" y="1759.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="66.0" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.01" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1093" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1103.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="90.7" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.66" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (4 samples, 0.13%; -0.03%)</title><rect x="775.5" y="1877" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="778.51" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%; 0.00%)</title><rect x="439.8" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="442.80" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.03%; 0.00%)</title><rect x="101.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.49" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_service_level_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="131.0" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="133.99" y="1839.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.06%; +0.06%)</title><rect x="141.4" y="2037" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="144.44" y="2047.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="993.6" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="996.58" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::modification_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="130.2" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.24" y="1823.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (26 samples, 0.82%; 0.00%)</title><rect x="164.6" y="1925" width="9.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="167.59" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; 0.00%)</title><rect x="864.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="867.38" y="1791.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_sliceERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="17.5" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="20.47" y="1839.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.03%; -0.09%)</title><rect x="844.6" y="1845" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="847.59" y="1855.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (1 samples, 0.03%; +0.03%)</title><rect x="16.7" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="19.72" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="754.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="757.59" y="1935.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.09%; 0.00%)</title><rect x="34.3" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.27" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="126.5" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="129.51" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.06%; 0.00%)</title><rect x="852.8" y="1877" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.80" y="1887.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="1112.0" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.96" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::ensure_entry_if_complete (1 samples, 0.03%; 0.00%)</title><rect x="147.0" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.04" y="1983.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1903.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (10 samples, 0.32%; 0.00%)</title><rect x="1111.2" y="1717" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.21" y="1727.5" ></text>
</g>
<g >
<title>row::~row (7 samples, 0.22%; +0.16%)</title><rect x="309.5" y="1749" width="2.6" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="312.48" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1375.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_tokenStartCharPositionInLine (1 samples, 0.03%; +0.03%)</title><rect x="46.6" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="49.59" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1599.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (24 samples, 0.76%; 0.00%)</title><rect x="1101.5" y="1909" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.50" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="96.3" y="1685" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="99.26" y="1695.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::create_type_statement&gt;, true&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="129.5" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="132.49" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (4 samples, 0.13%; 0.00%)</title><rect x="101.9" y="1701" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.86" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="1150.0" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.04" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.22%; +0.16%)</title><rect x="700.4" y="1909" width="2.7" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="703.45" y="1919.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1855.5" ></text>
</g>
<g >
<title>row_cache::make_reader (29 samples, 0.92%; 0.00%)</title><rect x="629.5" y="1829" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="632.50" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; 0.00%)</title><rect x="166.1" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="169.09" y="1919.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="538.8" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="541.76" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%; 0.00%)</title><rect x="118.7" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.66" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.9" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.91" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="511.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (366 samples, 11.58%; +0.35%)</title><rect x="266.2" y="1829" width="136.6" height="15.0" fill="rgb(255,45,45)" rx="2" ry="2" />
<text  x="269.16" y="1839.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (35 samples, 1.11%; +0.09%)</title><rect x="288.9" y="1797" width="13.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="291.94" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="179.2" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.16" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="98.5" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (2 samples, 0.06%; +0.03%)</title><rect x="1188.9" y="2053" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1191.88" y="2063.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; 0.00%)</title><rect x="505.9" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="508.90" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.30" y="1743.5" ></text>
</g>
<g >
<title>sstables::delete_atomically (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="2047.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.16%; +0.06%)</title><rect x="489.5" y="1813" width="1.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="492.47" y="1823.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (3 samples, 0.09%; -0.03%)</title><rect x="179.5" y="1925" width="1.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="182.53" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::create_service_level_statement*, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="129.1" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="132.12" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.03%)</title><rect x="208.7" y="1861" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="211.66" y="1871.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%; +0.06%)</title><rect x="637.0" y="1797" width="1.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="639.97" y="1807.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="411.8" y="1845" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="414.80" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="69.0" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="72.00" y="1567.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="123.9" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="126.89" y="1791.5" ></text>
</g>
<g >
<title>database::find_keyspace (8 samples, 0.25%; +0.13%)</title><rect x="1048.8" y="1765" width="3.0" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="1051.85" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="70.5" y="1685" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="899.1" y="1765" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="902.11" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="35.4" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="38.39" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1567.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (18 samples, 0.57%; -0.13%)</title><rect x="915.9" y="1797" width="6.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="918.91" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="118.3" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.29" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (4 samples, 0.13%; 0.00%)</title><rect x="85.8" y="1733" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.80" y="1743.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (2 samples, 0.06%; 0.00%)</title><rect x="179.9" y="1893" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.91" y="1903.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="30.5" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="33.54" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.09%)</title><rect x="692.2" y="1877" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="695.23" y="1887.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; 0.00%)</title><rect x="944.7" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="947.66" y="1839.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; 0.00%)</title><rect x="145.9" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.92" y="1999.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.03%; 0.00%)</title><rect x="857.3" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.28" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.16%; +0.06%)</title><rect x="74.2" y="1717" width="1.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="77.23" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="760.9" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="763.94" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; +0.03%)</title><rect x="63.0" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="66.03" y="1791.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; -0.25%)</title><rect x="1089.2" y="1829" width="0.7" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="1092.18" y="1839.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.16%; +0.03%)</title><rect x="380.4" y="1685" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="383.43" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (28 samples, 0.89%; +0.03%)</title><rect x="201.2" y="1893" width="10.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="204.19" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (17 samples, 0.54%; 0.00%)</title><rect x="1110.8" y="1797" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.84" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (2 samples, 0.06%; +0.06%)</title><rect x="153.8" y="1941" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="156.77" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (21 samples, 0.66%; -0.09%)</title><rect x="899.5" y="1765" width="7.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="902.48" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="124.3" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.27" y="1759.5" ></text>
</g>
<g >
<title>sstables::sstable::filename (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="1919.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; +0.06%)</title><rect x="72.4" y="1717" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="75.36" y="1727.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%; 0.00%)</title><rect x="1032.0" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.04" y="1727.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="181.8" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.77" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="69.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.37" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.03%; +0.03%)</title><rect x="62.7" y="1781" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="65.65" y="1791.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; +0.03%)</title><rect x="1116.4" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1119.44" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="328.9" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="331.90" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1519.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (35 samples, 1.11%; 0.00%)</title><rect x="741.5" y="1925" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="744.53" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;seastar::shared_ptr&lt;db::commitlog::segment&gt; &gt;::promise_type::run_and_dispose (1 samples, 0.03%; +0.03%)</title><rect x="155.6" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="158.63" y="1951.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (10 samples, 0.32%; 0.00%)</title><rect x="858.8" y="1797" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.78" y="1807.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="85" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="95.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (373 samples, 11.80%; -0.16%)</title><rect x="265.0" y="1845" width="139.3" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="268.04" y="1855.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.44%; 0.00%)</title><rect x="142.6" y="2021" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.56" y="2031.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="929.7" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="932.73" y="1839.5" ></text>
</g>
<g >
<title>database::query (59 samples, 1.87%; -0.22%)</title><rect x="1008.9" y="1701" width="22.0" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="1011.89" y="1711.5" >d..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="108.2" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="111.21" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1615.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; +0.03%)</title><rect x="1104.1" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1107.11" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="99.6" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.62" y="1679.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="168.7" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.70" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="58.5" y="1717" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1679.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="84.7" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="87.68" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="68.6" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="1615.5" ></text>
</g>
<g >
<title>seastar::reactor::batch_flush_pollfn::poll (2 samples, 0.06%; +0.06%)</title><rect x="157.9" y="1941" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="160.87" y="1951.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.06%)</title><rect x="533.5" y="1813" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="536.53" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1711.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.22%; -0.13%)</title><rect x="460.7" y="1797" width="2.6" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="463.72" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.05" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="75.3" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="78.35" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="687.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_clone_visitor&gt; (1 samples, 0.03%; 0.00%)</title><rect x="181.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.40" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%; 0.00%)</title><rect x="32.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.78" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.40" y="1679.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (18 samples, 0.57%; -0.09%)</title><rect x="240.8" y="1877" width="6.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="243.77" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="79.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (2 samples, 0.06%; 0.00%)</title><rect x="61.9" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1807.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; +0.03%)</title><rect x="61.2" y="1781" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="64.16" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="135.5" y="1765" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="138.47" y="1775.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; 0.00%)</title><rect x="747.9" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.87" y="1903.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; 0.00%)</title><rect x="10.7" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1951.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%; +0.03%)</title><rect x="110.8" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="113.82" y="1743.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="100.4" y="1637" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="103.37" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="89.9" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="92.91" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="29.0" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="32.04" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (2 samples, 0.06%; 0.00%)</title><rect x="143.7" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.68" y="1919.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.03%; +0.03%)</title><rect x="45.8" y="1589" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="48.85" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (272 samples, 8.61%; 0.00%)</title><rect x="30.2" y="1861" width="101.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.16" y="1871.5" >seastar::non..</text>
</g>
<g >
<title>row_cache::do_make_reader (23 samples, 0.73%; +0.03%)</title><rect x="631.7" y="1813" width="8.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="634.74" y="1823.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (2 samples, 0.06%; 0.00%)</title><rect x="1104.9" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.86" y="1775.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="73.1" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="135.1" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.09" y="2015.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%; 0.00%)</title><rect x="21.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.95" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (71 samples, 2.25%; -0.06%)</title><rect x="510.0" y="1861" width="26.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="513.01" y="1871.5" >s..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (4 samples, 0.13%; 0.00%)</title><rect x="64.5" y="1733" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.52" y="1743.5" ></text>
</g>
<g >
<title>siglongjmp@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="11.9" y="1909" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="14.87" y="1919.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; -0.03%)</title><rect x="58.5" y="1621" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="61.54" y="1631.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.03%; +0.03%)</title><rect x="1172.1" y="2037" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1175.08" y="2047.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.16%; 0.00%)</title><rect x="64.1" y="1749" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="121.7" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; -0.03%)</title><rect x="111.2" y="1749" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="114.20" y="1759.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; +0.03%)</title><rect x="924.5" y="1829" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="927.50" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="1152.3" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1155.28" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1359.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1727.5" ></text>
</g>
<g >
<title>database::create_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.13%)</title><rect x="957.4" y="1781" width="1.5" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="960.36" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (23 samples, 0.73%; +0.03%)</title><rect x="857.7" y="1829" width="8.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="860.66" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="126.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.13" y="1807.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1599.5" ></text>
</g>
<g >
<title>posix_memalign (19 samples, 0.60%; -0.09%)</title><rect x="373.0" y="1653" width="7.1" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="375.96" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="165.7" y="1909" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="168.72" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1711.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="997.7" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1000.69" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_M_get (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.09%; 0.00%)</title><rect x="45.5" y="1621" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.47" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.03%)</title><rect x="1088.1" y="1781" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1091.06" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (2 samples, 0.06%; 0.00%)</title><rect x="23.8" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.82" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.13%; 0.00%)</title><rect x="67.9" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.88" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="33.5" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="36.53" y="1679.5" ></text>
</g>
<g >
<title>cql3::cql3_type::get_kind (1 samples, 0.03%; +0.03%)</title><rect x="15.6" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="18.60" y="1823.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.03%)</title><rect x="664.2" y="1909" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="667.23" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.16%; 0.00%)</title><rect x="97.8" y="1653" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.75" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.09%)</title><rect x="692.6" y="1893" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="695.61" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.13%; 0.00%)</title><rect x="85.8" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.80" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (4 samples, 0.13%; 0.00%)</title><rect x="88.8" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1583.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; +0.06%)</title><rect x="404.3" y="1861" width="2.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="407.33" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; +0.09%)</title><rect x="892.8" y="1733" width="2.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="895.76" y="1743.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (24 samples, 0.76%; +0.09%)</title><rect x="202.3" y="1877" width="9.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="205.31" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1695.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="99.2" y="1461" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="102.25" y="1471.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.09%; -0.03%)</title><rect x="725.5" y="1909" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="728.47" y="1919.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="103.4" y="1557" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="106.35" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; 0.00%)</title><rect x="856.2" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="859.16" y="1935.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.03%; +0.03%)</title><rect x="1106.7" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1109.73" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="917" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="927.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1599.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; 0.00%)</title><rect x="1131.7" y="1909" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1134.75" y="1919.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.41" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.09%)</title><rect x="538.8" y="1845" width="0.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="541.76" y="1855.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%; 0.00%)</title><rect x="655.3" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.27" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.03%; +0.03%)</title><rect x="155.3" y="1941" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="158.26" y="1951.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%; 0.00%)</title><rect x="60.0" y="1781" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="1791.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (29 samples, 0.92%; -0.03%)</title><rect x="704.9" y="1925" width="10.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="707.93" y="1935.5" ></text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.03%; 0.00%)</title><rect x="727.0" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="729.96" y="1887.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (6 samples, 0.19%; +0.19%)</title><rect x="476.8" y="1813" width="2.2" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="479.77" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="121.7" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1727.5" ></text>
</g>
<g >
<title>all (3,160 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1391.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.13%)</title><rect x="167.2" y="1893" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="170.21" y="1903.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (2 samples, 0.06%; 0.00%)</title><rect x="12.6" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.61" y="1871.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.03%; 0.00%)</title><rect x="418.9" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="421.89" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (2 samples, 0.06%; 0.00%)</title><rect x="755.0" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="757.97" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.23" y="1567.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="115.7" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="118.68" y="1711.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (8 samples, 0.25%; +0.03%)</title><rect x="117.5" y="1701" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="120.54" y="1711.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="23.8" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="26.82" y="1759.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (5 samples, 0.16%; +0.03%)</title><rect x="513.4" y="1813" width="1.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="516.37" y="1823.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (1 samples, 0.03%; +0.03%)</title><rect x="889.8" y="1781" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="892.77" y="1791.5" ></text>
</g>
<g >
<title>row::row (95 samples, 3.01%; +0.03%)</title><rect x="348.7" y="1717" width="35.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="351.69" y="1727.5" >row..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="132.5" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="135.48" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.04" y="1503.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.03%; 0.00%)</title><rect x="148.2" y="2037" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.16" y="2047.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.09%; 0.00%)</title><rect x="68.3" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.41%; 0.00%)</title><rect x="136.6" y="2021" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.59" y="2031.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (13 samples, 0.41%; -0.09%)</title><rect x="196.3" y="1893" width="4.9" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="199.34" y="1903.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="856.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="859.54" y="1919.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="76.8" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1045" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1055.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="561.9" y="1797" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="564.91" y="1807.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.03%; 0.00%)</title><rect x="144.1" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.06" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.03%; -0.06%)</title><rect x="674.7" y="1893" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="677.68" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.03%; 0.00%)</title><rect x="844.6" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="847.59" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="98.1" y="1573" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.13" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1695.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.22%; +0.16%)</title><rect x="833.8" y="1829" width="2.6" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="836.76" y="1839.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.3" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.27" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (7 samples, 0.22%; 0.00%)</title><rect x="338.6" y="1717" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="341.61" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="93.3" y="1573" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.27" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; +0.03%)</title><rect x="856.5" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="859.54" y="1903.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; -0.03%)</title><rect x="820.3" y="1765" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="823.32" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="98.1" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.13" y="1567.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.09%)</title><rect x="902.5" y="1733" width="0.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="905.47" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="181.0" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="184.03" y="1567.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (3 samples, 0.09%; 0.00%)</title><rect x="385.3" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="388.28" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1109" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1119.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (384 samples, 12.15%; +0.41%)</title><rect x="936.4" y="1845" width="143.4" height="15.0" fill="rgb(255,15,15)" rx="2" ry="2" />
<text  x="939.45" y="1855.5" >cql3::statements::..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (4 samples, 0.13%; 0.00%)</title><rect x="146.3" y="1989" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.30" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="216.9" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="219.87" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="121.7" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.71" y="1743.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (32 samples, 1.01%; -0.25%)</title><rect x="464.4" y="1797" width="12.0" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="467.45" y="1807.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="858.4" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="861.41" y="1775.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; 0.00%)</title><rect x="343.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="346.09" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="833.4" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="836.39" y="1791.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="194.1" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="197.09" y="1903.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,261 samples, 39.91%; 0.00%)</title><rect x="184.0" y="1925" width="470.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.01" y="1935.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="125.0" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="128.01" y="1759.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="144.8" y="1989" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.80" y="1999.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.13%)</title><rect x="516.4" y="1813" width="1.1" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="519.35" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1231.5" ></text>
</g>
<g >
<title>row::compact_and_expire (37 samples, 1.17%; 0.00%)</title><rect x="492.5" y="1829" width="13.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="495.46" y="1839.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt;::new_allocator (1 samples, 0.03%; +0.03%)</title><rect x="125.8" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="128.76" y="1759.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (9 samples, 0.28%; -0.03%)</title><rect x="92.9" y="1685" width="3.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="95.90" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="80.2" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.20" y="1727.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (4 samples, 0.13%; 0.00%)</title><rect x="14.1" y="1813" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.11" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.09%)</title><rect x="957.7" y="1765" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="960.73" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="76.8" y="1733" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1743.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.03%; +0.03%)</title><rect x="144.8" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="147.80" y="1951.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (5 samples, 0.16%; 0.00%)</title><rect x="113.1" y="1765" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (3 samples, 0.09%; -0.03%)</title><rect x="132.9" y="1893" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="135.85" y="1903.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; 0.00%)</title><rect x="859.2" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="862.15" y="1727.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.03%; +0.03%)</title><rect x="21.2" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="24.20" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.03%; +0.03%)</title><rect x="157.1" y="1941" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="160.13" y="1951.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; 0.00%)</title><rect x="859.2" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="862.15" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (122 samples, 3.86%; -0.03%)</title><rect x="1034.3" y="1781" width="45.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1037.28" y="1791.5" >serv..</text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1871.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.03%; +0.03%)</title><rect x="37.6" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="40.63" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="671.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; 0.00%)</title><rect x="67.9" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.88" y="1711.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.06%; +0.06%)</title><rect x="589.2" y="1813" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="592.17" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="103.0" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="105.98" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; +0.06%)</title><rect x="106.3" y="1733" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="109.34" y="1743.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.03%; +0.03%)</title><rect x="552.6" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="555.58" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (2 samples, 0.06%; 0.00%)</title><rect x="726.6" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="729.59" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="64.9" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.6" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="80.59" y="1727.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="61.5" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="64.53" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_deallocate (2 samples, 0.06%; 0.00%)</title><rect x="80.2" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.20" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="367.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (9 samples, 0.28%; 0.00%)</title><rect x="43.2" y="1701" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.23" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1599.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="29.8" y="1861" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="32.79" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="95.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.51" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="727.3" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="730.34" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="148.5" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="151.54" y="1887.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%; +0.03%)</title><rect x="85.4" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="88.43" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="68.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1455.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (314 samples, 9.94%; +0.16%)</title><rect x="280.0" y="1813" width="117.2" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="282.98" y="1823.5" >mutation_reade..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="103.4" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1647.5" ></text>
</g>
<g >
<title>row::external_memory_usage (16 samples, 0.51%; 0.00%)</title><rect x="342.7" y="1717" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="345.72" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="159.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%; +0.03%)</title><rect x="703.1" y="1909" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="706.06" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (2 samples, 0.06%; +0.03%)</title><rect x="211.6" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="214.65" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="80.2" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="83.20" y="1647.5" ></text>
</g>
<g >
<title>db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1110.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.09" y="1759.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (5 samples, 0.16%; 0.00%)</title><rect x="142.6" y="1989" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.56" y="1999.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (2 samples, 0.06%; +0.06%)</title><rect x="510.4" y="1829" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="513.38" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="129.9" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.87" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.04" y="1487.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (3 samples, 0.09%; 0.00%)</title><rect x="104.8" y="1701" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.85" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="99.6" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.62" y="1695.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="72.0" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="74.99" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="639.2" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="642.21" y="1791.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="112.7" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="115.69" y="1647.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.06%)</title><rect x="743.8" y="1909" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="746.77" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%; 0.00%)</title><rect x="103.4" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1695.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (2 samples, 0.06%; 0.00%)</title><rect x="61.2" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.16" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="70.5" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (3 samples, 0.09%; -0.06%)</title><rect x="1113.8" y="1685" width="1.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1116.82" y="1695.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.06%)</title><rect x="794.9" y="1845" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="797.92" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="72.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.99" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="68.6" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.63" y="1647.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="612.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="615.32" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.5" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1423.5" ></text>
</g>
<g >
<title>db::filter_for_query (1 samples, 0.03%; -0.09%)</title><rect x="1054.1" y="1765" width="0.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1057.08" y="1775.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (13 samples, 0.41%; 0.00%)</title><rect x="136.6" y="2037" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.59" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1567.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="628.4" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="631.38" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="845.3" y="1829" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="848.34" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1701" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.74" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.16%; -0.03%)</title><rect x="57.8" y="1797" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="60.80" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.09" y="1727.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; 0.00%)</title><rect x="1116.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.44" y="1663.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.71" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_deallocate_node (1 samples, 0.03%; 0.00%)</title><rect x="28.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.30" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (339 samples, 10.73%; -0.16%)</title><rect x="953.3" y="1813" width="126.5" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="956.25" y="1823.5" >service::storag..</text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="713.9" y="1893" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="716.89" y="1903.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (13 samples, 0.41%; +0.09%)</title><rect x="284.1" y="1797" width="4.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="287.09" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="181.4" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="184.40" y="1759.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (67 samples, 2.12%; -0.03%)</title><rect x="1007.0" y="1717" width="25.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1010.03" y="1727.5" >s..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="67.9" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.88" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl_data::_M_copy_data (1 samples, 0.03%; +0.03%)</title><rect x="125.4" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="128.39" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_type_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="128.4" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.37" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1157" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1167.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.03%; 0.00%)</title><rect x="727.0" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="729.96" y="1871.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (6 samples, 0.19%; +0.03%)</title><rect x="586.2" y="1797" width="2.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="589.18" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="194.8" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="197.84" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::advance (1 samples, 0.03%; 0.00%)</title><rect x="146.7" y="1973" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.67" y="1983.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,659 samples, 84.15%; -0.06%)</title><rect x="158.6" y="1941" width="992.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="161.62" y="1951.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.13%; 0.00%)</title><rect x="88.8" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1423.5" ></text>
</g>
<g >
<title>sstables::sstable::write_components (1 samples, 0.03%; 0.00%)</title><rect x="135.1" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.09" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; +0.06%)</title><rect x="82.8" y="1637" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="85.82" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1343.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.09%; +0.06%)</title><rect x="167.6" y="1893" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="170.58" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="180.7" y="1781" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="183.65" y="1791.5" ></text>
</g>
<g >
<title>db::large_data_handler::maybe_delete_large_data_entries (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="1935.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="78.7" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="81.71" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.06%; 0.00%)</title><rect x="121.7" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="75.7" y="1589" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="78.72" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="67.5" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.51" y="1711.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.06%; 0.00%)</title><rect x="646.7" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="649.68" y="1855.5" ></text>
</g>
<g >
<title>[[vdso]] (26 samples, 0.82%; +0.16%)</title><rect x="1157.1" y="2037" width="9.7" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1160.14" y="2047.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="612.7" y="1781" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="615.70" y="1791.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; 0.00%)</title><rect x="1172.1" y="2053" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.08" y="2063.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="989.5" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="992.47" y="1759.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (1 samples, 0.03%; 0.00%)</title><rect x="741.2" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="744.15" y="1919.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (6 samples, 0.19%; 0.00%)</title><rect x="19.3" y="1797" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.34" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="98.5" y="1493" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1503.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.06%; +0.06%)</title><rect x="51.8" y="1685" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="54.82" y="1695.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (6 samples, 0.19%; +0.03%)</title><rect x="850.6" y="1877" width="2.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="853.56" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (144 samples, 4.56%; -0.09%)</title><rect x="330.4" y="1733" width="53.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="333.39" y="1743.5" >parti..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="83.6" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; 0.00%)</title><rect x="589.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="592.92" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; 0.00%)</title><rect x="341.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="344.22" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="534.7" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="537.65" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="62.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.28" y="1775.5" ></text>
</g>
<g >
<title>logalloc::region_group::update_maximal_rg (1 samples, 0.03%; +0.03%)</title><rect x="143.3" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="146.31" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; -0.03%)</title><rect x="67.5" y="1765" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="70.51" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (24 samples, 0.76%; +0.03%)</title><rect x="1021.2" y="1685" width="9.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1024.22" y="1695.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1871.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (3 samples, 0.09%; 0.00%)</title><rect x="1115.7" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.69" y="1695.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="30.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.54" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="80.6" y="1669" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="83.58" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (2 samples, 0.06%; +0.06%)</title><rect x="48.1" y="1701" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="51.09" y="1711.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (2 samples, 0.06%; +0.03%)</title><rect x="1103.7" y="1765" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1106.74" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="97.8" y="1637" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.75" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (2 samples, 0.06%; +0.06%)</title><rect x="39.1" y="1701" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="42.13" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1791.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (13 samples, 0.41%; +0.16%)</title><rect x="623.5" y="1813" width="4.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="626.53" y="1823.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (285 samples, 9.02%; 0.00%)</title><rect x="26.1" y="1877" width="106.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.06" y="1887.5" >cql3::util::d..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.19%; 0.00%)</title><rect x="82.8" y="1653" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="98.5" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1519.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_data (1 samples, 0.03%; 0.00%)</title><rect x="40.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.62" y="1711.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="114.2" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="117.18" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="34.6" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.65" y="1615.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.06%)</title><rect x="667.6" y="1909" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="670.59" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_check_len (1 samples, 0.03%; 0.00%)</title><rect x="123.1" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.15" y="1743.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.2" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="80.22" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (184 samples, 5.82%; -0.03%)</title><rect x="57.8" y="1813" width="68.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="60.80" y="1823.5" >cql3_pa..</text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (5 samples, 0.16%; +0.03%)</title><rect x="1051.8" y="1765" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1054.84" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1567.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="90.3" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.28" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="725.1" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="728.09" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="431.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="146.7" y="1957" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="149.67" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="101.1" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="104.11" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="64.9" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; -0.03%)</title><rect x="790.1" y="1813" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="793.07" y="1823.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.11" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.38%; +0.25%)</title><rect x="249.0" y="1861" width="4.5" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="251.99" y="1871.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&amp;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="120.9" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="123.91" y="1519.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,688 samples, 85.06%; +0.09%)</title><rect x="148.9" y="1957" width="1003.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="151.91" y="1967.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (2 samples, 0.06%; 0.00%)</title><rect x="91.8" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.78" y="1711.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="755.7" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="758.72" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="129.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.49" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.40" y="1743.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (4 samples, 0.13%; +0.06%)</title><rect x="933.8" y="1813" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="936.84" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="68.3" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.41" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_destroy_nodes (2 samples, 0.06%; +0.06%)</title><rect x="27.6" y="1765" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="30.55" y="1775.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (21 samples, 0.66%; -0.03%)</title><rect x="372.6" y="1669" width="7.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="375.59" y="1679.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1150.8" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1153.79" y="1935.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (3 samples, 0.09%; +0.03%)</title><rect x="20.5" y="1765" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.46" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1407.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.06%)</title><rect x="535.0" y="1845" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="538.03" y="1855.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1647.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (17 samples, 0.54%; +0.06%)</title><rect x="18.2" y="1829" width="6.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="21.22" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="639.6" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="642.58" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="857.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.28" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1519.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.09%; +0.03%)</title><rect x="526.4" y="1797" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="529.44" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="610.8" y="1749" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="613.83" y="1759.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; -0.03%)</title><rect x="318.4" y="1733" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="321.44" y="1743.5" ></text>
</g>
<g >
<title>query::querier&lt; (669 samples, 21.17%; -0.32%)</title><rect x="259.8" y="1877" width="249.8" height="15.0" fill="rgb(60,60,255)" rx="2" ry="2" />
<text  x="262.82" y="1887.5" >query::querier&lt;</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (28 samples, 0.89%; 0.00%)</title><rect x="517.5" y="1813" width="10.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="520.47" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="103.4" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::deallocate (2 samples, 0.06%; 0.00%)</title><rect x="80.2" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.20" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (137 samples, 4.34%; +0.13%)</title><rect x="793.4" y="1861" width="51.2" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="796.43" y="1871.5" >cql3:..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="691.5" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="694.49" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="91.8" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="94.78" y="1695.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="128.0" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="131.00" y="1823.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="1054.8" y="1765" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1057.82" y="1775.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.09%)</title><rect x="617.9" y="1813" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="620.92" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="116.4" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="119.42" y="1679.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.03%; +0.03%)</title><rect x="858.0" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="861.03" y="1775.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (10 samples, 0.32%; 0.00%)</title><rect x="858.8" y="1765" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.78" y="1775.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.41%; 0.00%)</title><rect x="248.6" y="1877" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="251.61" y="1887.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.03%; 0.00%)</title><rect x="180.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.28" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; 0.00%)</title><rect x="103.4" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1679.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="104.1" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="107.10" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="860.6" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="863.65" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="67.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.51" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="73.1" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1647.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (4 samples, 0.13%; 0.00%)</title><rect x="983.9" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="986.87" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; -0.16%)</title><rect x="980.1" y="1749" width="3.0" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="983.14" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (333 samples, 10.54%; 0.00%)</title><rect x="10.7" y="1973" width="124.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1983.5" >std::_Function_..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="99.6" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.62" y="1711.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="12.6" y="1893" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.61" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="751.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1727.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (3 samples, 0.09%; 0.00%)</title><rect x="646.3" y="1861" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="649.30" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1679.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (8 samples, 0.25%; +0.06%)</title><rect x="169.4" y="1877" width="3.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="172.45" y="1887.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (49 samples, 1.55%; +0.03%)</title><rect x="1060.1" y="1749" width="18.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1063.05" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.03%)</title><rect x="611.2" y="1765" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="614.20" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="95.9" y="1557" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="98.89" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (6 samples, 0.19%; 0.00%)</title><rect x="97.4" y="1685" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.38" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="948.4" y="1829" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="951.40" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="732.2" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="735.19" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.40" y="1663.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="83.6" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="1599.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (237 samples, 7.50%; -0.32%)</title><rect x="419.6" y="1845" width="88.5" height="15.0" fill="rgb(60,60,255)" rx="2" ry="2" />
<text  x="422.64" y="1855.5" >seastar::d..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="479.5" ></text>
</g>
<g >
<title>table::query (1 samples, 0.03%; 0.00%)</title><rect x="1151.2" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1154.16" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_service_level_statement*, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="129.9" y="1797" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="132.87" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; +0.03%)</title><rect x="1113.1" y="1621" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1116.08" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="65.3" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.27" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1871.5" ></text>
</g>
<g >
<title>database::apply_in_memory (19 samples, 0.60%; 0.00%)</title><rect x="1101.9" y="1829" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.87" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="68.3" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.09%; 0.00%)</title><rect x="86.2" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.18" y="1695.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (326 samples, 10.32%; +0.03%)</title><rect x="12.2" y="1909" width="121.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="15.24" y="1919.5" >cql3::query_pro..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; -0.03%)</title><rect x="690.7" y="1861" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="693.74" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1663.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="122.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.40" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (350 samples, 11.08%; +0.06%)</title><rect x="949.1" y="1829" width="130.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="952.15" y="1839.5" >service::storage..</text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (4 samples, 0.13%; +0.03%)</title><rect x="1112.3" y="1653" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1115.33" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="170.9" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="173.94" y="1855.5" ></text>
</g>
<g >
<title>table::apply (19 samples, 0.60%; -0.03%)</title><rect x="1101.9" y="1813" width="7.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1104.87" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.03%; 0.00%)</title><rect x="144.1" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.06" y="1871.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; +0.03%)</title><rect x="211.3" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="214.27" y="1887.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (3 samples, 0.09%; 0.00%)</title><rect x="143.3" y="1973" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.31" y="1983.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (2 samples, 0.06%; 0.00%)</title><rect x="1104.9" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.86" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="68.6" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="71.63" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_role_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="128.7" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.75" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="674.7" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="677.68" y="1871.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.06%; 0.00%)</title><rect x="181.0" y="1877" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (10 samples, 0.32%; -0.13%)</title><rect x="308.4" y="1765" width="3.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="311.36" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="64.9" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="611.9" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="614.95" y="1775.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.09%; 0.00%)</title><rect x="89.2" y="1573" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.16" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="68.3" y="1573" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="71.25" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.13%; 0.00%)</title><rect x="616.4" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="619.43" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1711.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.13%; 0.00%)</title><rect x="32.0" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.03" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="80.2" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.20" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="239.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::wait_for_one (1 samples, 0.03%; +0.03%)</title><rect x="1118.3" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1121.30" y="1919.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (10 samples, 0.32%; +0.13%)</title><rect x="902.8" y="1733" width="3.8" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="905.84" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; -0.19%)</title><rect x="1005.5" y="1685" width="1.2" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="1008.53" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="67.5" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="70.51" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1973" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.03%)</title><rect x="171.3" y="1861" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="174.32" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="107.8" y="1733" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.84" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.05" y="1711.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (5 samples, 0.16%; +0.06%)</title><rect x="998.1" y="1717" width="1.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1001.06" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.06%; +0.03%)</title><rect x="109.3" y="1749" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="112.33" y="1759.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;clustering_key_prefix&gt;::empty (1 samples, 0.03%; 0.00%)</title><rect x="17.8" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.84" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.03%)</title><rect x="527.6" y="1797" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="530.56" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="115.3" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1711.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="69.4" y="1717" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="72.37" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="907.3" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="910.32" y="1791.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (5 samples, 0.16%; +0.03%)</title><rect x="927.1" y="1829" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="930.11" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="73.5" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.48" y="1551.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="28.3" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="31.30" y="1727.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::raw::update_statement*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="124.3" y="1685" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="127.27" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::maybe_advance_to (1 samples, 0.03%; +0.03%)</title><rect x="147.4" y="1973" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="150.42" y="1983.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.03%; +0.03%)</title><rect x="317.3" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="320.32" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="32.8" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.78" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.15" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; +0.09%)</title><rect x="304.3" y="1765" width="1.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="307.25" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1989" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1999.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (2 samples, 0.06%; +0.06%)</title><rect x="253.5" y="1877" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="256.47" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1141" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; 0.00%)</title><rect x="70.5" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="2031.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (6 samples, 0.19%; 0.00%)</title><rect x="476.8" y="1829" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="479.77" y="1839.5" ></text>
</g>
<g >
<title>abstract_type::from_string (3 samples, 0.09%; 0.00%)</title><rect x="14.1" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.11" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (3 samples, 0.09%; 0.00%)</title><rect x="143.3" y="1941" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.31" y="1951.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (16 samples, 0.51%; -0.09%)</title><rect x="435.3" y="1797" width="6.0" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="438.32" y="1807.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.23" y="1599.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (3 samples, 0.09%; +0.06%)</title><rect x="587.3" y="1781" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="590.30" y="1791.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (10 samples, 0.32%; -0.03%)</title><rect x="1111.2" y="1749" width="3.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1114.21" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.03%; 0.00%)</title><rect x="42.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.11" y="1663.5" ></text>
</g>
<g >
<title>partition_entry::read (2 samples, 0.06%; -0.03%)</title><rect x="620.2" y="1813" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="623.16" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.5" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1471.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; +0.03%)</title><rect x="852.4" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="855.43" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1647.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::~single_column_relation (1 samples, 0.03%; +0.03%)</title><rect x="25.7" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="28.68" y="1871.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.16%; +0.09%)</title><rect x="346.1" y="1685" width="1.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="349.08" y="1695.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (2 samples, 0.06%; +0.03%)</title><rect x="686.6" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="689.63" y="1903.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1775.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; -0.09%)</title><rect x="345.7" y="1685" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="348.70" y="1695.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (2 samples, 0.06%; -0.03%)</title><rect x="858.8" y="1749" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="861.78" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="326.3" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="329.28" y="1743.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.03%; +0.03%)</title><rect x="789.7" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="792.70" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; +0.03%)</title><rect x="380.1" y="1653" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="383.06" y="1663.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.57%; -0.06%)</title><rect x="999.9" y="1717" width="6.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1002.93" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (10 samples, 0.32%; 0.00%)</title><rect x="1097.4" y="1845" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1100.39" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1711.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="98.5" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1567.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.18" y="1967.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (13 samples, 0.41%; +0.03%)</title><rect x="31.3" y="1717" width="4.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="34.28" y="1727.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="180.7" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1823.5" ></text>
</g>
<g >
<title>db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1110.1" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.09" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="89.2" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.16" y="1599.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (23 samples, 0.73%; 0.00%)</title><rect x="1101.9" y="1845" width="8.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.87" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (376 samples, 11.90%; -0.13%)</title><rect x="263.9" y="1861" width="140.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="266.92" y="1871.5" >flat_mutation_rea..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.28%; +0.03%)</title><rect x="386.4" y="1749" width="3.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="389.41" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="70.5" y="1525" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="73.49" y="1535.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.38%; +0.09%)</title><rect x="694.1" y="1909" width="4.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="697.10" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="335.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.06%)</title><rect x="1093.7" y="1813" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1096.66" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_counters&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="1116.8" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1119.81" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="125.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.01" y="1775.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (629 samples, 19.91%; +0.25%)</title><rect x="866.6" y="1909" width="234.9" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="869.62" y="1919.5" >seastar::concrete_execution_sta..</text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.06%)</title><rect x="1092.5" y="1829" width="2.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1095.54" y="1839.5" ></text>
</g>
<g >
<title>sstables::sstable::write_scylla_metadata (1 samples, 0.03%; 0.00%)</title><rect x="135.1" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.09" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.06%)</title><rect x="1117.6" y="1925" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1120.56" y="1935.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (10 samples, 0.32%; -0.06%)</title><rect x="1111.2" y="1733" width="3.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1114.21" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_initialize_map (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (1 samples, 0.03%; +0.03%)</title><rect x="51.4" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="54.45" y="1695.5" ></text>
</g>
<g >
<title>handle_intel.constprop.0 (1 samples, 0.03%; +0.03%)</title><rect x="1171.7" y="2053" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1174.70" y="2063.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (1 samples, 0.03%; +0.03%)</title><rect x="899.5" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="902.48" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.02" y="1503.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.03%; +0.03%)</title><rect x="922.6" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="925.63" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.09%; +0.06%)</title><rect x="529.4" y="1829" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="532.42" y="1839.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.19%; 0.00%)</title><rect x="82.8" y="1669" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.15" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (272 samples, 8.61%; +0.03%)</title><rect x="30.2" y="1845" width="101.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="33.16" y="1855.5" >cql3_parser:..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.40" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1647.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.06%; -0.03%)</title><rect x="896.5" y="1765" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="899.49" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="527.9" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="530.93" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (24 samples, 0.76%; 0.00%)</title><rect x="857.7" y="1877" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.66" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="67.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.51" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="59.3" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="62.29" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.06%)</title><rect x="674.3" y="1909" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="677.31" y="1919.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; -0.03%)</title><rect x="766.5" y="1893" width="2.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="769.54" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (17 samples, 0.54%; 0.00%)</title><rect x="1110.8" y="1813" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.84" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="628.8" y="1829" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="631.75" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.09%; 0.00%)</title><rect x="210.2" y="1845" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="213.15" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1759.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%; 0.00%)</title><rect x="181.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.40" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="30.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.54" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="89.2" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.16" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_processor::query_processor (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="98.5" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1551.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="96.6" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="99.63" y="1679.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.03%; +0.03%)</title><rect x="1108.6" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1111.59" y="1791.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%; 0.00%)</title><rect x="181.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.40" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%; 0.00%)</title><rect x="111.2" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.20" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="257.2" y="1845" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="260.20" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="70.5" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="896.9" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="899.87" y="1743.5" ></text>
</g>
<g >
<title>logalloc::region_impl::object_memory_size_in_allocator (1 samples, 0.03%; +0.03%)</title><rect x="146.3" y="1973" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="149.30" y="1983.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.09%; +0.03%)</title><rect x="635.8" y="1797" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="638.85" y="1807.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="88.8" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="91.79" y="1583.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; -0.03%)</title><rect x="66.0" y="1749" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="69.01" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (333 samples, 10.54%; 0.00%)</title><rect x="10.7" y="2005" width="124.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="2015.5" >seastar::thread..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; 0.00%)</title><rect x="247.9" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="250.87" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="1727.5" ></text>
</g>
<g >
<title>_Unwind_IteratePhdrCallback (1 samples, 0.03%; +0.03%)</title><rect x="135.8" y="2021" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="138.84" y="2031.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.03%; -0.03%)</title><rect x="828.9" y="1749" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="831.91" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (3 samples, 0.09%; 0.00%)</title><rect x="107.8" y="1717" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.84" y="1727.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="105.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.22" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1599.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.03%; +0.03%)</title><rect x="384.2" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="387.16" y="1743.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; 0.00%)</title><rect x="1045.9" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.86" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (19 samples, 0.60%; 0.00%)</title><rect x="115.3" y="1765" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (1 samples, 0.03%; +0.03%)</title><rect x="680.7" y="1909" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="683.66" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (2 samples, 0.06%; +0.06%)</title><rect x="153.0" y="1941" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="156.02" y="1951.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.03%; 0.00%)</title><rect x="28.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.30" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1935.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (29 samples, 0.92%; +0.32%)</title><rect x="715.8" y="1925" width="10.8" height="15.0" fill="rgb(255,60,60)" rx="2" ry="2" />
<text  x="718.76" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.06%)</title><rect x="759.1" y="1893" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="762.08" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.2" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.24" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.06%; +0.03%)</title><rect x="650.0" y="1877" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="653.04" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="703.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (35 samples, 1.11%; +0.19%)</title><rect x="681.0" y="1909" width="13.1" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="684.03" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (35 samples, 1.11%; -0.03%)</title><rect x="728.5" y="1925" width="13.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="731.46" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1663.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="95.5" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="98.51" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.06%)</title><rect x="822.2" y="1749" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="825.18" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1189" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1199.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (90 samples, 2.85%; +0.25%)</title><rect x="349.8" y="1701" width="33.6" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="352.81" y="1711.5" >co..</text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (2 samples, 0.06%; +0.03%)</title><rect x="762.4" y="1893" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="765.44" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24 samples, 0.76%; +0.03%)</title><rect x="1101.5" y="1893" width="9.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1104.50" y="1903.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="1086.6" y="1813" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1089.56" y="1823.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.44%; 0.00%)</title><rect x="142.6" y="2037" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.56" y="2047.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="122.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.40" y="1727.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (2 samples, 0.06%; 0.00%)</title><rect x="14.5" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.48" y="1791.5" ></text>
</g>
<g >
<title>schema::position (1 samples, 0.03%; +0.03%)</title><rect x="926.0" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="928.99" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="709.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.41" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.16%; +0.09%)</title><rect x="548.1" y="1829" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="551.09" y="1839.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="113.1" y="1573" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.06" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="118.3" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="121.29" y="1647.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.03%; +0.03%)</title><rect x="13.4" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="16.36" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1471.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="104.8" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.85" y="1695.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (4 samples, 0.13%; -0.09%)</title><rect x="139.9" y="2005" width="1.5" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="142.95" y="2015.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%; 0.00%)</title><rect x="614.6" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="617.56" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%; 0.00%)</title><rect x="92.9" y="1669" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.90" y="1679.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; +0.06%)</title><rect x="1091.8" y="1845" width="3.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1094.79" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (66 samples, 2.09%; -0.38%)</title><rect x="1119.8" y="1925" width="24.6" height="15.0" fill="rgb(30,30,255)" rx="2" ry="2" />
<text  x="1122.80" y="1935.5" >s..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (4 samples, 0.13%; 0.00%)</title><rect x="88.8" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="33.2" y="1589" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="36.15" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="115.3" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="864.0" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="867.01" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; 0.00%)</title><rect x="35.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.02" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1701" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (70 samples, 2.22%; +0.06%)</title><rect x="80.9" y="1749" width="26.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="83.95" y="1759.5" >c..</text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1615.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.16%; 0.00%)</title><rect x="31.7" y="1701" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.66" y="1711.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (12 samples, 0.38%; 0.00%)</title><rect x="254.2" y="1877" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.22" y="1887.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (2 samples, 0.06%; 0.00%)</title><rect x="751.2" y="1893" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.23" y="1903.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (2 samples, 0.06%; +0.06%)</title><rect x="881.6" y="1845" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="884.56" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="516.0" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="518.98" y="1807.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="673.9" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="676.94" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.09%; +0.06%)</title><rect x="687.4" y="1893" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="690.38" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="70.5" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="70.5" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.6" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.57" y="1631.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="123.5" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="126.52" y="1807.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.06%; +0.06%)</title><rect x="134.3" y="1941" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="137.35" y="1951.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.03%; 0.00%)</title><rect x="47.0" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.97" y="1711.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (18 samples, 0.57%; 0.00%)</title><rect x="1110.5" y="1909" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.46" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.16%; 0.00%)</title><rect x="92.9" y="1637" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.90" y="1647.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="135.1" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.09" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="69.4" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.37" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.04" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1455.5" ></text>
</g>
<g >
<title>memtable::apply (19 samples, 0.60%; +0.06%)</title><rect x="1101.9" y="1797" width="7.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1104.87" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="102.2" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.23" y="1631.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (4 samples, 0.13%; -0.06%)</title><rect x="854.3" y="1909" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="857.30" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; +0.03%)</title><rect x="383.0" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="386.04" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; -0.13%)</title><rect x="1054.8" y="1749" width="3.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="1057.82" y="1759.5" ></text>
</g>
<g >
<title>auth::get_permissions (53 samples, 1.68%; -0.03%)</title><rect x="813.2" y="1797" width="19.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="816.22" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.74" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (13 samples, 0.41%; 0.00%)</title><rect x="31.3" y="1749" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.28" y="1759.5" ></text>
</g>
<g >
<title>memtable::evict_entry (1 samples, 0.03%; 0.00%)</title><rect x="144.4" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.43" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.23" y="1615.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (3 samples, 0.09%; 0.00%)</title><rect x="27.6" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.55" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.03%)</title><rect x="188.5" y="1909" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="191.49" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.73" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="128.7" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.75" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="26.1" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.06" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="83.9" y="1333" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="86.94" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~deque (2 samples, 0.06%; 0.00%)</title><rect x="27.6" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.55" y="1807.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="539.5" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="542.51" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (24 samples, 0.76%; 0.00%)</title><rect x="857.7" y="1893" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.66" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="1030.9" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1033.92" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (6 samples, 0.19%; +0.06%)</title><rect x="44.4" y="1637" width="2.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="47.35" y="1647.5" ></text>
</g>
<g >
<title>database::query (10 samples, 0.32%; -0.16%)</title><rect x="175.8" y="1925" width="3.7" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="178.80" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.57%; +0.09%)</title><rect x="999.9" y="1701" width="6.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1002.93" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (10 samples, 0.32%; 0.00%)</title><rect x="63.4" y="1781" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.40" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (71 samples, 2.25%; 0.00%)</title><rect x="31.3" y="1797" width="26.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.28" y="1807.5" >a..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.3" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.27" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="72.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.99" y="1711.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; +0.03%)</title><rect x="383.8" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="386.79" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; -0.03%)</title><rect x="853.9" y="1909" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="856.92" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (2 samples, 0.06%; +0.06%)</title><rect x="1032.8" y="1749" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1035.79" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (67 samples, 2.12%; 0.00%)</title><rect x="31.3" y="1765" width="25.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.28" y="1775.5" >a..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (610 samples, 19.30%; -0.06%)</title><rect x="873.7" y="1893" width="227.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="876.72" y="1903.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.03%; +0.03%)</title><rect x="54.1" y="1701" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="57.06" y="1711.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (2 samples, 0.06%; 0.00%)</title><rect x="858.0" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.03" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1727.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.03%; 0.00%)</title><rect x="180.7" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%; 0.00%)</title><rect x="90.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.28" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="773" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="783.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (177 samples, 5.60%; +0.19%)</title><rect x="320.3" y="1749" width="66.1" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="323.31" y="1759.5" >partiti..</text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; -0.03%)</title><rect x="849.1" y="1861" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="852.07" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="130.2" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.24" y="1791.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.03%; +0.03%)</title><rect x="148.2" y="2005" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="151.16" y="2015.5" ></text>
</g>
<g >
<title>auth::resource::resource (2 samples, 0.06%; +0.03%)</title><rect x="803.9" y="1829" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="806.89" y="1839.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1 samples, 0.03%; +0.03%)</title><rect x="986.1" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="989.11" y="1775.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; +0.03%)</title><rect x="396.9" y="1781" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="399.86" y="1791.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="145.2" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="148.18" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1663.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::alter_type_statement*, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="128.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.37" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (10 samples, 0.32%; -0.13%)</title><rect x="668.0" y="1925" width="3.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="670.96" y="1935.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="10.0" y="2053" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; -0.03%)</title><rect x="93.3" y="1589" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="96.27" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="704.6" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="707.56" y="1935.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.32%; +0.06%)</title><rect x="530.9" y="1829" width="3.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="533.92" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="63.8" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="66.77" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1823.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="755.3" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="758.34" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.13%)</title><rect x="845.0" y="1845" width="0.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="847.96" y="1855.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (17 samples, 0.54%; -0.03%)</title><rect x="528.7" y="1845" width="6.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="531.68" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_channel (1 samples, 0.03%; +0.03%)</title><rect x="64.5" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="67.52" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="67.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.51" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="974.5" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="977.54" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (127 samples, 4.02%; 0.00%)</title><rect x="62.7" y="1797" width="47.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.65" y="1807.5" >cql3..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (13 samples, 0.41%; 0.00%)</title><rect x="31.3" y="1733" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.28" y="1743.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (5 samples, 0.16%; +0.09%)</title><rect x="524.6" y="1797" width="1.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="527.57" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; -0.03%)</title><rect x="446.5" y="1813" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="449.53" y="1823.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (320 samples, 10.13%; 0.00%)</title><rect x="13.4" y="1893" width="119.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.36" y="1903.5" >cql3::query_pr..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1973" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1983.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="754.6" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="757.59" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="647.1" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="650.05" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.06%)</title><rect x="669.8" y="1909" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="672.83" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="73.1" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1679.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="707.2" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.17" y="1903.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.09" y="1743.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.09%; -0.06%)</title><rect x="882.7" y="1845" width="1.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="885.68" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="846.5" y="1861" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="849.46" y="1871.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.03%; +0.03%)</title><rect x="147.8" y="2037" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="150.79" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (5 samples, 0.16%; +0.16%)</title><rect x="214.6" y="1893" width="1.9" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="217.63" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1711.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.03%; +0.03%)</title><rect x="957.0" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="959.99" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (15 samples, 0.47%; -0.06%)</title><rect x="1024.6" y="1669" width="5.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1027.58" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="850.2" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="853.19" y="1887.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="135.1" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.09" y="1967.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (3 samples, 0.09%; +0.06%)</title><rect x="329.3" y="1733" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="332.27" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="91.0" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="94.03" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="70.5" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (8 samples, 0.25%; -0.06%)</title><rect x="609.3" y="1781" width="3.0" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="612.34" y="1791.5" ></text>
</g>
<g >
<title>query_state::query_state (16 samples, 0.51%; +0.03%)</title><rect x="641.8" y="1877" width="6.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="644.82" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1391.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; -0.03%)</title><rect x="1137.0" y="1909" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1139.97" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="899.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="902.11" y="1759.5" ></text>
</g>
<g >
<title>auth::get_permissions (3 samples, 0.09%; 0.00%)</title><rect x="132.9" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.85" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (371 samples, 11.74%; 0.00%)</title><rect x="10.4" y="2053" width="138.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.06%)</title><rect x="894.6" y="1717" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="897.63" y="1727.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; -0.03%)</title><rect x="448.4" y="1829" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="451.39" y="1839.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; +0.03%)</title><rect x="25.3" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="28.31" y="1839.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="92.9" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="95.90" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="308.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.99" y="1775.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (170 samples, 5.38%; +0.44%)</title><rect x="564.9" y="1829" width="63.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="567.90" y="1839.5" >memtab..</text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (12 samples, 0.38%; 0.00%)</title><rect x="101.9" y="1717" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.86" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; +0.03%)</title><rect x="33.9" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="36.90" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (7 samples, 0.22%; +0.06%)</title><rect x="1147.4" y="1925" width="2.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1150.43" y="1935.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.28%)</title><rect x="247.5" y="1877" width="1.1" height="15.0" fill="rgb(75,75,255)" rx="2" ry="2" />
<text  x="250.49" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="118.7" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.66" y="1647.5" ></text>
</g>
<g >
<title>main (2,688 samples, 85.06%; 0.00%)</title><rect x="148.9" y="2037" width="1003.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="2047.5" >main</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.13%; 0.00%)</title><rect x="88.8" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1647.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (3 samples, 0.09%; +0.03%)</title><rect x="101.9" y="1685" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="104.86" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (115 samples, 3.64%; 0.00%)</title><rect x="67.1" y="1781" width="43.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.13" y="1791.5" >cql3..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.82" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (26 samples, 0.82%; +0.03%)</title><rect x="496.2" y="1797" width="9.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="499.19" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1295.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (79 samples, 2.50%; +0.06%)</title><rect x="675.1" y="1925" width="29.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="678.06" y="1935.5" >se..</text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.03%; +0.03%)</title><rect x="1151.5" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1154.54" y="1935.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="1112.7" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.70" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="610.5" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="613.46" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.16%; +0.03%)</title><rect x="1137.7" y="1909" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1140.72" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; -0.03%)</title><rect x="401.7" y="1813" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="404.72" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="845.7" y="1861" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="848.71" y="1871.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; 0.00%)</title><rect x="809.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.49" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (2 samples, 0.06%; 0.00%)</title><rect x="26.1" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.06" y="1855.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (4 samples, 0.13%; 0.00%)</title><rect x="1109.0" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.97" y="1839.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (6 samples, 0.19%; -0.03%)</title><rect x="651.2" y="1877" width="2.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="654.16" y="1887.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="115.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (24 samples, 0.76%; 0.00%)</title><rect x="857.7" y="1861" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.66" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_destroy_nodes (1 samples, 0.03%; 0.00%)</title><rect x="28.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.30" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="58.5" y="1701" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1711.5" ></text>
</g>
<g >
<title>freeze (7 samples, 0.22%; 0.00%)</title><rect x="1111.2" y="1685" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.21" y="1695.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.06%)</title><rect x="829.3" y="1781" width="2.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="832.28" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.57%; +0.03%)</title><rect x="1110.5" y="1877" width="6.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1113.46" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="76.1" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="79.09" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.03%; +0.03%)</title><rect x="40.2" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="43.25" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1647.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (51 samples, 1.61%; +0.03%)</title><rect x="889.0" y="1813" width="19.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="892.03" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="639.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (3 samples, 0.09%; 0.00%)</title><rect x="1103.4" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.37" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (1 samples, 0.03%; 0.00%)</title><rect x="62.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.28" y="1791.5" ></text>
</g>
<g >
<title>validation::validate_column_family (17 samples, 0.54%; -0.09%)</title><rect x="836.4" y="1829" width="6.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="839.37" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (12 samples, 0.38%; +0.06%)</title><rect x="520.1" y="1797" width="4.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="523.09" y="1807.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.03%; +0.03%)</title><rect x="631.4" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="634.37" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (7 samples, 0.22%; +0.03%)</title><rect x="51.1" y="1701" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="54.08" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; +0.03%)</title><rect x="107.1" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.09" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (9 samples, 0.28%; 0.00%)</title><rect x="82.4" y="1717" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.44" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::padding (1 samples, 0.03%; +0.03%)</title><rect x="105.6" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="108.59" y="1695.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (282 samples, 8.92%; +0.09%)</title><rect x="536.5" y="1877" width="105.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="539.52" y="1887.5" >query::queri..</text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="752.0" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="754.98" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="103.4" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1583.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1101.1" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1104.13" y="1855.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info (1 samples, 0.03%; 0.00%)</title><rect x="142.2" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.19" y="2047.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1583.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (8 samples, 0.25%; +0.06%)</title><rect x="823.3" y="1765" width="3.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="826.30" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="404.0" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="406.96" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1327.5" ></text>
</g>
<g >
<title>schema::get_column_definition (2 samples, 0.06%; 0.00%)</title><rect x="24.6" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.56" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (117 samples, 3.70%; -0.06%)</title><rect x="885.3" y="1845" width="43.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="888.29" y="1855.5" >cql3..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1743.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="1113.8" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1116.82" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="128.4" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.37" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%; +0.03%)</title><rect x="42.1" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="45.11" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (44 samples, 1.39%; +0.06%)</title><rect x="38.0" y="1717" width="16.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="41.01" y="1727.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="58.9" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.03%)</title><rect x="1086.6" y="1797" width="1.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1089.56" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="127.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (1 samples, 0.03%; +0.03%)</title><rect x="1103.0" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1105.99" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="865.9" y="1765" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="868.87" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (2 samples, 0.06%; 0.00%)</title><rect x="23.8" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.82" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1679.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.03%)</title><rect x="748.6" y="1893" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="751.62" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::signal (2 samples, 0.06%; 0.00%)</title><rect x="402.1" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="405.09" y="1823.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.03%; +0.03%)</title><rect x="945.0" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="948.04" y="1839.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="80.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.20" y="1663.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (3 samples, 0.09%; -0.06%)</title><rect x="638.8" y="1797" width="1.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="641.84" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (1 samples, 0.03%; +0.03%)</title><rect x="935.3" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="938.33" y="1839.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.06%; -0.03%)</title><rect x="394.6" y="1765" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="397.62" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.03%; +0.03%)</title><rect x="1189.3" y="2005" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1192.25" y="2015.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="65.3" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.27" y="1567.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; -0.03%)</title><rect x="170.9" y="1861" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="173.94" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="124.3" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.27" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (4 samples, 0.13%; 0.00%)</title><rect x="1115.3" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.32" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="68.3" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1695.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; -0.22%)</title><rect x="364.4" y="1685" width="0.7" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="367.37" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="384.9" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="387.91" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="98.5" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (265 samples, 8.39%; -0.13%)</title><rect x="756.8" y="1925" width="99.0" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="759.84" y="1935.5" >seastar::in..</text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_destroy_data&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="29.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.04" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1173" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1183.5" ></text>
</g>
<g >
<title>make_combined_reader (29 samples, 0.92%; -0.09%)</title><rect x="552.9" y="1813" width="10.9" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="555.95" y="1823.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (3 samples, 0.09%; 0.00%)</title><rect x="132.9" y="1877" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.85" y="1887.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (2 samples, 0.06%; 0.00%)</title><rect x="142.6" y="1973" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.56" y="1983.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.16%; +0.06%)</title><rect x="698.6" y="1909" width="1.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="701.58" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1077" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1087.5" ></text>
</g>
<g >
<title>abstract_type::from_string (2 samples, 0.06%; 0.00%)</title><rect x="20.8" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.83" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.09%)</title><rect x="970.1" y="1749" width="0.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="973.06" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1615.5" ></text>
</g>
<g >
<title>table::make_reader (261 samples, 8.26%; -0.28%)</title><rect x="544.4" y="1845" width="97.4" height="15.0" fill="rgb(75,75,255)" rx="2" ry="2" />
<text  x="547.36" y="1855.5" >table::make..</text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%; +0.06%)</title><rect x="647.8" y="1877" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="650.80" y="1887.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="620.2" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="623.16" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="88.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="118.7" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.66" y="1599.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; 0.00%)</title><rect x="586.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="589.93" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="135.1" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.09" y="1983.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1663.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="104.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.85" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1791.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%; +0.03%)</title><rect x="144.1" y="1845" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="147.06" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="28.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.30" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="108.6" y="1669" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="111.58" y="1679.5" ></text>
</g>
<g >
<title>utils::flush_queue&lt;db::replay_position, std::less&lt;db::replay_position&gt;, seastar::lowres_clock&gt;::run_with_ordered_post_op&lt;db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1110.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.09" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::clear (2 samples, 0.06%; 0.00%)</title><rect x="28.7" y="1829" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.67" y="1839.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="178.4" y="1909" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="181.41" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="665.7" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="668.72" y="1919.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1439.5" ></text>
</g>
<g >
<title>dht::shard_of (2 samples, 0.06%; +0.06%)</title><rect x="992.8" y="1733" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="995.84" y="1743.5" ></text>
</g>
<g >
<title>seastar::file::dma_write_impl (1 samples, 0.03%; +0.03%)</title><rect x="1110.1" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1113.09" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1647.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (23 samples, 0.73%; -0.03%)</title><rect x="434.2" y="1829" width="8.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="437.20" y="1839.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.09%)</title><rect x="729.6" y="1909" width="2.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="732.58" y="1919.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="833.0" y="1797" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="836.01" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="80.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.20" y="1679.5" ></text>
</g>
<g >
<title>make_combined_reader (40 samples, 1.27%; -0.06%)</title><rect x="550.0" y="1829" width="14.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="552.96" y="1839.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%; 0.00%)</title><rect x="884.2" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.17" y="1855.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1102.6" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1105.62" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (2 samples, 0.06%; +0.06%)</title><rect x="895.7" y="1765" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="898.75" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getCharIndex (1 samples, 0.03%; +0.03%)</title><rect x="42.5" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="45.49" y="1711.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.03%; -0.06%)</title><rect x="392.4" y="1749" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="395.38" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%; 0.00%)</title><rect x="94.8" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.77" y="1663.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.49" y="1775.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; 0.00%)</title><rect x="1054.1" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1057.08" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (10 samples, 0.32%; +0.19%)</title><rect x="711.7" y="1909" width="3.7" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="714.65" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9 samples, 0.28%; 0.00%)</title><rect x="43.2" y="1653" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.23" y="1663.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (2 samples, 0.06%; 0.00%)</title><rect x="179.9" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.91" y="1871.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.32%; -0.06%)</title><rect x="168.7" y="1893" width="3.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="171.70" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="94.8" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.77" y="1679.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="1110.8" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1113.84" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (28 samples, 0.89%; 0.00%)</title><rect x="1079.8" y="1845" width="10.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1082.84" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (19 samples, 0.60%; -0.03%)</title><rect x="929.0" y="1845" width="7.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="931.98" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.09%)</title><rect x="924.9" y="1813" width="1.1" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="927.87" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.03%; +0.03%)</title><rect x="87.7" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="90.67" y="1743.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (2 samples, 0.06%; +0.03%)</title><rect x="1118.7" y="1925" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1121.68" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1439.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; +0.03%)</title><rect x="10.4" y="37" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="13.37" y="47.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="821.8" y="1749" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="824.81" y="1759.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (3 samples, 0.09%; +0.09%)</title><rect x="621.3" y="1813" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="624.28" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.13%)</title><rect x="612.7" y="1765" width="1.9" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="615.70" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (12 samples, 0.38%; 0.00%)</title><rect x="69.7" y="1749" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.75" y="1759.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.03%; 0.00%)</title><rect x="515.2" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="518.23" y="1823.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.9" y="1413" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.87" y="1423.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="406.9" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="409.94" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (4 samples, 0.13%; +0.03%)</title><rect x="85.8" y="1701" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="88.80" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="68.3" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1503.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (40 samples, 1.27%; -0.16%)</title><rect x="908.1" y="1829" width="14.9" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="911.07" y="1839.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.09%)</title><rect x="897.2" y="1765" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="900.24" y="1775.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.40" y="1775.5" ></text>
</g>
<g >
<title>_Unwind_Find_FDE (1 samples, 0.03%; 0.00%)</title><rect x="135.8" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.84" y="2047.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="1132.5" y="1893" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1135.49" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%; +0.03%)</title><rect x="87.3" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="90.30" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; +0.03%)</title><rect x="81.7" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="84.70" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.13%)</title><rect x="406.6" y="1845" width="0.3" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="409.57" y="1855.5" ></text>
</g>
<g >
<title>table::set_hit_rate (5 samples, 0.16%; -0.03%)</title><rect x="752.4" y="1893" width="1.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="755.35" y="1903.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; -0.03%)</title><rect x="1053.3" y="1749" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1056.33" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (9 samples, 0.28%; 0.00%)</title><rect x="82.4" y="1733" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.44" y="1743.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (6 samples, 0.19%; 0.00%)</title><rect x="19.3" y="1813" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.34" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.06%)</title><rect x="335.6" y="1701" width="1.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="338.62" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1727.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (25 samples, 0.79%; -0.09%)</title><rect x="784.1" y="1845" width="9.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="787.09" y="1855.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="86.6" y="1637" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="89.55" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; -0.03%)</title><rect x="104.5" y="1477" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="107.47" y="1487.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.19%; +0.19%)</title><rect x="503.7" y="1781" width="2.2" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="506.66" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; 0.00%)</title><rect x="832.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="835.64" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.06%)</title><rect x="849.4" y="1861" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="852.44" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="190.0" y="1909" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="192.99" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="649.7" y="1877" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="652.66" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="189.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.61" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (71 samples, 2.25%; 0.00%)</title><rect x="31.3" y="1781" width="26.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.28" y="1791.5" >a..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.71" y="1695.5" ></text>
</g>
<g >
<title>std::move&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="109.0" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="111.96" y="1759.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="852.1" y="1861" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="855.06" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="64.9" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="102.2" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.23" y="1583.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="136.6" y="2005" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="139.59" y="2015.5" ></text>
</g>
<g >
<title>cql3::expr::has_supporting_index (1 samples, 0.03%; 0.00%)</title><rect x="22.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.32" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="58.9" y="1637" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="61.92" y="1647.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (24 samples, 0.76%; 0.00%)</title><rect x="857.7" y="1909" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.66" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1941" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1951.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1112.0" y="1637" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1114.96" y="1647.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (27 samples, 0.85%; -0.09%)</title><rect x="783.3" y="1861" width="10.1" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="786.35" y="1871.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="145.9" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.92" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="32.8" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="35.78" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (1 samples, 0.03%; +0.03%)</title><rect x="704.6" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="707.56" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1695.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.03%; 0.00%)</title><rect x="968.2" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="971.19" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1941" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1615.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result_set&gt; &gt;, db::system_keyspace::query (1 samples, 0.03%; 0.00%)</title><rect x="655.3" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.27" y="1935.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; +0.03%)</title><rect x="1133.2" y="1909" width="3.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1136.24" y="1919.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (18 samples, 0.57%; +0.09%)</title><rect x="786.7" y="1829" width="6.7" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="789.71" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="564.2" y="1797" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="567.15" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; 0.00%)</title><rect x="669.5" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="672.46" y="1919.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (46 samples, 1.46%; +0.19%)</title><rect x="1154.5" y="2053" width="17.2" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="1157.53" y="2063.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="67.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.51" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; -0.06%)</title><rect x="111.2" y="1765" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="114.20" y="1775.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="66.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.01" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.02" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_erase_at_end (2 samples, 0.06%; +0.03%)</title><rect x="28.7" y="1813" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="31.67" y="1823.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;partition_key, clustering_key_prefix&gt;, std::pair&lt;std::pair&lt;partition_key, clustering_key_prefix&gt; const, cql3::update_parameters::prefetch_data::row&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;partition_key, clustering_key_prefix&gt; const, cql3::update_parameters::prefetch_data::row&gt; &gt;, cql3::update_parameters::prefetch_data::key_less, std::allocator&lt;std::pair&lt;std::pair&lt;partition_key, clustering_key_prefix&gt; const, cql3::update_parameters::prefetch_data::row&gt; &gt; &gt;::_M_erase (1 samples, 0.03%; +0.03%)</title><rect x="866.2" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="869.25" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.06%)</title><rect x="766.9" y="1877" width="2.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="769.92" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="111.2" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.20" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="67.5" y="1733" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="70.51" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.40" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (3 samples, 0.09%; 0.00%)</title><rect x="34.3" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.27" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="103.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.73" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_type_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.49" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="96.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.63" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="132.1" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="135.11" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="94.0" y="1461" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="97.02" y="1471.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; +0.03%)</title><rect x="63.4" y="1637" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="66.40" y="1647.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; 0.00%)</title><rect x="195.6" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="198.59" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1263.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="760.6" y="1909" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="763.57" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="994.0" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="996.96" y="1743.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="750.1" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="753.11" y="1903.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.03%; +0.03%)</title><rect x="865.1" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="868.13" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="93.3" y="1605" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.27" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (11 samples, 0.35%; +0.03%)</title><rect x="92.5" y="1701" width="4.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="95.53" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%; +0.03%)</title><rect x="173.2" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="176.18" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="33.2" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.15" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%; 0.00%)</title><rect x="60.0" y="1797" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="1807.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (33 samples, 1.04%; +0.25%)</title><rect x="655.6" y="1925" width="12.4" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="658.64" y="1935.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (11 samples, 0.35%; +0.19%)</title><rect x="197.1" y="1877" width="4.1" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="200.08" y="1887.5" ></text>
</g>
<g >
<title>mutation::set_cell (2 samples, 0.06%; -0.03%)</title><rect x="861.0" y="1749" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="864.02" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="34.6" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.65" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; 0.00%)</title><rect x="620.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="623.91" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="73.1" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1615.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasReachedFillbufferTarget (2 samples, 0.06%; +0.06%)</title><rect x="56.3" y="1765" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="59.30" y="1775.5" ></text>
</g>
<g >
<title>row::~row (20 samples, 0.63%; -0.03%)</title><rect x="435.3" y="1813" width="7.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="438.32" y="1823.5" ></text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.09%; 0.00%)</title><rect x="180.7" y="1909" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1743.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%; +0.03%)</title><rect x="19.3" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="22.34" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="58.5" y="1749" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; -0.03%)</title><rect x="86.6" y="1669" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="89.55" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.03%; 0.00%)</title><rect x="42.1" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.11" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; -0.09%)</title><rect x="398.0" y="1797" width="1.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="400.98" y="1807.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="1110.8" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.84" y="1791.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="105.2" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="108.22" y="1663.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; 0.00%)</title><rect x="892.8" y="1749" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="895.76" y="1759.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; 0.00%)</title><rect x="1053.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1056.70" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (9 samples, 0.28%; 0.00%)</title><rect x="43.2" y="1685" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.23" y="1695.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%; -0.03%)</title><rect x="390.5" y="1749" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="393.51" y="1759.5" ></text>
</g>
<g >
<title>database::find_schema (5 samples, 0.16%; -0.25%)</title><rect x="837.9" y="1813" width="1.8" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="840.87" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.06%)</title><rect x="759.4" y="1877" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="762.45" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::list_service_level_attachments_statement, std::default_delete&lt;cql3::statements::list_service_level_attachments_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="126.9" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="129.88" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="885" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="895.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1743.5" ></text>
</g>
<g >
<title>logalloc::region_group::update (1 samples, 0.03%; 0.00%)</title><rect x="143.3" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.31" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.03%)</title><rect x="710.9" y="1909" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="713.91" y="1919.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="68.3" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1615.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (2 samples, 0.06%; -0.03%)</title><rect x="726.6" y="1909" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="729.59" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1679.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="67.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.88" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="42.1" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.11" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="28.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.30" y="1791.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (2 samples, 0.06%; 0.00%)</title><rect x="861.0" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.02" y="1743.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="144.4" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.43" y="1983.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.38" y="1951.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (4 samples, 0.13%; +0.13%)</title><rect x="395.4" y="1781" width="1.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="398.37" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (8 samples, 0.25%; +0.03%)</title><rect x="863.3" y="1797" width="2.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="866.26" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (2 samples, 0.06%; 0.00%)</title><rect x="12.6" y="1877" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.61" y="1887.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (255 samples, 8.07%; +0.03%)</title><rect x="302.0" y="1797" width="95.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="305.01" y="1807.5" >partition_s..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="949" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="959.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.03%; 0.00%)</title><rect x="19.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.71" y="1775.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%; +0.03%)</title><rect x="855.8" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="858.79" y="1871.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (115 samples, 3.64%; +0.19%)</title><rect x="989.8" y="1749" width="43.0" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="992.85" y="1759.5" >serv..</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (13 samples, 0.41%; +0.13%)</title><rect x="930.5" y="1829" width="4.8" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="933.47" y="1839.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::has_supporting_index (1 samples, 0.03%; 0.00%)</title><rect x="22.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.32" y="1823.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.03%)</title><rect x="663.1" y="1909" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="666.11" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="165.3" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="168.34" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (8 samples, 0.25%; -0.22%)</title><rect x="389.8" y="1765" width="3.0" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="392.77" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (3 samples, 0.09%; +0.06%)</title><rect x="327.8" y="1717" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="330.78" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="208.3" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="211.28" y="1871.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (120 samples, 3.80%; +0.19%)</title><rect x="797.9" y="1845" width="44.8" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="800.91" y="1855.5" >serv..</text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.57%; 0.00%)</title><rect x="1110.5" y="1893" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.46" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::select_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="131.4" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="134.36" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="65.3" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.27" y="1631.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1695.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="64.9" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1311.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.09%; -0.03%)</title><rect x="841.6" y="1813" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="844.60" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1711.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (7 samples, 0.22%; 0.00%)</title><rect x="326.7" y="1733" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="329.66" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="34.6" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.65" y="1583.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (6 samples, 0.19%; -0.09%)</title><rect x="297.2" y="1781" width="2.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="300.16" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="121.7" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="125.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.01" y="1791.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.09%; +0.09%)</title><rect x="784.5" y="1829" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="787.47" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="180.7" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.65" y="1807.5" ></text>
</g>
<g >
<title>logalloc::region_group::update (1 samples, 0.03%; 0.00%)</title><rect x="142.9" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.94" y="1967.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.03%; +0.03%)</title><rect x="46.2" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="49.22" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.03%; 0.00%)</title><rect x="35.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="38.39" y="1695.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (67 samples, 2.12%; -0.06%)</title><rect x="592.9" y="1813" width="25.0" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="595.91" y="1823.5" >m..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1711.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; -0.03%)</title><rect x="751.6" y="1877" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="754.61" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="805" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="815.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (15 samples, 0.47%; -0.03%)</title><rect x="1111.2" y="1781" width="5.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1114.21" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="114.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.93" y="1695.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="71.6" y="1605" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="74.61" y="1615.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.09%; 0.00%)</title><rect x="111.2" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.20" y="1711.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="988.4" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="991.35" y="1759.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token (1 samples, 0.03%; 0.00%)</title><rect x="42.9" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.86" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="73.5" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="76.48" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="121.7" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1535.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="2005" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="2015.5" ></text>
</g>
<g >
<title>auth::resource::parent (2 samples, 0.06%; +0.03%)</title><rect x="809.9" y="1813" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="812.86" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (5 samples, 0.16%; +0.09%)</title><rect x="22.7" y="1813" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="25.70" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; -0.03%)</title><rect x="740.8" y="1893" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="743.78" y="1903.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (4 samples, 0.13%; 0.00%)</title><rect x="123.9" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.89" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="935.7" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="938.70" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="735.6" y="1893" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="738.55" y="1903.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%; 0.00%)</title><rect x="86.6" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.55" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.09%)</title><rect x="697.5" y="1893" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="700.46" y="1903.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (3 samples, 0.09%; 0.00%)</title><rect x="382.3" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="385.30" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="434.9" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="437.95" y="1823.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.09%; 0.00%)</title><rect x="34.3" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.27" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.03%; +0.03%)</title><rect x="930.1" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="933.10" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="112.3" y="1605" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="115.32" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (2 samples, 0.06%; 0.00%)</title><rect x="23.8" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.82" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="113.1" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1743.5" ></text>
</g>
<g >
<title>__libc_siglongjmp (1 samples, 0.03%; +0.03%)</title><rect x="654.9" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="657.89" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1599.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1989" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1999.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.73%; 0.00%)</title><rect x="1101.9" y="1877" width="8.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.87" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_bound_terms (1 samples, 0.03%; +0.03%)</title><rect x="134.0" y="1909" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="136.97" y="1919.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="95.1" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="98.14" y="1631.5" ></text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (1 samples, 0.03%; 0.00%)</title><rect x="180.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.28" y="1807.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (11 samples, 0.35%; +0.06%)</title><rect x="891.6" y="1765" width="4.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="894.64" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="143.5" ></text>
</g>
<g >
<title>table::query (1,168 samples, 36.96%; -0.09%)</title><rect x="217.2" y="1893" width="436.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="220.25" y="1903.5" >table::query</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="130.6" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="133.61" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="16.0" y="1813" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="18.97" y="1823.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="765.8" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="768.80" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.13%)</title><rect x="831.5" y="1765" width="1.1" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="834.52" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.13%; 0.00%)</title><rect x="400.2" y="1813" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="403.22" y="1823.5" ></text>
</g>
<g >
<title>dht::tri_compare (16 samples, 0.51%; +0.28%)</title><rect x="1072.4" y="1701" width="5.9" height="15.0" fill="rgb(255,75,75)" rx="2" ry="2" />
<text  x="1075.37" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="67.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.51" y="1647.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="34.6" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="37.65" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="58.5" y="1733" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (6 samples, 0.19%; -0.03%)</title><rect x="82.8" y="1685" width="2.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="85.82" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (3 samples, 0.09%; 0.00%)</title><rect x="143.3" y="1925" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.31" y="1935.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1775.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="92.2" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.15" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::stats (5 samples, 0.16%; +0.09%)</title><rect x="607.5" y="1765" width="1.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="610.47" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (19 samples, 0.60%; +0.32%)</title><rect x="373.0" y="1637" width="7.1" height="15.0" fill="rgb(255,60,60)" rx="2" ry="2" />
<text  x="375.96" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="588.8" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="591.80" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.11" y="1679.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (22 samples, 0.70%; -0.09%)</title><rect x="1070.1" y="1717" width="8.2" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1073.13" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="619.8" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="622.79" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.51" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="75.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.35" y="1631.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; +0.03%)</title><rect x="563.8" y="1813" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="566.78" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::syscall_result_extra&lt;stat&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="1189.6" y="1973" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1192.63" y="1983.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (2 samples, 0.06%; +0.03%)</title><rect x="861.0" y="1717" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="864.02" y="1727.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="853" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="863.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="113.1" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="128.4" y="1749" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="131.37" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.11" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.03%)</title><rect x="768.0" y="1861" width="1.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="771.04" y="1871.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.06%; 0.00%)</title><rect x="605.2" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="608.23" y="1791.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="70.5" y="1701" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1711.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; 0.00%)</title><rect x="21.9" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.95" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.13%; 0.00%)</title><rect x="67.9" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.88" y="1775.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="861.4" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="864.39" y="1711.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (49 samples, 1.55%; 0.00%)</title><rect x="510.4" y="1845" width="18.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="513.38" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::process_element_func (1 samples, 0.03%; 0.00%)</title><rect x="856.9" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="859.91" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (240 samples, 7.59%; -0.09%)</title><rect x="305.7" y="1781" width="89.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="308.75" y="1791.5" >partition_..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::untyped_constant&gt;::_M_addr (1 samples, 0.03%; +0.03%)</title><rect x="120.5" y="1301" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="123.53" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="34.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.65" y="1567.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%; 0.00%)</title><rect x="1110.8" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.84" y="1775.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1711.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="109.7" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="112.70" y="1663.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1903.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.09%; -0.06%)</title><rect x="508.1" y="1861" width="1.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="511.14" y="1871.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="94.0" y="1397" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="97.02" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1519.5" ></text>
</g>
<g >
<title>free (4 samples, 0.13%; +0.09%)</title><rect x="441.3" y="1797" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="444.30" y="1807.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; 0.00%)</title><rect x="29.4" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.42" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="95.9" y="1525" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="98.89" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="559.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="75.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.35" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="87.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.30" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.06%)</title><rect x="988.4" y="1733" width="1.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="991.35" y="1743.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="112.3" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="115.32" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (15 samples, 0.47%; +0.03%)</title><rect x="116.8" y="1749" width="5.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="119.80" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1615.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (13 samples, 0.41%; -0.03%)</title><rect x="736.3" y="1909" width="4.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="739.30" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (8 samples, 0.25%; +0.13%)</title><rect x="1144.4" y="1925" width="3.0" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="1147.44" y="1935.5" ></text>
</g>
<g >
<title>service::write_response_handler::write_response_handler (1 samples, 0.03%; +0.03%)</title><rect x="1114.6" y="1653" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1117.57" y="1663.5" ></text>
</g>
<g >
<title>syscall-0 (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2069" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="2079.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="638.1" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="641.09" y="1791.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (696 samples, 22.03%; 0.00%)</title><rect x="857.7" y="1925" width="259.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.66" y="1935.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.45" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_role_statement*, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="128.7" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="131.75" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="287.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="61.9" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="64.91" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (11 samples, 0.35%; -0.03%)</title><rect x="858.8" y="1813" width="4.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="861.78" y="1823.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; 0.00%)</title><rect x="735.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.92" y="1903.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="181.8" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.77" y="1935.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; 0.00%)</title><rect x="581.7" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="584.70" y="1823.5" ></text>
</g>
<g >
<title>from_hex (2 samples, 0.06%; +0.03%)</title><rect x="14.5" y="1765" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="17.48" y="1775.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; -0.03%)</title><rect x="447.3" y="1829" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="450.27" y="1839.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.73" y="1871.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="655.3" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.27" y="1903.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%; +0.03%)</title><rect x="340.8" y="1701" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="343.85" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="60.0" y="1733" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="63.04" y="1743.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="650.8" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="653.78" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="102.2" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.23" y="1679.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%; -0.03%)</title><rect x="1116.1" y="1669" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1119.06" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1111.6" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1114.58" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="70.9" y="1381" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="73.87" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.41" y="1551.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.19%; 0.00%)</title><rect x="97.4" y="1669" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.38" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="78.0" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.96" y="1743.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.09%; +0.09%)</title><rect x="836.7" y="1813" width="1.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="839.75" y="1823.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="113.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.44" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.13%; 0.00%)</title><rect x="88.8" y="1685" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="75.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.35" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="90.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.28" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="66.8" y="1765" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="69.76" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; +0.03%)</title><rect x="264.7" y="1845" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="267.67" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="92.2" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.15" y="1695.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.03%; 0.00%)</title><rect x="855.8" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.79" y="1919.5" ></text>
</g>
<g >
<title>db::schema_tables::create_columns_from_column_rows (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1471.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="100.7" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="103.74" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.16" y="1679.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::close (1 samples, 0.03%; +0.03%)</title><rect x="728.1" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="731.08" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="65.3" y="1589" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="68.27" y="1599.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; 0.00%)</title><rect x="945.4" y="1829" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="948.41" y="1839.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%; 0.00%)</title><rect x="179.9" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.91" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1359.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (8 samples, 0.25%; -0.09%)</title><rect x="1128.8" y="1909" width="2.9" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1131.76" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (72 samples, 2.28%; +0.03%)</title><rect x="30.9" y="1813" width="26.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="33.91" y="1823.5" >a..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (3 samples, 0.09%; 0.00%)</title><rect x="143.3" y="1957" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.31" y="1967.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.17" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (2 samples, 0.06%; 0.00%)</title><rect x="858.0" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.03" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1695.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%; 0.00%)</title><rect x="997.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1000.32" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.03%; +0.03%)</title><rect x="55.6" y="1717" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="58.56" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (5 samples, 0.16%; 0.00%)</title><rect x="14.1" y="1829" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.11" y="1839.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="102.6" y="1573" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="105.61" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (273 samples, 8.64%; +0.06%)</title><rect x="539.9" y="1861" width="101.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="542.88" y="1871.5" >std::_Functi..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.25%; +0.06%)</title><rect x="1018.2" y="1653" width="3.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1021.23" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="933" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="943.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::consume (1 samples, 0.03%; +0.03%)</title><rect x="145.6" y="1973" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="148.55" y="1983.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (4 samples, 0.13%; +0.03%)</title><rect x="209.8" y="1861" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="212.78" y="1871.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; -0.03%)</title><rect x="756.1" y="1925" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="759.09" y="1935.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::comparator_type (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1775.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (8 samples, 0.25%; 0.00%)</title><rect x="1139.6" y="1909" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.59" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="1029.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1032.80" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="907.7" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="910.70" y="1791.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="342.3" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="345.34" y="1727.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="1104.9" y="1733" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1107.86" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1679.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_definition::metric_definition (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1839.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_definition_impl::metric_definition_impl (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.02" y="1439.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (5 samples, 0.16%; 0.00%)</title><rect x="92.9" y="1653" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.90" y="1663.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="1111.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.58" y="1647.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.03%; +0.03%)</title><rect x="1054.4" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1057.45" y="1775.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.03%; 0.00%)</title><rect x="26.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.43" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; -0.06%)</title><rect x="1133.6" y="1893" width="3.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1136.61" y="1903.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="95.9" y="1493" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="98.89" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1551.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (1 samples, 0.03%; +0.03%)</title><rect x="765.4" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="768.42" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; 0.00%)</title><rect x="1031.3" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1034.30" y="1711.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (13 samples, 0.41%; +0.06%)</title><rect x="1166.8" y="2037" width="4.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1169.85" y="2047.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.76" y="1775.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; -0.13%)</title><rect x="852.4" y="1861" width="0.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="855.43" y="1871.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (2 samples, 0.06%; +0.06%)</title><rect x="985.4" y="1765" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="988.37" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="710.2" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.16" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.11" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~_Deque_base (2 samples, 0.06%; 0.00%)</title><rect x="27.6" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.55" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="115.3" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.06%; +0.03%)</title><rect x="1106.0" y="1749" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1108.98" y="1759.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,688 samples, 85.06%; 0.00%)</title><rect x="148.9" y="2005" width="1003.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="2015.5" >seastar::app_template::run</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; -0.03%)</title><rect x="303.1" y="1781" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="306.13" y="1791.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="119.8" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.78" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="96.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.63" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="119.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.04" y="1551.5" ></text>
</g>
<g >
<title>mutation_querier::consume (74 samples, 2.34%; +0.13%)</title><rect x="448.8" y="1813" width="27.6" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="451.77" y="1823.5" >m..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (608 samples, 19.24%; -0.03%)</title><rect x="874.5" y="1877" width="227.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="877.46" y="1887.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="64.9" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.89" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (2 samples, 0.06%; 0.00%)</title><rect x="858.0" y="1813" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.03" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1967.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (9 samples, 0.28%; +0.03%)</title><rect x="82.4" y="1701" width="3.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="85.44" y="1711.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.70" y="1711.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="857.3" y="1893" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="860.28" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="83.6" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="65.6" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="68.64" y="1727.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (27 samples, 0.85%; +0.13%)</title><rect x="912.6" y="1813" width="10.0" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="915.55" y="1823.5" ></text>
</g>
<g >
<title>schema::get_sharder (1 samples, 0.03%; +0.03%)</title><rect x="1006.7" y="1717" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1009.65" y="1727.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.03%; +0.03%)</title><rect x="34.3" y="1621" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="37.27" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="30.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.54" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (53 samples, 1.68%; 0.00%)</title><rect x="36.1" y="1749" width="19.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.14" y="1759.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="957.4" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="960.36" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.72" y="1615.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%; -0.22%)</title><rect x="390.1" y="1749" width="0.4" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="393.14" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.03%)</title><rect x="1028.3" y="1637" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1031.31" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1343.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="614.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="617.94" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%; 0.00%)</title><rect x="591.0" y="1813" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="594.04" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (2 samples, 0.06%; -0.06%)</title><rect x="47.3" y="1701" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="50.34" y="1711.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1887.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%; 0.00%)</title><rect x="860.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.65" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%; 0.00%)</title><rect x="117.9" y="1685" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.92" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,688 samples, 85.06%; 0.00%)</title><rect x="148.9" y="1973" width="1003.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="1983.5" >seastar::reactor::run</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.06%; +0.03%)</title><rect x="143.7" y="1893" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="146.68" y="1903.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="588.4" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="591.42" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="926.4" y="1829" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="929.37" y="1839.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="111.2" y="1733" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.20" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (12 samples, 0.38%; -0.06%)</title><rect x="343.5" y="1701" width="4.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="346.46" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="130.2" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.24" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="129.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.49" y="1759.5" ></text>
</g>
<g >
<title>_Unwind_IteratePhdrCallback (1 samples, 0.03%; +0.03%)</title><rect x="136.2" y="2037" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="139.22" y="2047.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.06%; -0.06%)</title><rect x="861.8" y="1749" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="864.77" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (6 samples, 0.19%; +0.09%)</title><rect x="48.8" y="1685" width="2.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="51.84" y="1695.5" ></text>
</g>
<g >
<title>sstables::sstable::unlink (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="1951.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.06%)</title><rect x="741.9" y="1909" width="1.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="744.90" y="1919.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.61" y="1855.5" ></text>
</g>
<g >
<title>serialize (1 samples, 0.03%; +0.03%)</title><rect x="20.1" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="23.08" y="1775.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (4 samples, 0.13%; 0.00%)</title><rect x="1109.0" y="1813" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.97" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (46 samples, 1.46%; 0.00%)</title><rect x="890.1" y="1781" width="17.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="893.15" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (3 samples, 0.09%; 0.00%)</title><rect x="99.6" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.62" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::sync_directory (1 samples, 0.03%; 0.00%)</title><rect x="728.1" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="731.08" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="709.8" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="712.78" y="1919.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (7 samples, 0.22%; -0.03%)</title><rect x="14.1" y="1845" width="2.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="17.11" y="1855.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (4 samples, 0.13%; +0.06%)</title><rect x="339.4" y="1701" width="1.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="342.35" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="60.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.78" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="75.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.35" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="35.8" y="1701" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="38.77" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1615.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.13%; +0.09%)</title><rect x="842.7" y="1845" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="845.72" y="1855.5" ></text>
</g>
<g >
<title>free (9 samples, 0.28%; +0.09%)</title><rect x="437.9" y="1781" width="3.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="440.94" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%; +0.03%)</title><rect x="528.3" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="531.30" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.62" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (2 samples, 0.06%; +0.03%)</title><rect x="755.0" y="1909" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="757.97" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1061" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1071.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="128.7" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.75" y="1807.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; -0.03%)</title><rect x="831.5" y="1781" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="834.52" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="948.8" y="1829" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="951.77" y="1839.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; +0.03%)</title><rect x="417.8" y="1845" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="420.77" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="156.0" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.01" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="124.3" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.27" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.09" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="70.5" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1615.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="844.2" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="847.22" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (4 samples, 0.13%; +0.06%)</title><rect x="41.0" y="1701" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="43.99" y="1711.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; -0.03%)</title><rect x="748.2" y="1893" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="751.25" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;frozen_schema  (2 samples, 0.06%; 0.00%)</title><rect x="179.9" y="1845" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.91" y="1855.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%; 0.00%)</title><rect x="560.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.42" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1205" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1215.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (9 samples, 0.28%; 0.00%)</title><rect x="862.9" y="1813" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.89" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="75.3" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.35" y="1679.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.06%; +0.06%)</title><rect x="371.8" y="1669" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="374.84" y="1679.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (3 samples, 0.09%; 0.00%)</title><rect x="1109.3" y="1797" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.34" y="1807.5" ></text>
</g>
<g >
<title>utils::array_search_gt (2 samples, 0.06%; +0.06%)</title><rect x="640.3" y="1829" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="643.33" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1631.5" ></text>
</g>
<g >
<title>query_result_builder::consume (75 samples, 2.37%; -0.03%)</title><rect x="448.8" y="1829" width="28.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="451.77" y="1839.5" >q..</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="116.1" y="1653" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="119.05" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.9" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.89" y="1631.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="181.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.40" y="1807.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="845.0" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="847.96" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.06" y="1599.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (9 samples, 0.28%; +0.06%)</title><rect x="1025.7" y="1653" width="3.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1028.70" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; 0.00%)</title><rect x="622.8" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="625.78" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; +0.03%)</title><rect x="83.6" y="1573" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="86.56" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; +0.03%)</title><rect x="1137.3" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1140.35" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="75.3" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.35" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="129.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.12" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (1 samples, 0.03%; 0.00%)</title><rect x="25.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.68" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1279.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (608 samples, 19.24%; -0.09%)</title><rect x="874.5" y="1861" width="227.0" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="877.46" y="1871.5" >cql3::statements::select_state..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="118.7" y="1557" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="121.66" y="1567.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::tuple&lt;true, true&gt; (2 samples, 0.06%; 0.00%)</title><rect x="108.2" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.21" y="1695.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (6 samples, 0.19%; -0.06%)</title><rect x="317.7" y="1749" width="2.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="320.70" y="1759.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result_extra&lt;stat&gt; &gt;::process (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="1999.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (270 samples, 8.54%; +0.09%)</title><rect x="407.3" y="1861" width="100.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="410.32" y="1871.5" >query::consu..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; +0.06%)</title><rect x="506.6" y="1829" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="509.65" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; -0.03%)</title><rect x="93.3" y="1557" width="1.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="96.27" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.12" y="1919.5" ></text>
</g>
<g >
<title>__start_context (333 samples, 10.54%; 0.00%)</title><rect x="10.7" y="2021" width="124.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="2031.5" >__start_context</text>
</g>
<g >
<title>operator new (19 samples, 0.60%; -0.03%)</title><rect x="1014.1" y="1685" width="7.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1017.12" y="1695.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.03%; 0.00%)</title><rect x="506.3" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="509.27" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="507.8" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="510.77" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (10 samples, 0.32%; 0.00%)</title><rect x="858.8" y="1781" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.78" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (9 samples, 0.28%; +0.09%)</title><rect x="606.0" y="1781" width="3.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="608.97" y="1791.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.09%; +0.09%)</title><rect x="1078.7" y="1765" width="1.1" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1081.72" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1871.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="1090.3" y="1845" width="1.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1093.30" y="1855.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; -0.03%)</title><rect x="67.5" y="1621" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="70.51" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1663.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; -0.06%)</title><rect x="196.0" y="1893" width="0.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="198.96" y="1903.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.06%; +0.06%)</title><rect x="859.9" y="1733" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="862.90" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="15.2" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="18.23" y="1807.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result&lt;long&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="855.8" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.79" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="983.1" y="1765" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="986.13" y="1775.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="11.1" y="1925" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.12" y="1935.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="60.8" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="63.78" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; +0.03%)</title><rect x="76.5" y="1749" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="79.47" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (1 samples, 0.03%; +0.03%)</title><rect x="175.4" y="1925" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="178.42" y="1935.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.03%; +0.03%)</title><rect x="59.7" y="1797" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="62.66" y="1807.5" ></text>
</g>
<g >
<title>database::find_schema (6 samples, 0.19%; -0.16%)</title><rect x="795.7" y="1845" width="2.2" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="798.67" y="1855.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (9 samples, 0.28%; +0.22%)</title><rect x="1097.8" y="1829" width="3.3" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="1100.77" y="1839.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="93.3" y="1541" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.27" y="1551.5" ></text>
</g>
<g >
<title>query::querier_base::close (72 samples, 2.28%; +0.03%)</title><rect x="509.6" y="1877" width="26.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="512.63" y="1887.5" >q..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="70.5" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1503.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="77.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.22" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.16%; 0.00%)</title><rect x="57.8" y="1781" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.80" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="116.1" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.05" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.03%; +0.03%)</title><rect x="122.4" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="125.40" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="93.3" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.27" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="674.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="677.68" y="1919.5" ></text>
</g>
<g >
<title>do_cql_test (333 samples, 10.54%; 0.00%)</title><rect x="10.7" y="1957" width="124.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1967.5" >do_cql_test</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="119.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.41" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; +0.03%)</title><rect x="750.5" y="1893" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="753.49" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.03%; +0.03%)</title><rect x="21.6" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="24.58" y="1823.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.06%; 0.00%)</title><rect x="181.0" y="1861" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.03%; 0.00%)</title><rect x="33.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.53" y="1695.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token (1 samples, 0.03%; +0.03%)</title><rect x="36.9" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="39.89" y="1727.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%; +0.03%)</title><rect x="52.6" y="1637" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="55.57" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="102.2" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="105.23" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.13%)</title><rect x="390.9" y="1733" width="1.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="393.89" y="1743.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.63" y="2063.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="935.0" y="1797" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="937.96" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="62.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.28" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; 0.00%)</title><rect x="139.6" y="2005" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.58" y="2015.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (3 samples, 0.09%; 0.00%)</title><rect x="27.6" y="1813" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.55" y="1823.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; 0.00%)</title><rect x="518.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="521.59" y="1807.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="111.9" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="114.94" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (49 samples, 1.55%; +0.03%)</title><rect x="88.0" y="1733" width="18.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="91.04" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.87" y="1935.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="179.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.91" y="1823.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.71" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="98.5" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.50" y="1487.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="25.3" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.31" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (8 samples, 0.25%; -0.19%)</title><rect x="763.6" y="1877" width="2.9" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="766.56" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; -0.03%)</title><rect x="862.1" y="1733" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="865.14" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1407.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (7 samples, 0.22%; +0.06%)</title><rect x="137.0" y="2005" width="2.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="139.96" y="2015.5" ></text>
</g>
<g >
<title>secondary_index::secondary_index_manager::list_indexes (1 samples, 0.03%; +0.03%)</title><rect x="22.3" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="25.32" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; 0.00%)</title><rect x="622.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="625.41" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="595.5" y="1797" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="598.52" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="88.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="121.7" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.16%; 0.00%)</title><rect x="74.2" y="1749" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.23" y="1759.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="122.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.40" y="1743.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%; +0.03%)</title><rect x="145.9" y="1957" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="148.92" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1727.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.05" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; 0.00%)</title><rect x="726.6" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="729.59" y="1887.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.09%; +0.06%)</title><rect x="258.7" y="1877" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="261.70" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (3 samples, 0.09%; 0.00%)</title><rect x="19.3" y="1781" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.34" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.54" y="1983.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="1106.4" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.35" y="1743.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.03%)</title><rect x="1088.4" y="1829" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1091.43" y="1839.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (48 samples, 1.52%; -0.03%)</title><rect x="1060.4" y="1733" width="17.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1063.42" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.09%; 0.00%)</title><rect x="103.4" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1711.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="619.4" y="1813" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="622.42" y="1823.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.03%)</title><rect x="968.6" y="1765" width="2.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="971.56" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1551.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="121.7" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="26.4" y="1637" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="29.43" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%; +0.03%)</title><rect x="1033.5" y="1749" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1036.54" y="1759.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; -0.03%)</title><rect x="758.7" y="1909" width="1.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="761.70" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.06%)</title><rect x="744.1" y="1909" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="747.14" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="13.7" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="16.73" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="119.4" y="1509" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="122.41" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="175.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.03%; 0.00%)</title><rect x="1114.6" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.57" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="90.7" y="1669" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="93.66" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; +0.03%)</title><rect x="399.8" y="1813" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="402.85" y="1823.5" ></text>
</g>
<g >
<title>schema::has_static_columns (1 samples, 0.03%; +0.03%)</title><rect x="862.5" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="865.51" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="997" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.22%; +0.16%)</title><rect x="1134.4" y="1877" width="2.6" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1137.36" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.60%; -0.03%)</title><rect x="1014.1" y="1669" width="7.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1017.12" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.44%; 0.00%)</title><rect x="142.6" y="2005" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.56" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1711.5" ></text>
</g>
<g >
<title>keyspace::create_replication_strategy (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="73.1" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1663.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="865.5" y="1781" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="868.50" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="69.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.00" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="104.5" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.47" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="869" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="879.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.13%; 0.00%)</title><rect x="88.8" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1679.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%; +0.03%)</title><rect x="936.1" y="1845" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="939.08" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::modification_statement*, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="130.2" y="1765" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="133.24" y="1775.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%; 0.00%)</title><rect x="181.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.40" y="1823.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (46 samples, 1.46%; +0.03%)</title><rect x="511.1" y="1829" width="17.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="514.13" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (52 samples, 1.65%; +0.28%)</title><rect x="595.9" y="1797" width="19.4" height="15.0" fill="rgb(255,75,75)" rx="2" ry="2" />
<text  x="598.89" y="1807.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (226 samples, 7.15%; +0.32%)</title><rect x="769.2" y="1893" width="84.4" height="15.0" fill="rgb(255,60,60)" rx="2" ry="2" />
<text  x="772.16" y="1903.5" >single_no..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.11" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.09%; 0.00%)</title><rect x="68.3" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.25" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (268 samples, 8.48%; -0.06%)</title><rect x="30.9" y="1829" width="100.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="33.91" y="1839.5" >cql3_parser:..</text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; 0.00%)</title><rect x="383.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="386.42" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; 0.00%)</title><rect x="592.2" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="595.16" y="1807.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (2 samples, 0.06%; 0.00%)</title><rect x="179.9" y="1829" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.91" y="1839.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; -0.03%)</title><rect x="828.5" y="1749" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="831.53" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1519.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="179.5" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="182.53" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="179.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.53" y="1839.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.03%)</title><rect x="896.5" y="1749" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="899.49" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.03%; +0.03%)</title><rect x="884.9" y="1845" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="887.92" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="82.1" y="1733" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="85.07" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; +0.03%)</title><rect x="78.3" y="1749" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="81.34" y="1759.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.38%; 0.00%)</title><rect x="413.3" y="1845" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="416.29" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.9" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.91" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="619.0" y="1797" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="622.04" y="1807.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%; +0.03%)</title><rect x="35.0" y="1541" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="38.02" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="2005" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="2015.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="735.9" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="738.92" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="981" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.16%; 0.00%)</title><rect x="31.7" y="1685" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.66" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="78.0" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.96" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="125.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.39" y="1807.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.09%; +0.03%)</title><rect x="174.3" y="1925" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="177.30" y="1935.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="654.9" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.89" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; 0.00%)</title><rect x="864.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="867.38" y="1743.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.16%; +0.03%)</title><rect x="1095.5" y="1845" width="1.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1098.53" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (2 samples, 0.06%; +0.06%)</title><rect x="26.8" y="1845" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="29.80" y="1855.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (3 samples, 0.09%; 0.00%)</title><rect x="132.9" y="1845" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.85" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="102.2" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.23" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (15 samples, 0.47%; 0.00%)</title><rect x="91.4" y="1717" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.41" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="120.2" y="1653" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="123.16" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.03%)</title><rect x="946.9" y="1797" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="949.91" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::__uniq_ptr_impl (3 samples, 0.09%; 0.00%)</title><rect x="107.8" y="1701" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.84" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.09%; +0.06%)</title><rect x="89.2" y="1557" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="92.16" y="1567.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="72.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.99" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.19%; 0.00%)</title><rect x="33.5" y="1701" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.53" y="1711.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (3 samples, 0.09%; 0.00%)</title><rect x="1115.7" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.69" y="1711.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.06%)</title><rect x="821.1" y="1765" width="1.1" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="824.06" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.91" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="103.4" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="125.8" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.76" y="1791.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="691.1" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="694.11" y="1871.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.41%; 0.00%)</title><rect x="241.9" y="1861" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="244.89" y="1871.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%; 0.00%)</title><rect x="1153.0" y="2053" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.03" y="2063.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (158 samples, 5.00%; +0.09%)</title><rect x="974.9" y="1781" width="59.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="977.91" y="1791.5" >servic..</text>
</g>
<g >
<title>malloc (1 samples, 0.03%; +0.03%)</title><rect x="647.4" y="1861" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="650.42" y="1871.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit_item (1 samples, 0.03%; 0.00%)</title><rect x="855.8" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.79" y="1887.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.03%)</title><rect x="519.0" y="1797" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="521.97" y="1807.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (7 samples, 0.22%; +0.03%)</title><rect x="1111.2" y="1669" width="2.6" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1114.21" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="120.5" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (24 samples, 0.76%; -0.03%)</title><rect x="857.7" y="1845" width="8.9" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="860.66" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; 0.00%)</title><rect x="189.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.24" y="1919.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::operator== (1 samples, 0.03%; 0.00%)</title><rect x="79.8" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.83" y="1743.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%; 0.00%)</title><rect x="144.8" y="1973" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.80" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.06%)</title><rect x="646.7" y="1829" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="649.68" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="128.4" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.37" y="1791.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1089.9" y="1829" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1092.92" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 10.63%; 0.00%)</title><rect x="10.4" y="2037" width="125.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="2047.5" >[unknown]</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="64.1" y="1557" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="67.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="115.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.30" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="103.4" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.35" y="1615.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="179.9" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="182.91" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (20 samples, 0.63%; -0.03%)</title><rect x="166.8" y="1909" width="7.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="169.84" y="1919.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="73.1" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.11" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="110.1" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.08" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="727.7" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.71" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (2 samples, 0.06%; +0.03%)</title><rect x="113.8" y="1733" width="0.8" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="116.81" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="97.4" y="1653" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="100.38" y="1663.5" ></text>
</g>
<g >
<title>std::forward&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="122.8" y="1765" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="125.77" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; 0.00%)</title><rect x="52.6" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.57" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; 0.00%)</title><rect x="689.6" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="692.62" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="715.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="718.01" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="1110.8" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.84" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (4 samples, 0.13%; 0.00%)</title><rect x="26.1" y="1861" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.06" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="1743.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.03%; -0.03%)</title><rect x="1116.1" y="1653" width="0.3" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1119.06" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="690.0" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="692.99" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="864.4" y="1717" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="867.38" y="1727.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.06%; 0.00%)</title><rect x="181.0" y="1845" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="112.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.32" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::maybe_advance_to (1 samples, 0.03%; +0.03%)</title><rect x="147.0" y="1957" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="150.04" y="1967.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="319.9" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="322.94" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="129.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.12" y="1807.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (3 samples, 0.09%; +0.03%)</title><rect x="1107.1" y="1765" width="1.1" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1110.10" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.13%; 0.00%)</title><rect x="93.3" y="1525" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.27" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.69" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.03%; 0.00%)</title><rect x="1189.3" y="2021" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.25" y="2031.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (2 samples, 0.06%; 0.00%)</title><rect x="179.9" y="1877" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.91" y="1887.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.5" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.53" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="129.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.49" y="1791.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="85.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.43" y="1695.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_backtracking (1 samples, 0.03%; +0.03%)</title><rect x="26.1" y="1797" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="29.06" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="121.7" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.65" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="124.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.64" y="1775.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.03%; +0.03%)</title><rect x="758.3" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="761.33" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="70.5" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.49" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (4 samples, 0.13%; 0.00%)</title><rect x="32.0" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.03" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="64.1" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.15" y="1631.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (2 samples, 0.06%; -0.03%)</title><rect x="515.6" y="1813" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="518.61" y="1823.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.09%)</title><rect x="182.1" y="1925" width="1.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="185.15" y="1935.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (2 samples, 0.06%; +0.06%)</title><rect x="590.3" y="1813" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="593.29" y="1823.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (7 samples, 0.22%; 0.00%)</title><rect x="97.0" y="1701" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.01" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="789" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="799.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; 0.00%)</title><rect x="856.5" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="859.54" y="1935.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (5 samples, 0.16%; 0.00%)</title><rect x="27.6" y="1845" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.55" y="1855.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; -0.03%)</title><rect x="822.2" y="1765" width="1.1" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="825.18" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (5 samples, 0.16%; 0.00%)</title><rect x="690.4" y="1877" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="693.37" y="1887.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,240 samples, 39.24%; +0.06%)</title><rect x="190.4" y="1909" width="463.0" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="193.36" y="1919.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="115.3" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="118.30" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (2 samples, 0.06%; +0.06%)</title><rect x="872.6" y="1893" width="0.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="875.59" y="1903.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (10 samples, 0.32%; 0.00%)</title><rect x="1111.2" y="1701" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.21" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (13 samples, 0.41%; 0.00%)</title><rect x="69.4" y="1765" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.37" y="1775.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.03%; +0.03%)</title><rect x="754.2" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="757.22" y="1919.5" ></text>
</g>
<g >
<title>database::has_keyspace (6 samples, 0.19%; +0.03%)</title><rect x="847.2" y="1877" width="2.2" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="850.20" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.16%; 0.00%)</title><rect x="97.8" y="1605" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.75" y="1615.5" ></text>
</g>
<g >
<title>sstables::mc::writer::drain_tombstones (1 samples, 0.03%; 0.00%)</title><rect x="144.8" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.80" y="1967.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; +0.03%)</title><rect x="945.4" y="1813" width="3.0" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="948.41" y="1823.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.5" y="1381" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.50" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="765.8" y="1845" width="0.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="768.80" y="1855.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (248 samples, 7.85%; +0.09%)</title><rect x="761.3" y="1909" width="92.6" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="764.32" y="1919.5" >single_node..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%; -0.16%)</title><rect x="653.4" y="1909" width="1.5" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="656.40" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (1 samples, 0.03%; 0.00%)</title><rect x="727.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="730.34" y="1935.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (1 samples, 0.03%; -0.03%)</title><rect x="1152.3" y="1909" width="0.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1155.28" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (15 samples, 0.47%; -0.06%)</title><rect x="1111.2" y="1765" width="5.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1114.21" y="1775.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1109.7" y="1781" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1112.72" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (6 samples, 0.19%; -0.06%)</title><rect x="48.8" y="1701" width="2.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="51.84" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; -0.06%)</title><rect x="981.6" y="1733" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="984.63" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.13%; 0.00%)</title><rect x="88.8" y="1701" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.79" y="1711.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="107.8" y="1685" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="110.84" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.6" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.57" y="1695.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="135.5" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.47" y="1791.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="99.6" y="1621" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="102.62" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="65.3" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.27" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="60.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.41" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.84" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (2 samples, 0.06%; +0.03%)</title><rect x="173.6" y="1893" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="176.56" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.03%; +0.03%)</title><rect x="1117.2" y="1909" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1120.18" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="75.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.72" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="58.9" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.92" y="1695.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.03%; +0.03%)</title><rect x="836.4" y="1813" width="0.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="839.37" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="70.9" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.87" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (1 samples, 0.03%; +0.03%)</title><rect x="846.8" y="1877" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="849.83" y="1887.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="1118.3" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.30" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="10.4" y="965" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.37" y="975.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="181.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="184.03" y="1695.5" ></text>
</g>
</g>
</svg>
